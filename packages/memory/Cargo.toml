[package]
name = "fluent_ai_memory"
version = "0.1.0"
edition = "2024"
description = "Cognitive Memory System with quantum-inspired routing and emergent evolution"
authors = ["David Maple<david@cyrup.ai>"]
license = "MIT"

[dependencies]
# SurrealDB and its features
fluent-ai-workspace-hack = { path = "../../workspace-hack" }
surrealdb = { version = "2.3.7", features = ["http", "protocol-http", "kv-surrealkv", "kv-mem"] }

# Async runtime
tokio = { version = "1.47.0", features = ["full"] }
tokio-stream = "0.1.17"
futures = { version = "0.3.31" }
futures-util = { version = "0.3.31" }

# Serialization
serde = { version = "1.0.219", features = ["derive"] }
serde_json = { version = "1.0.141" }

# Utilities
uuid = { version = "1.17.0", features = ["v4", "serde"] }
chrono = { version = "0.4.41", features = ["serde"] }
thiserror = { version = "2.0.12" }
anyhow = { version = "1.0.98" }
tracing = { version = "0.1.41" }
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
memchr = { version = "2.7.5" }
# reqwest removed - replaced with fluent_ai_http3 per project mandate
fluent_ai_http3 = { path = "../http3" }
fluent_ai_domain = { path = "../domain" }
# fluent_ai_provider = { path = "../provider" } # REMOVED: Use model-info + http3 directly
model-info = { path = "../model-info" }
fluent_ai_async = { package = "fluent_ai_async", path = "../async-stream" }
bincode = { version = "2.0.1" }
md5 = "0.8.0"
cyrup_sugars = { git = "https://github.com/cyrup-ai/cyrup-sugars", features = ["all"] }
prometheus = { version = "0.14.0" }

# Cognitive system dependencies
rand = "0.9.2"
fastrand = "2.3.0"
base64 = { version = "0.22.1" }
ndarray = { version = "0.16.1" }
nalgebra = { version = "0.33.2", features = ["serde-serialize"] }
petgraph = { version = "0.8.2" }
ordered-float = { version = "5.0.0" }
dashmap = { version = "7.0.0-rc2" }
async-channel = { version = "2.5.0" }

# Missing dependencies for cognitive features
sha2 = { version = "0.11.0-rc.0" }
walkdir = { version = "2.5.0" }
num_cpus = { version = "1.17.0" }
num-complex = { version = "0.4.6" }

# Shared SIMD operations
fluent-ai-simd = { path = "../simd" }

# Zero-allocation and lock-free operations
arc-swap = { version = "1.7.1" }
crossbeam = { version = "0.8.4" }
crossbeam-channel = { version = "0.5.15" }
crossbeam-queue = { version = "0.3.12" }
crossbeam-skiplist = "0.1.3"
crossbeam-utils = "0.8.21"
arrayvec = "0.7.6"
smallvec = "2.0.0-alpha.11"
atomic-counter = { version = "1.0.1" }
wide = { version = "0.7.33" }
regex = { version = "1.11.1" }

# Vector store implementations
faiss = { version = "0.12.1", optional = true }
hnsw = { version = "0.11.0", optional = true }
instant-distance = { version = "0.6.1" }

# HTTP API (optional)
axum = { version = "0.8.4", optional = true }
tower = { version = "0.5.2", optional = true }
tower-http = { version = "0.6.6", features = ["cors", "trace"], optional = true }
atomic = "0.6.1"
once_cell = "1.21.3"
jsonwebtoken = "9.3.1"
csv = "1.3.1"

[dev-dependencies]
# Testing
mockall = { version = "0.13.1" }
mockito = { version = "1.7.0" }
assert_approx_eq = { version = "1.1.0" }
criterion = { version = "0.7.0" }
tempfile = { version = "3.20.0" }
rand = { version = "0.9.2" }
gix = { version = "0.73.0" }

[features]
default = ["surreal-vector", "openai-embeddings", "cognitive", "api"]
api = ["axum", "tower", "tower-http"]
faiss-vector = ["faiss"]
hnsw-vector = ["hnsw"]
surreal-vector = []
openai-embeddings = []
custom-embeddings = []
cognitive = []
quantum-routing = ["cognitive"]
evolution = ["cognitive"]
full-cognitive = ["cognitive", "quantum-routing", "evolution"]

[[bench]]
name = "memory_benchmarks"
path = "benches/memory_benchmarks.rs"
harness = false

[[bench]]
name = "python_comparison_bench"
path = "benches/python_comparison_bench.rs"
harness = false

[[example]]
name = "basic_usage"
path = "examples/basic_usage.rs"

[[example]]
name = "memory_types"
path = "examples/memory_types.rs"

[[example]]
name = "async_patterns"
path = "examples/async_patterns.rs"

[lib]
name = "fluent_ai_memory"
path = "src/lib.rs"

[[test]]
name = "state_tests"
path = "tests/cognitive/state_tests.rs"
