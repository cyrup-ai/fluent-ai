//! Fluent AI Provider Library
//!
//! This crate provides provider and model implementations for AI services.
//! The core domain types are now defined in the domain package.

// Constants for bounded arrays in API structures
pub const MAX_MESSAGES: usize = 128;
pub const MAX_TOOLS: usize = 64;
pub const MAX_DOCUMENTS: usize = 32;
pub const MAX_CHOICES: usize = 16;
pub const MAX_EMBEDDINGS: usize = 2048;
pub const MAX_IMAGES: usize = 16;

// CRITICAL: Import model information from model-info package (single source of truth)
pub use model_info::{Model, ModelInfo};

// Provider client implementations
pub mod clients;

// Provider discovery
pub mod discovery;

// Image processing implementations
pub mod image_processing;

// Re-export Candle client for convenience
#[cfg(feature = "candle")]
pub use clients::candle::{CandleCompletionClient, CandleModel, CandleProvider};



// Security and credential management
pub mod security;

// Client traits (NOT domain objects)
pub mod client;

// Universal completion provider trait
pub mod completion_provider;

// Streaming interface implementations
pub mod streaming;

// Embedding interface implementations
pub mod embeddings;

// Transcription interface implementations
pub mod transcription;

// Re-export client traits for provider implementations
pub use client::*;
pub use completion_provider::*;
pub use cyrup_sugars::*;
pub use embeddings::*;
// Use canonical streaming types from fluent-ai-async
pub use fluent_ai_async::{AsyncStreamSender, channel};
// Re-export fluent-ai types for provider implementations
pub use fluent_ai_domain as domain;
pub use fluent_ai_domain::AsyncTask;
// pub use crate::Provider; // TODO: Define Provider trait

// Re-export json_util for provider implementations
pub use fluent_ai_domain::json_util;
pub use fluent_ai_domain::spawn_async;

pub use streaming::*;
pub use transcription::*;

// Extension methods for Providers enum will be auto-generated by build.rs
