[package]
name = "fluent_ai_provider"
version = "0.1.0"
edition = "2024"
# Build script for code generation
build = "build.rs"

[dependencies]
progresshub = { path = "../../../progresshub/tui" }
fluent-ai-workspace-hack = { path = "../../workspace-hack" }
yyaml = { git = "https://github.com/cyrup-ai/yyaml", branch = "main"}
serde = { version = "1.0.219", features = ["derive"] }
cyrup_sugars = { git = "https://github.com/cyrup-ai/cyrup-sugars", features = ["all"] }
fluent_ai_domain = { version = "0.1.0", path = "../domain", default-features = false }
fluent_ai_http3 = { path = "../http3" }
tokio = { version = "1.46.1", features = ["full"] }
tokio-stream = "0.1.17"
serde_json = "1.0.141"
thiserror = "2.0.12"
futures = "0.3.31"
hashbrown = { version = "0.15.4", features = ["serde"] }
http = "1.3.1"
once_cell = "1.21.3"
fastrand = "2.3.0"
regex = "1.11.1"
base64 = "0.22.1"
bytes = "1.10.1"
pest = "2.8.1"
pest_derive = "2.8.1"
futures-util = "0.3.31"
async-stream = "0.3.6"
mime_guess = "2.0.5"
tracing = "0.1.41"
arrayvec = "0.7.6"
dashmap = "7.0.0-rc2"
num_cpus = "1.16.0"
termcolor = { path = "../termcolor" }

# Missing dependencies that are causing compilation errors
async-trait = "0.1.85"
arc-swap = "1.7.1" 
smallvec = "2.0.0-alpha.11"
crossbeam-channel = "0.5.15"
crossbeam-queue = "0.3.12"
crossbeam-utils = "0.8.21"
crossbeam = "0.8.4"
log = "0.4.24"
hmac = "0.12.1"
sha2 = "0.10.8"
rand = "0.8.5"

# Additional missing dependencies for compilation
reqwest = { version = "0.12.11", features = ["json", "stream", "multipart"] }
atomic_counter = "1.0.2"
rand_pcg = "0.3.1"
rayon = "1.10.0"
memmap2 = "0.9.7"
bincode = "2.0.1"
hostname = "0.4.0"

# Candle dependencies (optional, enabled by features) - TEMPORARILY DISABLED FOR COMPILATION TEST
# candle-core = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false }
# candle-nn = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false }
# candle-transformers = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false }
# candle-flash-attn = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false, optional = true }
# candle-onnx = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false, optional = true }
# candle-datasets = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false, optional = true }

# — Optional acceleration dependencies —
half = { version = "2.6.0", optional = true }
rubato     = { version = "1.0.0-preview.0", optional = true }                                                 # FFT resampler
cpal = { version = "0.16.0", optional = true }
symphonia = { version = "0.5.4", optional = true }
image = { version = "0.25.6", optional = true }
palette = { version = "0.7.6", optional = true }
enterpolation = { version = "0.3.0", optional = true }
dioxus = { git = "https://github.com/DioxusLabs/dioxus", branch = "main", optional = true }

tokenizers = { version = "0.21.2", optional = true }
safetensors = { version = "0.6.0", optional = true }

# Build system dependencies
[build-dependencies]
fluent_ai_domain = { path = "../domain", default-features = false }
fluent_ai_http3 = { path = "../http3" }
# For async build script
tokio = { version = "1.46.1", features = ["full"] }
futures = "0.3.31"
# For parsing Rust code
syn = { version = "2.0.104", features = ["full", "extra-traits"] }
quote = "1.0.40"
proc-macro2 = "1.0.95"

# For YAML processing
yyaml = { git = "https://github.com/cyrup-ai/yyaml", branch = "main"}
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.141"

# For incremental build system
dashmap = "7.0.0-rc2"
num_cpus = "1.16.0"
tracing = "0.1.41"

# For file hashing and caching
sha2 = "0.11.0-rc.0"
hex = "0.4.3"
bincode = "2.0.1"

# General utilities
thiserror = "2.0.12"
tera = "1.20.0"
chrono = "0.4.41"

# Build system dependencies for zero-allocation processing
arrayvec = "0.7.6"              # Stack-allocated vectors for small collections
crossbeam = "0.8.4"             # Lock-free data structures and channels
rustc-hash = "2.1.1"            # Fast hash maps optimized for string keys
memmap2 = "0.9.7"               # Memory-mapped file I/O for caching
wide = "0.7.33"                  # SIMD acceleration for string processing
arc-swap = "1.7.1"              # Atomic lock-free reference swapping
smallvec = "2.0.0-alpha.11"   # Stack-allocated vectors for small collections

log = "0.4.27"
lru = "0.16.0"
twox-hash = "2.1.1"
parking_lot = "0.12.4"
dioxus = { git = "https://github.com/DioxusLabs/dioxus", branch = "main", optional = true }
js-sys = { version = "0.3.77", optional = true }
wasm-bindgen = { version = "0.2.100", optional = true }
gloo-timers = { version = "0.3", optional = true, features = ["futures"] }


[features]
default = []  # Temporarily disabled candle features for testing
# --- Candle backend features (required for all candle crates) ----- TEMPORARILY DISABLED
# cuda = ["candle-core/cuda", "candle-nn/cuda", "dep:cudarc", "dep:half", "dep:bindgen_cuda", "candle-transformers/cuda"]
# cudnn = ["candle-core/cudnn", "candle-nn/cudnn", "candle-transformers/cudnn"]
# metal = ["candle-core/metal", "candle-nn/metal", "candle-transformers/metal"]
# accelerate = ["dep:accelerate-src", "candle-core/accelerate", "candle-nn/accelerate", "candle-transformers/accelerate"]
# mkl = ["dep:intel-mkl-src", "candle-core/mkl", "candle-nn/mkl", "candle-transformers/mkl"]
# flash-attn = ["cuda", "dep:candle-flash-attn", "candle-transformers/flash-attn"]
# nccl = ["cuda", "cudarc/nccl", "dep:half"]
# onnx = ["dep:candle-onnx"]
# UI features
ui = ["dioxus", "js-sys", "wasm-bindgen", "gloo-timers"]

# Audio processing features - TEMPORARILY DISABLED
# microphone = ["dep:cpal", "dep:rubato"]
# encodec = ["dep:cpal", "dep:symphonia", "dep:rubato"]
# mimi = ["dep:cpal", "dep:symphonia", "dep:rubato"]
# snac = ["dep:cpal", "dep:symphonia", "dep:rubato"]
# depth_anything_v2 = ["dep:palette", "dep:enterpolation"]

# OS-specific acceleration dependencies
[target.'cfg(all(target_os = "linux", target_arch = "x86_64"))'.dependencies]
cudarc = { version = "0.16.6", optional = true, default-features = false, features = ["cublas", "cublaslt", "cudnn", "curand", "dynamic-linking", "f16", "std"] }
intel-mkl-src = { version = "0.8.1", optional = true }
bindgen_cuda = { version = "0.1.5", optional = true }

[target.'cfg(all(target_os = "windows", target_arch = "x86_64"))'.dependencies]
cudarc = { version = "0.16.6", optional = true, default-features = false, features = ["cublas", "cublaslt", "cudnn", "curand", "dynamic-linking", "f16", "std"] }
intel-mkl-src = { version = "0.8.1", optional = true }
bindgen_cuda = { version = "0.1.5", optional = true }

[target.'cfg(target_os = "macos")'.dependencies]
accelerate-src = { version = "0.3.2", optional = true }


[lib]
name = "fluent_ai_provider"
path = "src/lib.rs"
