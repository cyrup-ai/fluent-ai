[package]
name = "fluent_ai_http3"
version = "0.1.0"
edition = "2024"
description = "Zero-allocation HTTP/3 (QUIC) client with HTTP/2 fallback for AI providers"
license = "MIT"
repository = "https://github.com/cyrup-ai/fluent-ai"
keywords = ["http3", "quic", "ai", "zero-allocation", "blazing-fast"]
categories = ["network-programming", "web-programming::http-client"]

[dependencies]
fluent_ai_async = { package = "fluent_ai_async", path = "../async-stream" }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = { version = "1.0.142" }
serde_urlencoded = "0.7.1"
thiserror = "2.0.12"
hashbrown = { version = "0.15.4", features = ["serde"] }
http = "1.3.1"
once_cell = { version = "1.21.3" }
tracing = "0.1.41"
bytes = "1.10.1"
pin-project-lite = "0.2.16"
fastrand = "2.3.0"
url = "2.5.4"
crossbeam = "0.8.4"
crossbeam-skiplist = "0.1.3"
chrono = { version = "0.4.41", features = ["serde"] }
base64 = "0.22.1"
crossbeam-queue = "0.3.12"
crossbeam-channel = "0.5.15"
lazy_static = "1.5.0"
urlencoding = "2.1.3"
log = "0.4.27"
regex = "1.11.1"
libc = "0.2.174"
cyrup_sugars = { git = "https://github.com/cyrup-ai/cyrup-sugars", branch = "main", package = "cyrup_sugars", features = ["all"] }
futures-executor = "0.3.31" # Pure AsyncStream architecture
tokio = { version = "1.47.1", features = ["fs", "rt", "macros", "net"] }
tokio-rustls = "0.26.2"
sync_wrapper = { version = "1.0", features = ["futures"] }
mime_guess = { version = "2.0", default-features = false }
arrayvec = "0.7.6"
smallvec = "1.15.1"
heapless = "0.8.0"
crossbeam-utils = "0.8.21"
cache-padded = "1.3.0"
atomic = "0.6.1"
futures = "0.3.31"
futures-util = { version = "0.3.31", default-features = false, features = ["std", "alloc"] }
hyper-util = { version = "0.1", features = ["http1", "http2", "client", "client-legacy"] }
hickory-resolver = { version = "0.25" }
dashmap = "6.1.0"
rustls-native-certs = "0.8"
wasm-bindgen-futures = { version = "0.4", optional = true }
js-sys = { version = "0.3.77", optional = true }
web-sys = { version = "0.3", features = ["AbortController", "AbortSignal", "Request", "Response", "Headers", "console", "Window", "RequestInit", "RequestMode", "RequestCredentials", "RequestCache"], optional = true }
wasm-streams = { version = "0.4", optional = true }
wasm-bindgen = { version = "0.2", optional = true }

cookie_store = "0.22.0"
parking_lot = "0.12.4"
rustls = { version = "0.23.31", optional = true }
rustls-pki-types = { version = "1.12.0", features = ["std"], optional = true }
hyper-rustls = { version = "0.27", optional = true }
hyper-tls = { version = "0.6", optional = true }
native-tls-crate = { version = "0.2", optional = true, package = "native-tls" }
quiche = { version = "0.24.5", features = ["boringssl-vendored"] }
uuid = "1.18.0"
webpki-roots = "1"

# Elite TLS dependencies aligned with cryypt
anyhow = "1.0"
ring = "0.17"
x509-cert = { version = "0.2.5", features = ["builder", "pem", "sct"] }
x509-parser = "0.17.0"
x509-ocsp = "0.2.1"
der = { version = "0.7.10", features = ["alloc", "derive", "flagset", "oid", "pem", "real", "std"] }
zeroize = { version = "1.8", features = ["derive"] }
rcgen = { version = "0.14.3", features = ["pem", "x509-parser"] }
hex = "0.4"
webpki = "0.22"
rand = "0.8"
pem = "3.0"
rustls-pemfile = "2.1"
hostname = "0.4"
const-oid = "0.9"
spki = "0.7"
oid = "0.2"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
encoding_rs = { version = "0.8" }
http-body = "1"
http-body-util = "0.1"
hyper = { version = "1.6.0", features = ["http1", "client"] }
hyper-util = { version = "0.1", features = ["http1", "client", "client-legacy"] }
percent-encoding = "2.3.1"
mime = { version = "0.3.17" }
hyper-rustls = { version = "0.27", default-features = false, optional = true, features = ["http1", "tls12"] }
rustls = { version = "0.23", optional = true, default-features = false, features = ["std", "tls12"] }
webpki-roots = { version = "1", optional = true }
rustls-native-certs = { version = "0.8", optional = true }
h2 = "0.4.7"

cookie_crate = { version = "0.18.1", package = "cookie" }
cookie_store = { version = "0.22.0" }
hickory-resolver = { version = "0.25" }
flate2 = { version = "1.1.2" }
brotli_crate = { package = "brotli", version = "8.0.1" }
zstd_crate = { package = "zstd", version = "0.13.3" }
keyring = "3.6.3"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
env_logger = "0.11.8"
hyper = { version = "1.6.0", default-features = false, features = ["http1", "http2", "client", "server"] }
hyper-util = { version = "0.1", features = ["http1", "http2", "client", "client-legacy", "server-auto", "server-graceful"] }
serde = { version = "1.0.219", features = ["derive"] }
flate2 = "1.1.2"
brotli_crate = { package = "brotli", version = "8.0.1" }
zstd_crate = { package = "zstd", version = "0.13.3" }
doc-comment = "0.3"
futures-util = { version = "0.3.31", default-features = false, features = ["std", "alloc"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
js-sys = "0.3.77"
serde_json = "1.0.142"
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
wasm-streams = { version = "0.4", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
version = "0.3"
features = [
    "AbortController",
    "AbortSignal",
    "Headers",
    "Request",
    "RequestInit",
    "RequestMode",
    "Response",
    "Window",
    "FormData",
    "Blob",
    "BlobPropertyBag",
    "ServiceWorkerGlobalScope",
    "RequestCredentials",
    "File",
    "ReadableStream",
    "RequestCache"
]

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
wasm-bindgen-test = "0.3"

[target.wasm32-unknown-unknown.dependencies]
js-sys = "0.3.77"
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
wasm-streams = "0.4"
web-sys = { version = "0.3", features = ["AbortController", "AbortSignal", "Request", "Response", "Headers", "console", "Window"] }

[dev-dependencies]
env_logger = "0.11.8"
axum = "0.8.4"
chrono = { version = "0.4.41", features = ["serde"] }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.142"
criterion = { version = "0.7.0", features = ["html_reports"] }
jemallocator = "0.5.4"
dhat = "0.3.3"
tower = { version = "0.5.2", default-features = false, features = ["limit"] }
num_cpus = "1.17.0"
libc = "0.2.174"

[lib]
name = "fluent_ai_http3"
path = "src/lib.rs"



[features]
default = ["rustls"]
rustls = ["rustls-tls-native-roots"]
native-tls = ["default-tls"]

# WASM-specific features (preserved for target-specific compilation)
wasm = ["dep:wasm-bindgen", "dep:wasm-bindgen-futures", "dep:js-sys", "dep:web-sys", "dep:wasm-streams"]

# Internal TLS features (preserved for backend selection)
default-tls = ["dep:hyper-tls", "dep:native-tls-crate", "__tls"]
rustls-tls-native-roots = ["rustls-tls-native-roots-no-provider", "__rustls-ring"]
rustls-tls-native-roots-no-provider = ["dep:rustls-native-certs", "__rustls"]
__tls = ["dep:rustls-pki-types"]
__rustls = ["dep:hyper-rustls", "dep:rustls", "__tls"]
__rustls-ring = ["hyper-rustls?/ring", "rustls?/ring"]

[[example]]
name = "fluent_builder"
test = false
