    Blocking waiting for file lock on build directory
warning: missing documentation for a struct field
  --> packages/domain/src/agent/chat.rs:50:5
   |
50 |     pub injected_context: String,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> packages/domain/src/lib.rs:6:9
   |
6  | #![warn(missing_docs)]
   |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/chat.rs:51:5
   |
51 |     pub relevance_score: f64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/chat.rs:52:5
   |
52 |     pub memory_nodes_used: usize}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/chat.rs:57:5
   |
57 |     pub response: String,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/chat.rs:58:5
   |
58 |     pub context_injection: ContextInjectionResult,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/chat.rs:59:5
   |
59 |     pub memorized_nodes: ArrayVec<MemoryNode, MAX_RELEVANT_MEMORIES>}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/core.rs:45:5
   |
45 |     pub model: &'static dyn Model,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/core.rs:46:5
   |
46 |     pub system_prompt: String,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/core.rs:47:5
   |
47 |     pub context: ZeroOneOrMany<Document>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/core.rs:48:5
   |
48 |     pub tools: ZeroOneOrMany<McpToolData>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/core.rs:49:5
   |
49 |     pub memory: Option<Memory>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/core.rs:50:5
   |
50 |     pub memory_tool: Option<MemoryTool>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/core.rs:51:5
   |
51 |     pub temperature: Option<f64>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/core.rs:52:5
   |
52 |     pub max_tokens: Option<u64>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/core.rs:53:5
   |
53 |     pub additional_params: Option<Value>}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/agent/role.rs:223:5
    |
223 |     pub fn last(&self) -> AgentConversationMessage {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> packages/domain/src/agent/role.rs:237:1
    |
237 | pub struct AgentConversationMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/agent/role.rs:241:5
    |
241 |     pub fn message(&self) -> &str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/agent/role.rs:261:5
    |
261 |     fn add_to(self, contexts: &mut Option<ZeroOneOrMany<Box<dyn std::any::Any + Send + Sync>>>);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/agent/role.rs:266:5
    |
266 |     fn add_to(self, tools: &mut Option<ZeroOneOrMany<Box<dyn std::any::Any + Send + Sync>>>);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/agent/role.rs:271:5
    |
271 |     fn into_history(self) -> Option<ZeroOneOrMany<(MessageRole, String)>>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/types.rs:17:5
   |
17 |     pub messages: Option<ZeroOneOrMany<(MessageRole, String)>>}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> packages/domain/src/agent/types.rs:20:5
   |
20 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/agent/types.rs:24:5
   |
24 |     pub fn last(&self) -> AgentConversationMessage {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> packages/domain/src/agent/types.rs:44:1
   |
44 | pub struct AgentConversationMessage {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/agent/types.rs:48:5
   |
48 |     pub fn message(&self) -> &str {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/agent/types.rs:57:5
   |
57 |     pub chunk_handler: Box<dyn Fn(ChatMessageChunk) -> ChatMessageChunk + Send + Sync>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/agent/types.rs:63:5
   |
63 |     fn add_to(self, contexts: &mut Option<ZeroOneOrMany<Box<dyn std::any::Any + Send + Sync>>>);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/agent/types.rs:68:5
   |
68 |     fn add_to(self, tools: &mut Option<ZeroOneOrMany<Box<dyn std::any::Any + Send + Sync>>>);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/agent/types.rs:73:5
   |
73 |     fn into_history(self) -> Option<ZeroOneOrMany<(MessageRole, String)>>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/parsing.rs:17:5
   |
17 |     InvalidSyntax { detail: String },
   |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/commands/parsing.rs:17:21
   |
17 |     InvalidSyntax { detail: String },
   |                     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/parsing.rs:20:5
   |
20 |     MissingParameter { parameter: String },
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/commands/parsing.rs:20:24
   |
20 |     MissingParameter { parameter: String },
   |                        ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/parsing.rs:23:5
   |
23 |     InvalidParameterValue { parameter: String, value: String },
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/commands/parsing.rs:23:29
   |
23 |     InvalidParameterValue { parameter: String, value: String },
   |                             ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/commands/parsing.rs:23:48
   |
23 |     InvalidParameterValue { parameter: String, value: String },
   |                                                ^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/parsing.rs:26:5
   |
26 |     UnknownParameter { parameter: String },
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/commands/parsing.rs:26:24
   |
26 |     UnknownParameter { parameter: String },
   |                        ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/parsing.rs:29:5
   |
29 |     TypeMismatch { expected: String, actual: String }}
   |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/commands/parsing.rs:29:20
   |
29 |     TypeMismatch { expected: String, actual: String }}
   |                    ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/commands/parsing.rs:29:38
   |
29 |     TypeMismatch { expected: String, actual: String }}
   |                                      ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/response.rs:433:9
    |
433 |         current: u64,
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/response.rs:434:9
    |
434 |         total: u64,
    |         ^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/response.rs:435:9
    |
435 |         message: Arc<str>},
    |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/response.rs:437:21
    |
437 |     PartialResult { data: Value },
    |                     ^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/response.rs:439:16
    |
439 |     Complete { output: CommandOutput }}
    |                ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/response.rs:445:5
    |
445 |     SerializationError { detail: Arc<str> },
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/response.rs:445:26
    |
445 |     SerializationError { detail: Arc<str> },
    |                          ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/response.rs:448:5
    |
448 |     StreamingError { detail: Arc<str> },
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/response.rs:448:22
    |
448 |     StreamingError { detail: Arc<str> },
    |                      ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/response.rs:451:5
    |
451 |     FormatError { detail: Arc<str> }}
    |     ^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/response.rs:451:19
    |
451 |     FormatError { detail: Arc<str> }}
    |                   ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:20:5
   |
20 |     UnknownCommand { command: String },
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/commands/types.rs:20:22
   |
20 |     UnknownCommand { command: String },
   |                      ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:22:5
   |
22 |     InvalidArguments(String),
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:24:5
   |
24 |     InvalidSyntax { detail: String },
   |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/commands/types.rs:24:21
   |
24 |     InvalidSyntax { detail: String },
   |                     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:26:5
   |
26 |     ExecutionFailed(String),
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:28:5
   |
28 |     PermissionDenied,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:30:5
   |
30 |     ParseError(String),
   |     ^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:32:5
   |
32 |     ConfigurationError { detail: String },
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/commands/types.rs:32:26
   |
32 |     ConfigurationError { detail: String },
   |                          ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:34:5
   |
34 |     IoError(String),
   |     ^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:36:5
   |
36 |     NetworkError(String),
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:38:5
   |
38 |     Timeout,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:40:5
   |
40 |     NotFound,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/commands/types.rs:42:5
   |
42 |     InternalError(String)}
   |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:381:9
    |
381 |         command: ImmutableChatCommand,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:382:9
    |
382 |         execution_id: u64,
    |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:383:9
    |
383 |         timestamp_nanos: u64},
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:386:9
    |
386 |         execution_id: u64,
    |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:387:9
    |
387 |         progress_percent: f32,
    |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:388:9
    |
388 |         message: Option<String>},
    |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:391:9
    |
391 |         execution_id: u64,
    |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:392:9
    |
392 |         output: String,
    |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:393:9
    |
393 |         output_type: OutputType},
    |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:396:9
    |
396 |         execution_id: u64,
    |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:397:9
    |
397 |         result: CommandExecutionResult,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:398:9
    |
398 |         duration_nanos: u64},
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:401:9
    |
401 |         execution_id: u64,
    |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:402:9
    |
402 |         error: CommandError,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:403:9
    |
403 |         duration_nanos: u64},
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:405:17
    |
405 |     Cancelled { execution_id: u64, reason: String }}
    |                 ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:405:36
    |
405 |     Cancelled { execution_id: u64, reason: String }}
    |                                    ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:410:5
    |
410 |     Text,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:411:5
    |
411 |     Json,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:412:5
    |
412 |     Html,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:413:5
    |
413 |     Markdown,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:414:5
    |
414 |     Binary}
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:435:5
    |
435 |     All,
    |     ^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:436:5
    |
436 |     Current,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:437:5
    |
437 |     Recent,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:438:5
    |
438 |     Bookmarked}
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:443:5
    |
443 |     List,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:444:5
    |
444 |     Create,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:445:5
    |
445 |     Delete,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:446:5
    |
446 |     Edit,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:447:5
    |
447 |     Use}
    |     ^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:452:5
    |
452 |     List,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:453:5
    |
453 |     Create,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:454:5
    |
454 |     Delete,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:455:5
    |
455 |     Edit,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:456:5
    |
456 |     Execute}
    |     ^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:461:5
    |
461 |     List,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:462:5
    |
462 |     Create,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:463:5
    |
463 |     Switch,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:464:5
    |
464 |     Merge,
    |     ^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:465:5
    |
465 |     Delete}
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:470:5
    |
470 |     List,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:471:5
    |
471 |     New,
    |     ^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:472:5
    |
472 |     Switch,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:473:5
    |
473 |     Delete,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:474:5
    |
474 |     Export,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:475:5
    |
475 |     Import}
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:480:5
    |
480 |     List,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:481:5
    |
481 |     Install,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:482:5
    |
482 |     Remove,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:483:5
    |
483 |     Configure,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:484:5
    |
484 |     Update,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:485:5
    |
485 |     Execute}
    |     ^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:490:5
    |
490 |     Usage,
    |     ^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:491:5
    |
491 |     Performance,
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:492:5
    |
492 |     History,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:493:5
    |
493 |     Tokens,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:494:5
    |
494 |     Costs,
    |     ^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:495:5
    |
495 |     Errors}
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:500:5
    |
500 |     Set,
    |     ^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:501:5
    |
501 |     List,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:502:5
    |
502 |     Create,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:503:5
    |
503 |     Export,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:504:5
    |
504 |     Import,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:505:5
    |
505 |     Edit}
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:510:5
    |
510 |     Info,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:511:5
    |
511 |     Logs,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:512:5
    |
512 |     Performance,
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:513:5
    |
513 |     Memory,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:514:5
    |
514 |     Network,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:515:5
    |
515 |     Cache}
    |     ^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:520:5
    |
520 |     Show,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:521:5
    |
521 |     Search,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:522:5
    |
522 |     Clear,
    |     ^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:523:5
    |
523 |     Export,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:524:5
    |
524 |     Import,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:525:5
    |
525 |     Backup}
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:530:5
    |
530 |     Chat,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:531:5
    |
531 |     Config,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:532:5
    |
532 |     Templates,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:533:5
    |
533 |     Macros}
    |     ^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:544:9
    |
544 |         path: String,
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:545:9
    |
545 |         size_bytes: u64,
    |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:546:9
    |
546 |         mime_type: String},
    |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:674:5
    |
674 |     pub active_executions: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:675:5
    |
675 |     pub total_executions: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:676:5
    |
676 |     pub successful_executions: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/types.rs:677:5
    |
677 |     pub failed_executions: u64}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:701:5
    |
701 |     Appearance,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:702:5
    |
702 |     Behavior,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:703:5
    |
703 |     Security,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:704:5
    |
704 |     Performance,
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:705:5
    |
705 |     Integration,
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/types.rs:706:5
    |
706 |     Advanced}
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/validation.rs:450:5
    |
450 |     EmptyParameter { parameter: Arc<str> },
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:450:22
    |
450 |     EmptyParameter { parameter: Arc<str> },
    |                      ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/validation.rs:453:5
    |
453 |     ParameterTooLong {
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:454:9
    |
454 |         parameter: Arc<str>,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:455:9
    |
455 |         max_length: usize,
    |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:456:9
    |
456 |         actual_length: usize},
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/validation.rs:459:5
    |
459 |     ParameterOutOfRange {
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:460:9
    |
460 |         parameter: Arc<str>,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:461:9
    |
461 |         value: String,
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:462:9
    |
462 |         min: Option<String>,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:463:9
    |
463 |         max: Option<String>},
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/validation.rs:466:5
    |
466 |     InvalidEnumValue {
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:467:9
    |
467 |         parameter: Arc<str>,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:468:9
    |
468 |         value: Arc<str>,
    |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:469:9
    |
469 |         allowed_values: Vec<Arc<str>>},
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/validation.rs:472:5
    |
472 |     InvalidParameterFormat {
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:473:9
    |
473 |         parameter: Arc<str>,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:474:9
    |
474 |         value: Arc<str>,
    |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:475:9
    |
475 |         expected_format: Arc<str>},
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/validation.rs:480:5
    |
480 |     InvalidFileExtension {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:481:9
    |
481 |         parameter: Arc<str>,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:482:9
    |
482 |         extension: Arc<str>,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:483:9
    |
483 |         allowed_extensions: Vec<Arc<str>>},
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/validation.rs:486:5
    |
486 |     TooManyParameters {
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:487:9
    |
487 |         max_count: usize,
    |         ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:488:9
    |
488 |         actual_count: usize},
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/commands/validation.rs:491:5
    |
491 |     SecurityViolation {
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:492:9
    |
492 |         parameter: Arc<str>,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/commands/validation.rs:493:9
    |
493 |         detail: Arc<str>}}
    |         ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/config.rs:474:5
    |
474 |     InvalidPersonality { detail: Arc<str> },
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/config.rs:474:26
    |
474 |     InvalidPersonality { detail: Arc<str> },
    |                          ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/config.rs:476:5
    |
476 |     InvalidBehavior { detail: Arc<str> },
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/config.rs:476:23
    |
476 |     InvalidBehavior { detail: Arc<str> },
    |                       ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/config.rs:478:5
    |
478 |     InvalidUI { detail: Arc<str> },
    |     ^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/config.rs:478:17
    |
478 |     InvalidUI { detail: Arc<str> },
    |                 ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/config.rs:480:5
    |
480 |     InvalidIntegration { detail: Arc<str> },
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/config.rs:480:26
    |
480 |     InvalidIntegration { detail: Arc<str> },
    |                          ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/config.rs:482:5
    |
482 |     Conflict { detail: Arc<str> },
    |     ^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/config.rs:482:16
    |
482 |     Conflict { detail: Arc<str> },
    |                ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/config.rs:484:5
    |
484 |     SchemaValidation { detail: Arc<str> },
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/config.rs:484:24
    |
484 |     SchemaValidation { detail: Arc<str> },
    |                        ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/config.rs:486:5
    |
486 |     RangeValidation { field: Arc<str>, min: f32, max: f32 },
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/config.rs:486:23
    |
486 |     RangeValidation { field: Arc<str>, min: f32, max: f32 },
    |                       ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/config.rs:486:40
    |
486 |     RangeValidation { field: Arc<str>, min: f32, max: f32 },
    |                                        ^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/config.rs:486:50
    |
486 |     RangeValidation { field: Arc<str>, min: f32, max: f32 },
    |                                                  ^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/config.rs:488:5
    |
488 |     RequiredField { field: Arc<str> }}
    |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/config.rs:488:21
    |
488 |     RequiredField { field: Arc<str> }}
    |                     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/config.rs:1324:5
     |
1324 |     pub total_changes: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/config.rs:1325:5
     |
1325 |     pub current_version: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/config.rs:1326:5
     |
1326 |     pub last_modified: Duration,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/config.rs:1327:5
     |
1327 |     pub validators_count: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/config.rs:1328:5
     |
1328 |     pub auto_save_enabled: bool}
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/conversation/mod.rs:29:5
   |
29 |     User,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/conversation/mod.rs:30:5
   |
30 |     Assistant,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/conversation/mod.rs:31:5
   |
31 |     System}
   |     ^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/conversation/mod.rs:105:9
    |
105 |         total_messages: u64,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/conversation/mod.rs:106:9
    |
106 |         user_messages: u64,
    |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/conversation/mod.rs:107:9
    |
107 |         assistant_messages: u64,
    |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/conversation/mod.rs:108:9
    |
108 |         system_messages: u64}}
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/conversation/mod.rs:389:5
    |
389 |     pub total_messages: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/conversation/mod.rs:390:5
    |
390 |     pub user_messages: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/conversation/mod.rs:391:5
    |
391 |     pub assistant_messages: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/conversation/mod.rs:392:5
    |
392 |     pub system_messages: u64}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/export.rs:103:5
    |
103 |     SerializationError { detail: Arc<str> },
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/export.rs:103:26
    |
103 |     SerializationError { detail: Arc<str> },
    |                          ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/export.rs:105:5
    |
105 |     InvalidFormat { format: Arc<str> },
    |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/export.rs:105:21
    |
105 |     InvalidFormat { format: Arc<str> },
    |                     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/export.rs:107:5
    |
107 |     ExportTooLarge { size_bytes: usize },
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/export.rs:107:22
    |
107 |     ExportTooLarge { size_bytes: usize },
    |                      ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/export.rs:109:5
    |
109 |     NoMessages,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/export.rs:111:5
    |
111 |     IoError { detail: Arc<str> }}
    |     ^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/export.rs:111:15
    |
111 |     IoError { detail: Arc<str> }}
    |               ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/formatting.rs:18:13
   |
18 |     Plain { text: String },
   |             ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/formatting.rs:21:9
   |
21 |         content: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/formatting.rs:22:9
   |
22 |         rendered_html: Option<String>},
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/formatting.rs:25:9
   |
25 |         content: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/formatting.rs:26:9
   |
26 |         language: String,
   |         ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/formatting.rs:27:9
   |
27 |         highlighted: Option<String>},
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/formatting.rs:30:9
   |
30 |         content: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/formatting.rs:31:9
   |
31 |         styles: Vec<FormatStyle>},
   |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/formatting.rs:33:17
   |
33 |     Composite { parts: Vec<ImmutableMessageContent> }}
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:151:5
    |
151 |     Bold,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:152:5
    |
152 |     Italic,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:153:5
    |
153 |     Underline,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:154:5
    |
154 |     Strikethrough,
    |     ^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:155:5
    |
155 |     Code,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:156:5
    |
156 |     Link { url: String },
    |     ^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:156:12
    |
156 |     Link { url: String },
    |            ^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:157:5
    |
157 |     Color { rgb: u32 },
    |     ^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:157:13
    |
157 |     Color { rgb: u32 },
    |             ^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:158:5
    |
158 |     Background { rgb: u32 }}
    |     ^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:158:18
    |
158 |     Background { rgb: u32 }}
    |                  ^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:189:5
    |
189 |     InvalidMarkdown { detail: String },
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:189:23
    |
189 |     InvalidMarkdown { detail: String },
    |                       ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:191:5
    |
191 |     UnsupportedLanguage { language: String },
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:191:27
    |
191 |     UnsupportedLanguage { language: String },
    |                           ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:193:5
    |
193 |     ParseError { detail: String },
    |     ^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:193:18
    |
193 |     ParseError { detail: String },
    |                  ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:195:5
    |
195 |     RenderError { detail: String },
    |     ^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:195:19
    |
195 |     RenderError { detail: String },
    |                   ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:197:5
    |
197 |     InvalidContent { detail: String },
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:197:22
    |
197 |     InvalidContent { detail: String },
    |                      ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:199:5
    |
199 |     ConfigurationError { detail: String },
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:199:26
    |
199 |     ConfigurationError { detail: String },
    |                          ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:201:5
    |
201 |     IoError { detail: String },
    |     ^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:201:15
    |
201 |     IoError { detail: String },
    |               ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:203:5
    |
203 |     Timeout,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:205:5
    |
205 |     ResourceNotFound { resource: String },
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:205:24
    |
205 |     ResourceNotFound { resource: String },
    |                        ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/formatting.rs:207:5
    |
207 |     InternalError { detail: String }}
    |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:207:21
    |
207 |     InternalError { detail: String }}
    |                     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:566:9
    |
566 |         content_id: u64,
    |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:567:9
    |
567 |         content_type: String,
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:568:9
    |
568 |         timestamp_nanos: u64},
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:571:9
    |
571 |         content_id: u64,
    |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:572:9
    |
572 |         progress_percent: f32,
    |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:573:9
    |
573 |         stage: String},
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:576:9
    |
576 |         content_id: u64,
    |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:577:9
    |
577 |         result: ImmutableMessageContent,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:578:9
    |
578 |         duration_nanos: u64},
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:581:9
    |
581 |         content_id: u64,
    |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:582:9
    |
582 |         error: FormatError,
    |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:583:9
    |
583 |         duration_nanos: u64},
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:586:9
    |
586 |         content_id: u64,
    |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:587:9
    |
587 |         partial_content: String}}
    |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:744:5
    |
744 |     pub active_operations: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:745:5
    |
745 |     pub total_operations: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:746:5
    |
746 |     pub successful_operations: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/formatting.rs:747:5
    |
747 |     pub failed_operations: u64}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/chat/formatting.rs:773:1
    |
773 | pub type FormatOptions = ImmutableFormatOptions;
    | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/chat/formatting.rs:776:1
    |
776 | pub type ColorScheme = ImmutableColorScheme;
    | ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/chat/formatting.rs:779:1
    |
779 | pub type CustomFormatRule = ImmutableCustomFormatRule;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/integrations.rs:61:5
   |
61 |     ConnectionError { detail: Arc<str> },
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/integrations.rs:61:23
   |
61 |     ConnectionError { detail: Arc<str> },
   |                       ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/integrations.rs:64:5
   |
64 |     AuthenticationError { detail: Arc<str> },
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/integrations.rs:64:27
   |
64 |     AuthenticationError { detail: Arc<str> },
   |                           ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/integrations.rs:67:5
   |
67 |     TimeoutError { detail: Arc<str> },
   |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/integrations.rs:67:20
   |
67 |     TimeoutError { detail: Arc<str> },
   |                    ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/integrations.rs:70:5
   |
70 |     ConfigurationError { detail: Arc<str> },
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/integrations.rs:70:26
   |
70 |     ConfigurationError { detail: Arc<str> },
   |                          ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/integrations.rs:73:5
   |
73 |     PluginError { detail: Arc<str> }}
   |     ^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/integrations.rs:73:19
   |
73 |     PluginError { detail: Arc<str> }}
   |                   ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:28:9
   |
28 |         content: Arc<str>,
   |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:29:9
   |
29 |         message_type: Arc<str>,
   |         ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:30:9
   |
30 |         timestamp: Duration},
   |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:33:9
   |
33 |         command: ImmutableChatCommand,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:34:9
   |
34 |         timestamp: Duration},
   |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:37:9
   |
37 |         duration: Duration,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:38:9
   |
38 |         timestamp: Duration},
   |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:41:9
   |
41 |         name: Arc<str>,
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:42:9
   |
42 |         value: Arc<str>,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:43:9
   |
43 |         timestamp: Duration},
   |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:46:9
   |
46 |         condition: Arc<str>,
   |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:47:9
   |
47 |         then_actions: Arc<[MacroAction]>,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:48:9
   |
48 |         else_actions: Option<Arc<[MacroAction]>>,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:49:9
   |
49 |         timestamp: Duration},
   |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:52:9
   |
52 |         iterations: u32,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:53:9
   |
53 |         actions: Arc<[MacroAction]>,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:54:9
   |
54 |         timestamp: Duration}}
   |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:85:5
   |
85 |     pub variables: HashMap<Arc<str>, Arc<str>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:86:5
   |
86 |     pub execution_id: Uuid,
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:87:5
   |
87 |     pub start_time: Instant,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:88:5
   |
88 |     pub current_action: usize,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:89:5
   |
89 |     pub loop_stack: Vec<LoopContext>}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:94:5
   |
94 |     pub iteration: u32,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:95:5
   |
95 |     pub max_iterations: u32,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:96:5
   |
96 |     pub start_action: usize,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/macros.rs:97:5
   |
97 |     pub end_action: usize}
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:102:5
    |
102 |     pub id: Uuid,
    |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:103:5
    |
103 |     pub name: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:104:5
    |
104 |     pub description: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:105:5
    |
105 |     pub created_at: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:106:5
    |
106 |     pub updated_at: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:107:5
    |
107 |     pub version: u32,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:108:5
    |
108 |     pub tags: Arc<[Arc<str>]>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:109:5
    |
109 |     pub author: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:110:5
    |
110 |     pub execution_count: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:111:5
    |
111 |     pub last_execution: Option<Duration>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:112:5
    |
112 |     pub average_duration: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:113:5
    |
113 |     pub success_rate: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:114:5
    |
114 |     pub category: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:115:5
    |
115 |     pub is_private: bool}
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:120:5
    |
120 |     pub metadata: MacroMetadata,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:121:5
    |
121 |     pub actions: Arc<[MacroAction]>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:122:5
    |
122 |     pub variables: HashMap<Arc<str>, Arc<str>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:123:5
    |
123 |     pub triggers: Arc<[Arc<str>]>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:124:5
    |
124 |     pub conditions: Arc<[Arc<str>]>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:125:5
    |
125 |     pub dependencies: Arc<[Arc<str>]>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:126:5
    |
126 |     pub execution_config: MacroExecutionConfig}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:131:5
    |
131 |     pub max_execution_time: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:132:5
    |
132 |     pub retry_count: u32,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:133:5
    |
133 |     pub retry_delay: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:134:5
    |
134 |     pub abort_on_error: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:135:5
    |
135 |     pub parallel_execution: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:136:5
    |
136 |     pub priority: u8,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:137:5
    |
137 |     pub resource_limits: ResourceLimits}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:142:5
    |
142 |     pub max_memory_mb: u32,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:143:5
    |
143 |     pub max_cpu_percent: u8,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:144:5
    |
144 |     pub max_network_requests: u32,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:145:5
    |
145 |     pub max_file_operations: u32}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:150:5
    |
150 |     pub id: Uuid,
    |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:151:5
    |
151 |     pub name: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:152:5
    |
152 |     pub start_time: Instant,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:153:5
    |
153 |     pub actions: SegQueue<MacroAction>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:154:5
    |
154 |     pub state: MacroRecordingState,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:155:5
    |
155 |     pub variables: HashMap<Arc<str>, Arc<str>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:156:5
    |
156 |     pub metadata: MacroMetadata}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:161:5
    |
161 |     pub id: Uuid,
    |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:162:5
    |
162 |     pub macro_id: Uuid,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:163:5
    |
163 |     pub start_time: Instant,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:164:5
    |
164 |     pub context: MacroExecutionContext,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:165:5
    |
165 |     pub state: MacroPlaybackState,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:166:5
    |
166 |     pub current_action: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:167:5
    |
167 |     pub total_actions: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:168:5
    |
168 |     pub error: Option<Arc<str>>}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:188:5
    |
188 |     pub total_executions: ConsistentCounter,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:189:5
    |
189 |     pub successful_executions: ConsistentCounter,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:190:5
    |
190 |     pub failed_executions: ConsistentCounter,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:191:5
    |
191 |     pub total_duration: parking_lot::Mutex<Duration>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:192:5
    |
192 |     pub average_duration: parking_lot::Mutex<Duration>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/macros.rs:193:5
    |
193 |     pub last_execution: parking_lot::Mutex<Option<Instant>>}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:641:5
    |
641 |     Success,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:642:5
    |
642 |     Wait(Duration),
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:643:5
    |
643 |     SkipToAction(usize),
    |     ^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:644:5
    |
644 |     Error(Arc<str>)}
    |     ^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:649:5
    |
649 |     ActionExecuted,
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:650:5
    |
650 |     Completed,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:651:5
    |
651 |     Failed,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:652:5
    |
652 |     SessionNotActive}
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:658:5
    |
658 |     SessionNotFound,
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:660:5
    |
660 |     RecordingNotActive,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:662:5
    |
662 |     MacroNotFound,
    |     ^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:664:5
    |
664 |     SystemTimeError,
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:666:5
    |
666 |     ExecutionError(String),
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/macros.rs:668:5
    |
668 |     ValidationError(String)}
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:28:9
   |
28 |         user_id: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:29:9
   |
29 |         session_id: String,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:30:9
   |
30 |         timestamp: u64},
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:33:9
   |
33 |         user_id: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:34:9
   |
34 |         session_id: String,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:35:9
   |
35 |         timestamp: u64},
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:38:9
   |
38 |         message: Message,
   |         ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:39:9
   |
39 |         session_id: String,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:40:9
   |
40 |         timestamp: u64},
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:43:9
   |
43 |         message_id: String,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:44:9
   |
44 |         content: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:45:9
   |
45 |         session_id: String,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:46:9
   |
46 |         timestamp: u64},
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:49:9
   |
49 |         message_id: String,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:50:9
   |
50 |         session_id: String,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:51:9
   |
51 |         timestamp: u64},
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:54:9
   |
54 |         user_id: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:55:9
   |
55 |         session_id: String,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:56:9
   |
56 |         timestamp: u64},
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:59:9
   |
59 |         user_id: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:60:9
   |
60 |         session_id: String,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:61:9
   |
61 |         timestamp: u64},
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:64:9
   |
64 |         user_id: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:65:9
   |
65 |         status: ConnectionStatus,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:66:9
   |
66 |         timestamp: u64},
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:69:9
   |
69 |         user_id: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:70:9
   |
70 |         session_id: String,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:71:9
   |
71 |         timestamp: u64},
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:74:9
   |
74 |         message: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:75:9
   |
75 |         level: NotificationLevel,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/realtime.rs:76:9
   |
76 |         timestamp: u64}}
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:417:5
    |
417 |     pub active_users: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:418:5
    |
418 |     pub total_typing_events: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:419:5
    |
419 |     pub expiry_duration: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:420:5
    |
420 |     pub cleanup_interval: u64}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:478:5
    |
478 |     pub total_messages: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:479:5
    |
479 |     pub active_subscribers: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:480:5
    |
480 |     pub queue_size: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:481:5
    |
481 |     pub backpressure_events: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:482:5
    |
482 |     pub processing_rate: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:483:5
    |
483 |     pub last_update: u64}
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:799:5
    |
799 |     pub user_id: String,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:800:5
    |
800 |     pub session_id: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:801:5
    |
801 |     pub status: ConnectionStatus,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:802:5
    |
802 |     pub last_heartbeat: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:803:5
    |
803 |     pub connection_duration: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:804:5
    |
804 |     pub heartbeat_count: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:805:5
    |
805 |     pub reconnection_attempts: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/realtime.rs:806:5
    |
806 |     pub is_healthy: bool}
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1070:5
     |
1070 |     pub total_connections: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1071:5
     |
1071 |     pub total_heartbeats: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1072:5
     |
1072 |     pub failed_connections: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1073:5
     |
1073 |     pub heartbeat_timeout: u64,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1074:5
     |
1074 |     pub health_check_interval: u64}
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1104:5
     |
1104 |     pub typing_stats: TypingStatistics,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1105:5
     |
1105 |     pub live_update_stats: LiveUpdateStatistics,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1106:5
     |
1106 |     pub connection_stats: ConnectionManagerStatistics,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1107:5
     |
1107 |     pub total_events: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1108:5
     |
1108 |     pub system_uptime: u64}
     |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/realtime.rs:1208:5
     |
1208 |     BackpressureExceeded { current_size: usize, limit: usize },
     |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1208:28
     |
1208 |     BackpressureExceeded { current_size: usize, limit: usize },
     |                            ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1208:49
     |
1208 |     BackpressureExceeded { current_size: usize, limit: usize },
     |                                                 ^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/realtime.rs:1210:5
     |
1210 |     ConnectionNotFound { user_id: String, session_id: String },
     |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1210:26
     |
1210 |     ConnectionNotFound { user_id: String, session_id: String },
     |                          ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1210:43
     |
1210 |     ConnectionNotFound { user_id: String, session_id: String },
     |                                           ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/realtime.rs:1212:5
     |
1212 |     SubscriptionFailed { reason: String },
     |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1212:26
     |
1212 |     SubscriptionFailed { reason: String },
     |                          ^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/realtime.rs:1214:5
     |
1214 |     MessageDeliveryFailed { reason: String },
     |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1214:29
     |
1214 |     MessageDeliveryFailed { reason: String },
     |                             ^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/realtime.rs:1216:5
     |
1216 |     SystemTimeout { operation: String },
     |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1216:21
     |
1216 |     SystemTimeout { operation: String },
     |                     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/realtime.rs:1218:5
     |
1218 |     InvalidMessageFormat { details: String },
     |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1218:28
     |
1218 |     InvalidMessageFormat { details: String },
     |                            ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/realtime.rs:1220:5
     |
1220 |     RateLimitExceeded { current_rate: usize, limit: usize },
     |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1220:25
     |
1220 |     RateLimitExceeded { current_rate: usize, limit: usize },
     |                         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1220:46
     |
1220 |     RateLimitExceeded { current_rate: usize, limit: usize },
     |                                              ^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/realtime.rs:1222:5
     |
1222 |     SystemOverload { resource: String }}
     |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/realtime.rs:1222:22
     |
1222 |     SystemOverload { resource: String }}
     |                      ^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/chat/search.rs:35:5
   |
35 |     fn collect_sync(self) -> AsyncStream<Vec<T>>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/search.rs:89:17
   |
89 |     Proximity { distance: u32 }}
   |                 ^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:1390:5
     |
1390 |     pub total_tags: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:1391:5
     |
1391 |     pub total_taggings: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:1392:5
     |
1392 |     pub active_tags: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:1393:5
     |
1393 |     pub most_used_tag: Option<Arc<str>>}
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:1442:5
     |
1442 |     pub total_exports: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:1443:5
     |
1443 |     pub total_messages_exported: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:1444:5
     |
1444 |     pub most_popular_format: Option<ExportFormat>,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:1445:5
     |
1445 |     pub average_export_time: f64,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:1446:5
     |
1446 |     pub last_export_time: u64}
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/search.rs:2087:5
     |
2087 |     IndexError { reason: Arc<str> },
     |     ^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:2087:18
     |
2087 |     IndexError { reason: Arc<str> },
     |                  ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/search.rs:2089:5
     |
2089 |     SearchQueryError { reason: Arc<str> },
     |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:2089:24
     |
2089 |     SearchQueryError { reason: Arc<str> },
     |                        ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/search.rs:2091:5
     |
2091 |     TagError { reason: Arc<str> },
     |     ^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:2091:16
     |
2091 |     TagError { reason: Arc<str> },
     |                ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/search.rs:2093:5
     |
2093 |     ExportError { reason: Arc<str> },
     |     ^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:2093:19
     |
2093 |     ExportError { reason: Arc<str> },
     |                   ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/search.rs:2095:5
     |
2095 |     InvalidQuery { details: Arc<str> },
     |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:2095:20
     |
2095 |     InvalidQuery { details: Arc<str> },
     |                    ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
    --> packages/domain/src/chat/search.rs:2097:5
     |
2097 |     SystemOverload { resource: Arc<str> }}
     |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:2097:22
     |
2097 |     SystemOverload { resource: Arc<str> }}
     |                      ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:2114:5
     |
2114 |     pub search_stats: SearchStatistics,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:2115:5
     |
2115 |     pub tagging_stats: TaggingStatistics,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:2116:5
     |
2116 |     pub export_stats: ExportStatistics,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:2117:5
     |
2117 |     pub total_operations: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> packages/domain/src/chat/search.rs:2118:5
     |
2118 |     pub system_uptime: u64}
     |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> packages/domain/src/chat/templates/mod.rs:112:5
    |
112 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/mod.rs:122:5
    |
122 |     pub fn name(mut self, name: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/mod.rs:127:5
    |
127 |     pub fn content(mut self, content: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/mod.rs:132:5
    |
132 |     pub fn description(mut self, description: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/mod.rs:137:5
    |
137 |     pub fn category(mut self, category: TemplateCategory) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/mod.rs:142:5
    |
142 |     pub fn variable(mut self, var: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/mod.rs:147:5
    |
147 |     pub fn build(self) -> ChatTemplate {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:16:5
   |
16 |     NotFound { name: Arc<str> },
   |     ^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:16:16
   |
16 |     NotFound { name: Arc<str> },
   |                ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:19:5
   |
19 |     ParseError { message: Arc<str> },
   |     ^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:19:18
   |
19 |     ParseError { message: Arc<str> },
   |                  ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:22:5
   |
22 |     CompileError { message: Arc<str> },
   |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:22:20
   |
22 |     CompileError { message: Arc<str> },
   |                    ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:25:5
   |
25 |     RenderError { message: Arc<str> },
   |     ^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:25:19
   |
25 |     RenderError { message: Arc<str> },
   |                   ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:28:5
   |
28 |     VariableError { message: Arc<str> },
   |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:28:21
   |
28 |     VariableError { message: Arc<str> },
   |                     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:31:5
   |
31 |     PermissionDenied { message: Arc<str> },
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:31:24
   |
31 |     PermissionDenied { message: Arc<str> },
   |                        ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:34:5
   |
34 |     StorageError { message: Arc<str> },
   |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:34:20
   |
34 |     StorageError { message: Arc<str> },
   |                    ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:43:5
   |
43 |     pub id: Arc<str>,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:44:5
   |
44 |     pub name: Arc<str>,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:45:5
   |
45 |     pub category: TemplateCategory,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:46:5
   |
46 |     pub size: usize,
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:47:5
   |
47 |     pub variable_count: usize,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:48:5
   |
48 |     pub created_at: i64,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:49:5
   |
49 |     pub modified_at: i64,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:50:5
   |
50 |     pub version: Arc<str>,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:56:5
   |
56 |     Chat,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:57:5
   |
57 |     System,
   |     ^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:58:5
   |
58 |     User,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:59:5
   |
59 |     Assistant,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:60:5
   |
60 |     Function,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:61:5
   |
61 |     Tool,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:62:5
   |
62 |     Context,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:63:5
   |
63 |     Prompt,
   |     ^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:64:5
   |
64 |     Response,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:65:5
   |
65 |     Custom,
   |     ^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:77:5
   |
77 |     String,
   |     ^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:78:5
   |
78 |     Number,
   |     ^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:79:5
   |
79 |     Boolean,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:80:5
   |
80 |     Array,
   |     ^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:81:5
   |
81 |     Object,
   |     ^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/chat/templates/core.rs:82:5
   |
82 |     Any,
   |     ^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:88:5
   |
88 |     pub name: Arc<str>,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:89:5
   |
89 |     pub description: Arc<str>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:90:5
   |
90 |     pub var_type: VariableType,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:91:5
   |
91 |     pub default_value: Option<Arc<str>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:92:5
   |
92 |     pub required: bool,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:93:5
   |
93 |     pub validation_pattern: Option<Arc<str>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:94:5
   |
94 |     pub valid_values: Option<Arc<[Arc<str>]>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:95:5
   |
95 |     pub min_value: Option<f64>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/core.rs:96:5
   |
96 |     pub max_value: Option<f64>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:102:5
    |
102 |     pub read: bool,
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:103:5
    |
103 |     pub write: bool,
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:104:5
    |
104 |     pub execute: bool,
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:105:5
    |
105 |     pub share: bool,
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:106:5
    |
106 |     pub delete: bool,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:124:5
    |
124 |     pub id: Arc<str>,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:125:5
    |
125 |     pub name: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:126:5
    |
126 |     pub description: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:127:5
    |
127 |     pub author: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:128:5
    |
128 |     pub version: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:129:5
    |
129 |     pub category: TemplateCategory,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:130:5
    |
130 |     pub tags: Arc<[Arc<str>]>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:131:5
    |
131 |     pub created_at: u64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:132:5
    |
132 |     pub modified_at: u64,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:133:5
    |
133 |     pub usage_count: u64,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:134:5
    |
134 |     pub rating: f64,
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:135:5
    |
135 |     pub permissions: TemplatePermissions,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:141:5
    |
141 |     String(Arc<str>),
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:142:5
    |
142 |     Number(f64),
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:143:5
    |
143 |     Boolean(bool),
    |     ^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:144:5
    |
144 |     Array(Arc<[TemplateValue]>),
    |     ^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:145:5
    |
145 |     Object(Arc<HashMap<Arc<str>, TemplateValue>>),
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:146:5
    |
146 |     Null,
    |     ^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:176:5
    |
176 |     pub variables: HashMap<Arc<str>, TemplateValue>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:177:5
    |
177 | /     pub functions: HashMap<
178 | |         Arc<str>,
179 | |         Arc<dyn Fn(&[TemplateValue]) -> TemplateResult<TemplateValue> + Send + Sync>,
180 | |     >,
    | |_____^

warning: missing documentation for an associated function
   --> packages/domain/src/chat/templates/core.rs:184:5
    |
184 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:191:5
    |
191 | /     pub fn with_variable(
192 | |         mut self,
193 | |         name: impl Into<Arc<str>>,
194 | |         value: impl Into<TemplateValue>,
195 | |     ) -> Self {
    | |_____________^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:200:5
    |
200 |     pub fn set_variable(&mut self, name: impl Into<Arc<str>>, value: impl Into<TemplateValue>) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:204:5
    |
204 |     pub fn get_variable(&self, name: &str) -> Option<&TemplateValue> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:223:5
    |
223 |     Text(Arc<str>),
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:224:5
    |
224 |     Variable(Arc<str>),
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:225:5
    |
225 |     Expression {
    |     ^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:226:9
    |
226 |         operator: Arc<str>,
    |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:227:9
    |
227 |         operands: Arc<[TemplateAst]>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:229:5
    |
229 |     Conditional {
    |     ^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:230:9
    |
230 |         condition: Arc<TemplateAst>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:231:9
    |
231 |         if_true: Arc<TemplateAst>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:232:9
    |
232 |         if_false: Option<Arc<TemplateAst>>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:234:5
    |
234 |     Loop {
    |     ^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:235:9
    |
235 |         variable: Arc<str>,
    |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:236:9
    |
236 |         iterable: Arc<TemplateAst>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:237:9
    |
237 |         body: Arc<TemplateAst>,
    |         ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:239:5
    |
239 |     Block(Arc<[TemplateAst]>),
    |     ^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:240:5
    |
240 |     Function {
    |     ^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:241:9
    |
241 |         name: Arc<str>,
    |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:242:9
    |
242 |         args: Arc<[TemplateAst]>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:249:5
    |
249 |     pub metadata: TemplateMetadata,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:250:5
    |
250 |     pub ast: TemplateAst,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:251:5
    |
251 |     pub variables: Arc<[TemplateVariable]>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:252:5
    |
252 |     pub optimized: bool,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> packages/domain/src/chat/templates/core.rs:256:5
    |
256 | /     pub fn new(
257 | |         metadata: TemplateMetadata,
258 | |         ast: TemplateAst,
259 | |         variables: Arc<[TemplateVariable]>,
260 | |     ) -> Self {
    | |_____________^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:269:5
    |
269 |     pub fn render(&self, context: &TemplateContext) -> TemplateResult<Arc<str>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:324:5
    |
324 |     pub metadata: TemplateMetadata,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:325:5
    |
325 |     pub content: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:326:5
    |
326 |     pub variables: Arc<[TemplateVariable]>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:327:5
    |
327 |     pub compiled: Option<CompiledTemplate>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> packages/domain/src/chat/templates/core.rs:331:5
    |
331 | /     pub fn new(
332 | |         metadata: TemplateMetadata,
333 | |         content: Arc<str>,
334 | |         variables: Arc<[TemplateVariable]>,
335 | |     ) -> Self {
    | |_____________^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:344:5
    |
344 |     pub fn render(&self, variables: &HashMap<Arc<str>, Arc<str>>) -> TemplateResult<Arc<str>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:362:5
    |
362 |     pub fn get_id(&self) -> &Arc<str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:366:5
    |
366 |     pub fn get_name(&self) -> &Arc<str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:370:5
    |
370 |     pub fn get_content(&self) -> &Arc<str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:374:5
    |
374 |     pub fn get_variables(&self) -> &Arc<[TemplateVariable]> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:420:5
    |
420 |     pub max_template_size: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:421:5
    |
421 |     pub max_variables: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:422:5
    |
422 |     pub allow_nested_templates: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:423:5
    |
423 |     pub cache_compiled: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:424:5
    |
424 |     pub optimize_templates: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:425:5
    |
425 |     pub security_mode: SecurityMode,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:431:5
    |
431 |     Strict,   // No external access, limited functions
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:432:5
    |
432 |     Normal,   // Standard functions allowed
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:433:5
    |
433 |     Relaxed,  // Most functions allowed
    |     ^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:434:5
    |
434 |     Disabled, // All functions allowed
    |     ^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:453:5
    |
453 |     pub name: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:454:5
    |
454 |     pub description: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:455:5
    |
455 |     pub input_variables: HashMap<Arc<str>, Arc<str>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:456:5
    |
456 |     pub expected_output: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:462:5
    |
462 |     pub name: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:463:5
    |
463 |     pub color: Option<Arc<str>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:464:5
    |
464 |     pub description: Option<Arc<str>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> packages/domain/src/chat/templates/core.rs:468:5
    |
468 |     pub fn new(name: impl Into<Arc<str>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:476:5
    |
476 |     pub fn with_color(mut self, color: impl Into<Arc<str>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:481:5
    |
481 |     pub fn with_description(mut self, description: impl Into<Arc<str>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/parser.rs:14:5
   |
14 |     pub max_depth: usize,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/parser.rs:15:5
   |
15 |     pub max_tokens: usize,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/parser.rs:16:5
   |
16 |     pub allow_expressions: bool,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/parser.rs:17:5
   |
17 |     pub allow_functions: bool,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/parser.rs:18:5
   |
18 |     pub strict_variables: bool}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> packages/domain/src/chat/templates/parser.rs:37:5
   |
37 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> packages/domain/src/chat/templates/parser.rs:42:5
   |
42 |     pub fn with_config(config: ParserConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/parser.rs:268:5
    |
268 |     pub parsed_count: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/parser.rs:269:5
    |
269 |     pub total_parse_time_us: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/parser.rs:270:5
    |
270 |     pub error_count: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/parser.rs:271:5
    |
271 |     pub peak_memory_bytes: usize}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> packages/domain/src/completion/mod.rs:27:1
   |
27 | pub type CompletionResult<T> = CompletionCoreResult<T>;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> packages/domain/src/completion/mod.rs:28:1
   |
28 | pub type StreamingResponse = StreamingCoreResponse;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/completion/candle.rs:52:29
   |
52 |     ContextLengthExceeded { current: u32, max: u32 },
   |                             ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/completion/candle.rs:52:43
   |
52 |     ContextLengthExceeded { current: u32, max: u32 },
   |                                           ^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/completion/types.rs:75:5
   |
75 |     pub name: String,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/completion/types.rs:76:5
   |
76 |     pub description: String,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/completion/types.rs:77:5
   |
77 |     pub parameters: Value}
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:34:5
   |
34 |     PNG,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:35:5
   |
35 |     JPEG,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:36:5
   |
36 |     GIF,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:37:5
   |
37 |     WebP,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:38:5
   |
38 |     BMP,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:39:5
   |
39 |     TIFF}
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:60:5
   |
60 |     MP3,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:61:5
   |
61 |     WAV,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:62:5
   |
62 |     FLAC,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:63:5
   |
63 |     OGG,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:64:5
   |
64 |     M4A,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/chunk.rs:65:5
   |
65 |     OPUS}
   |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/chunk.rs:105:5
    |
105 |     Stop,
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/chunk.rs:106:5
    |
106 |     Length,
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/chunk.rs:107:5
    |
107 |     ContentFilter,
    |     ^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/chunk.rs:108:5
    |
108 |     ToolCalls,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/chunk.rs:109:5
    |
109 |     Error}
    |     ^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:119:21
    |
119 |     ToolCallStart { id: String, name: String },
    |                     ^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:119:33
    |
119 |     ToolCallStart { id: String, name: String },
    |                                 ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:123:9
    |
123 |         id: String,
    |         ^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:124:9
    |
124 |         name: String,
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:125:9
    |
125 |         partial_input: String},
    |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:129:9
    |
129 |         id: String,
    |         ^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:130:9
    |
130 |         name: String,
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:131:9
    |
131 |         input: String},
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:135:9
    |
135 |         text: String,
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:136:9
    |
136 |         finish_reason: Option<FinishReason>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:137:9
    |
137 |         usage: Option<Usage>},
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> packages/domain/src/context/chunk.rs:201:5
    |
201 |     pub fn new(content: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> packages/domain/src/context/chunk.rs:211:5
    |
211 |     pub fn new(content: impl Into<String>, role: crate::chat::message::MessageRole) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> packages/domain/src/context/document.rs:13:1
   |
13 | pub struct Document {
   | ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/document.rs:14:5
   |
14 |     pub data: String,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/document.rs:15:5
   |
15 |     pub format: Option<ContentFormat>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/document.rs:16:5
   |
16 |     pub media_type: Option<DocumentMediaType>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/document.rs:18:5
   |
18 |     pub additional_props: HashMap<String, Value>}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> packages/domain/src/context/document.rs:21:1
   |
21 | pub enum ContentFormat {
   | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/document.rs:22:5
   |
22 |     Base64,
   |     ^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/document.rs:23:5
   |
23 |     Text,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/document.rs:24:5
   |
24 |     Html,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/document.rs:25:5
   |
25 |     Markdown}
   |     ^^^^^^^^

warning: missing documentation for an enum
  --> packages/domain/src/context/document.rs:28:1
   |
28 | pub enum DocumentMediaType {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/document.rs:29:5
   |
29 |     PDF,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/document.rs:30:5
   |
30 |     DOCX,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/document.rs:31:5
   |
31 |     TXT,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/document.rs:32:5
   |
32 |     RTF,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/document.rs:33:5
   |
33 |     ODT}
   |     ^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/extraction/error.rs:20:15
   |
20 |     Timeout { duration: Duration },
   |               ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/extraction/error.rs:24:21
   |
24 |     InvalidFormat { actual: String },
   |                     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/extraction/error.rs:28:21
   |
28 |     MissingFields { fields: Vec<String> },
   |                     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/extraction/error.rs:32:24
   |
32 |     ValidationFailed { reason: String },
   |                        ^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/context/loader.rs:215:1
    |
215 | pub type DefaultLoader<T> = LoaderImpl<T>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/context/loader.rs:218:1
    |
218 | pub type FileLoader<T> = LoaderImpl<T>;
    | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> packages/domain/src/context/provider.rs:34:1
   |
34 | pub struct Files;
   | ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> packages/domain/src/context/provider.rs:35:1
   |
35 | pub struct Directory;
   | ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> packages/domain/src/context/provider.rs:36:1
   |
36 | pub struct Github;
   | ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:42:5
   |
42 |     ContextNotFound(String),
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:44:5
   |
44 |     InvalidPath(String),
   |     ^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:46:5
   |
46 |     IoError(String),
   |     ^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:48:5
   |
48 |     PatternError(String),
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:50:5
   |
50 |     MemoryError(String),
   |     ^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:52:5
   |
52 |     ValidationError(String),
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:54:5
   |
54 |     PerformanceThresholdExceeded(String),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:56:5
   |
56 |     ProviderUnavailable(String)}
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:62:5
   |
62 |     FileProvider(String),
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:64:5
   |
64 |     DirectoryProvider(String),
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:66:5
   |
66 |     GithubProvider(String),
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:68:5
   |
68 |     EmbeddingProvider(String)}
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:74:5
   |
74 |     InvalidInput(String),
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:76:5
   |
76 |     PathValidation(String),
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:78:5
   |
78 |     PatternValidation(String),
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:80:5
   |
80 |     SizeLimitExceeded(String)}
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/provider.rs:87:9
   |
87 |         provider_type: String,
   |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/provider.rs:88:9
   |
88 |         provider_id: String,
   |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/provider.rs:89:9
   |
89 |         timestamp: SystemTime},
   |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/context/provider.rs:90:5
   |
90 |     ProviderStopped {
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/provider.rs:91:9
   |
91 |         provider_type: String,
   |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/provider.rs:92:9
   |
92 |         provider_id: String,
   |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/provider.rs:93:9
   |
93 |         timestamp: SystemTime},
   |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/provider.rs:97:9
   |
97 |         context_type: String,
   |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/provider.rs:98:9
   |
98 |         source: String,
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/provider.rs:99:9
   |
99 |         timestamp: SystemTime},
   |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:100:5
    |
100 |     ContextLoadCompleted {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:101:9
    |
101 |         context_type: String,
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:102:9
    |
102 |         source: String,
    |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:103:9
    |
103 |         documents_loaded: usize,
    |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:104:9
    |
104 |         duration_nanos: u64,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:105:9
    |
105 |         timestamp: SystemTime},
    |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:106:5
    |
106 |     ContextLoadFailed {
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:107:9
    |
107 |         context_type: String,
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:108:9
    |
108 |         source: String,
    |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:109:9
    |
109 |         error: String,
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:110:9
    |
110 |         timestamp: SystemTime},
    |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:114:9
    |
114 |         memory_id: String,
    |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:115:9
    |
115 |         content_hash: String,
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:116:9
    |
116 |         timestamp: SystemTime},
    |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:117:5
    |
117 |     MemorySearchCompleted {
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:118:9
    |
118 |         query: String,
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:119:9
    |
119 |         results_count: usize,
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:120:9
    |
120 |         duration_nanos: u64,
    |         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:121:9
    |
121 |         timestamp: SystemTime},
    |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:125:9
    |
125 |         metric: String,
    |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:126:9
    |
126 |         threshold: f64,
    |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:127:9
    |
127 |         actual: f64,
    |         ^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:128:9
    |
128 |         timestamp: SystemTime},
    |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:132:9
    |
132 |         validation_type: String,
    |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:133:9
    |
133 |         error: String,
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:134:9
    |
134 |         timestamp: SystemTime}}
    |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:139:5
    |
139 |     pub id: String,
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:140:5
    |
140 |     pub content: String,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:141:5
    |
141 |     pub metadata: HashMap<String, String>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:142:5
    |
142 |     pub embedding: Option<Vec<f32>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:143:5
    |
143 |     pub timestamp: SystemTime}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:210:5
    |
210 |     pub successful_operations: AtomicU64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:211:5
    |
211 |     pub failed_operations: AtomicU64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:212:5
    |
212 |     pub total_processing_time_nanos: AtomicU64}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:308:5
    |
308 |     pub name: String,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:309:5
    |
309 |     pub version: String,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:310:5
    |
310 |     pub vector_dimension: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:311:5
    |
311 |     pub max_input_length: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:312:5
    |
312 |     pub supported_languages: Vec<String>}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:338:5
    |
338 |     pub name: String,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:339:5
    |
339 |     pub version: String,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:340:5
    |
340 |     pub storage_type: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:341:5
    |
341 |     pub max_memory_nodes: Option<usize>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:342:5
    |
342 |     pub supported_operations: Vec<String>}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:553:5
    |
553 |     pub processor_id: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:554:5
    |
554 |     pub context_requests: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:555:5
    |
555 |     pub active_contexts: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:556:5
    |
556 |     pub total_contexts_processed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:557:5
    |
557 |     pub successful_contexts: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:558:5
    |
558 |     pub failed_contexts: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:559:5
    |
559 |     pub total_documents_loaded: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:560:5
    |
560 |     pub success_rate: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:561:5
    |
561 |     pub average_processing_time_nanos: u64}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:572:5
    |
572 |     File(ImmutableFileContext),
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:573:5
    |
573 |     Files(ImmutableFilesContext),
    |     ^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:574:5
    |
574 |     Directory(ImmutableDirectoryContext),
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:575:5
    |
575 |     Github(ImmutableGithubContext)}
    |     ^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/context/provider.rs:910:1
    |
910 | pub type FilesContext = ImmutableFilesContext;
    | ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/context/provider.rs:913:1
    |
913 | pub type DirectoryContext = ImmutableDirectoryContext;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/context/provider.rs:916:1
    |
916 | pub type GithubContext = ImmutableGithubContext;
    | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> packages/domain/src/context/provider.rs:919:1
    |
919 | pub trait EmbeddingModel: ImmutableEmbeddingModel {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> packages/domain/src/context/provider.rs:922:1
    |
922 | pub trait MemoryManager: ImmutableMemoryManager {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/core/mod.rs:43:5
   |
43 |     SendError,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/core/mod.rs:45:5
   |
45 |     ReceiveError,
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/core/mod.rs:47:5
   |
47 |     Closed}
   |     ^^^^^^

warning: missing documentation for a struct
  --> packages/domain/src/embedding/core.rs:40:1
   |
40 | pub struct Embedding {
   | ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/embedding/core.rs:41:5
   |
41 |     pub document: String,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/embedding/core.rs:42:5
   |
42 |     pub vec: ZeroOneOrMany<f64>}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> packages/domain/src/embedding/service.rs:13:1
   |
13 | pub enum VectorStoreError {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/embedding/service.rs:15:5
   |
15 |     NotFound,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/embedding/service.rs:17:5
   |
17 |     OperationFailed(String)}
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/engine.rs:27:5
   |
27 |     ProviderNotAvailable,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/engine.rs:30:5
   |
30 |     ModelNotFound,
   |     ^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/engine.rs:33:5
   |
33 |     ConfigurationError(String),
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/engine.rs:36:5
   |
36 |     AuthenticationFailed,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/engine.rs:39:5
   |
39 |     RateLimitExceeded { retry_after_seconds: u64 },
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/engine.rs:39:25
   |
39 |     RateLimitExceeded { retry_after_seconds: u64 },
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/engine.rs:42:5
   |
42 |     RequestTimeout { timeout_seconds: u64 },
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/engine.rs:42:22
   |
42 |     RequestTimeout { timeout_seconds: u64 },
   |                      ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/engine.rs:45:5
   |
45 |     NetworkError(String),
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/engine.rs:48:5
   |
48 |     InvalidInput,
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/engine.rs:51:5
   |
51 |     ServiceUnavailable,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/engine.rs:54:5
   |
54 |     InternalError(String)}
   |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:183:5
    |
183 |     pub prompt: &'a str,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:184:5
    |
184 |     pub system_prompt: Option<&'a str>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:185:5
    |
185 |     pub conversation_history: &'a [&'a str],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:186:5
    |
186 |     pub tools: &'a [&'a str],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:187:5
    |
187 |     pub metadata: Option<&'a str>}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:496:5
    |
496 |     pub total_requests: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:497:5
    |
497 |     pub active_requests: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:498:5
    |
498 |     pub successful_requests: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:499:5
    |
499 |     pub failed_requests: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:500:5
    |
500 |     pub is_healthy: bool}
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:107:5
    |
107 |     pub fn get_state(&self) -> CircuitBreakerState {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:811:5
    |
811 |     fn into_zero_alloc_error(self) -> ZeroAllocError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:900:5
    |
900 | /     fn map_zero_alloc_err<F>(self, f: F) -> ZeroAllocResult<T>
901 | |     where
902 | |         F: FnOnce() -> ZeroAllocError;
    | |______________________________________^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:904:5
    |
904 |     fn with_error_metadata(self, key: &str, value: &str) -> ZeroAllocResult<T>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:906:5
    |
906 |     fn with_error_code(self, code: u64) -> ZeroAllocResult<T>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:908:5
    |
908 |     fn record_error(self) -> ZeroAllocResult<T>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/http/auth.rs:878:26
    |
878 |     InvalidTokenPrefix { expected: String, actual: String },
    |                          ^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> packages/domain/src/http/auth.rs:37:9
    |
37  | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/http/auth.rs:878:44
    |
878 |     InvalidTokenPrefix { expected: String, actual: String },
    |                                            ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/http/requests/completion.rs:820:16
    |
820 |     Required { function: FunctionChoice },
    |                ^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> packages/domain/src/http/requests/mod.rs:22:9
    |
22  | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct
 --> packages/domain/src/image.rs:4:1
  |
4 | pub struct Image {
  | ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
 --> packages/domain/src/image.rs:5:5
  |
5 |     pub data: String,
  |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
 --> packages/domain/src/image.rs:6:5
  |
6 |     pub format: Option<ContentFormat>,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
 --> packages/domain/src/image.rs:7:5
  |
7 |     pub media_type: Option<ImageMediaType>,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
 --> packages/domain/src/image.rs:8:5
  |
8 |     pub detail: Option<ImageDetail>}
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> packages/domain/src/image.rs:11:1
   |
11 | pub enum ContentFormat {
   | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/image.rs:12:5
   |
12 |     Base64,
   |     ^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/image.rs:13:5
   |
13 |     Url,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/image.rs:14:5
   |
14 |     Raw}
   |     ^^^

warning: missing documentation for an enum
  --> packages/domain/src/image.rs:17:1
   |
17 | pub enum ImageMediaType {
   | ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/image.rs:18:5
   |
18 |     PNG,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/image.rs:19:5
   |
19 |     JPEG,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/image.rs:20:5
   |
20 |     GIF,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/image.rs:21:5
   |
21 |     WEBP,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/image.rs:22:5
   |
22 |     SVG}
   |     ^^^

warning: missing documentation for an enum
  --> packages/domain/src/image.rs:26:1
   |
26 | pub enum ImageDetail {
   | ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/image.rs:27:5
   |
27 |     Low,
   |     ^^^

warning: missing documentation for a variant
  --> packages/domain/src/image.rs:28:5
   |
28 |     High,
   |     ^^^^

warning: missing documentation for a variant
  --> packages/domain/src/image.rs:29:5
   |
29 |     Auto}
   |     ^^^^

warning: missing documentation for a static
  --> packages/domain/src/init/globals.rs:44:1
   |
44 | pub static CIRCUIT_BREAKER_LAST_RESET: std::sync::atomic::AtomicU64 =
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> packages/domain/src/init/globals.rs:48:1
   |
48 | / thread_local! {
49 | |     pub static LOCAL_CONFIG: std::cell::RefCell<Option<Arc<MemoryConfig>>> =
50 | |         std::cell::RefCell::new(None);
51 | | }
   | |_^
   |
   = note: this warning originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: missing documentation for an associated type
  --> packages/domain/src/memory/mod.rs:82:5
   |
82 |     type Error;
   |     ^^^^^^^^^^

warning: missing documentation for an associated type
  --> packages/domain/src/memory/mod.rs:83:5
   |
83 |     type MemoryNode;
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/memory/mod.rs:85:5
   |
85 |     fn store_memory(&self, memory: Self::MemoryNode) -> Result<(), Self::Error>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> packages/domain/src/memory/mod.rs:91:1
   |
91 | pub type Error = crate::memory::primitives::MemoryError;
   | ^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> packages/domain/src/memory/mod.rs:94:1
   |
94 | pub type VectorStoreError = Error;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a module
 --> packages/domain/src/memory/primitives/mod.rs:1:1
  |
1 | pub mod node;
  | ^^^^^^^^^^^^

warning: missing documentation for a module
 --> packages/domain/src/memory/primitives/mod.rs:2:1
  |
2 | pub mod types;
  | ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/memory/primitives/types.rs:230:14
    |
230 |     Binary { data: Bytes, content_type: Arc<str> }}
    |              ^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/memory/primitives/types.rs:230:27
    |
230 |     Binary { data: Bytes, content_type: Arc<str> }}
    |                           ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/memory/primitives/types.rs:553:5
    |
553 |     NotFound(String),
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/memory/primitives/types.rs:555:5
    |
555 |     InvalidType(String),
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/memory/primitives/types.rs:557:5
    |
557 |     InvalidContent(String),
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/memory/primitives/types.rs:559:5
    |
559 |     Serialization(String),
    |     ^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/memory/primitives/types.rs:561:5
    |
561 |     Validation(String),
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/memory/primitives/types.rs:563:5
    |
563 |     OperationFailed(String),
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/memory/primitives/types.rs:565:5
    |
565 |     StorageError(String)}
    |     ^^^^^^^^^^^^

warning: missing documentation for a module
 --> packages/domain/src/memory/config/mod.rs:2:1
  |
2 | pub mod database;
  | ^^^^^^^^^^^^^^^^

warning: missing documentation for a module
 --> packages/domain/src/memory/config/mod.rs:4:1
  |
4 | pub mod memory;
  | ^^^^^^^^^^^^^^

warning: missing documentation for a module
 --> packages/domain/src/memory/config/mod.rs:6:1
  |
6 | pub mod vector;
  | ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/memory/config/llm.rs:157:5
    |
157 |     InvalidModel(String),
    |     ^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/memory/config/llm.rs:160:5
    |
160 |     InvalidParameter(String),
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/memory/config/llm.rs:163:5
    |
163 |     ValidationError(String)}
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> packages/domain/src/memory/manager.rs:28:1
   |
28 | pub struct MemoryConfig {
   | ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/manager.rs:29:5
   |
29 |     pub database_url: String,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/manager.rs:30:5
   |
30 |     pub embedding_dimension: usize}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
  --> packages/domain/src/memory/manager.rs:40:1
   |
40 | pub trait MemoryManagerTrait: Send + Sync {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> packages/domain/src/memory/manager.rs:44:1
   |
44 | pub struct SurrealDBMemoryManager {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:60:5
   |
60 |     pub avx2: bool,
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:61:5
   |
61 |     pub avx512f: bool,
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:62:5
   |
62 |     pub avx512bw: bool,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:63:5
   |
63 |     pub avx512vl: bool,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:64:5
   |
64 |     pub fma: bool,
   |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:65:5
   |
65 |     pub sse42: bool,
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:66:5
   |
66 |     pub neon: bool,
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:67:5
   |
67 |     pub architecture: CpuArchitecture}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/memory/ops.rs:72:5
   |
72 |     X86_64,
   |     ^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/memory/ops.rs:73:5
   |
73 |     AArch64,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/memory/ops.rs:74:5
   |
74 |     Other}
   |     ^^^^^

warning: missing documentation for an associated function
  --> packages/domain/src/memory/ops.rs:78:5
   |
78 |     pub fn detect() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:51:9
   |
51 |         content: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:52:9
   |
52 |         memory_type: MemoryType},
   |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:54:14
   |
54 |     Recall { query: String, limit: Option<usize> },
   |              ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:54:29
   |
54 |     Recall { query: String, limit: Option<usize> },
   |                             ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:56:20
   |
56 |     VectorSearch { vector: Vec<f32>, limit: usize },
   |                    ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:56:38
   |
56 |     VectorSearch { vector: Vec<f32>, limit: usize },
   |                                      ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:58:17
   |
58 |     GetMemory { id: String },
   |                 ^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:60:20
   |
60 |     UpdateMemory { memory: MemoryNode },
   |                    ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:62:20
   |
62 |     DeleteMemory { id: String }}
   |                    ^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/error.rs:12:9
   |
12 |         provider: Cow<'static, str>,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/error.rs:13:9
   |
13 |         name: Cow<'static, str>},
   |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/error.rs:20:9
   |
20 |         provider: Cow<'static, str>,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/error.rs:21:9
   |
21 |         name: Cow<'static, str>},
   |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/resolver.rs:118:21
    |
118 |     HasCapability { capability: String },
    |                     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/resolver.rs:121:18
    |
121 |     HasFeature { feature: String },
    |                  ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/resolver.rs:124:17
    |
124 |     EnvVarSet { name: String },
    |                 ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/resolver.rs:127:22
    |
127 |     FeatureEnabled { name: String }}
    |                      ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:15:20
   |
15 |     MissingField { field: String, model: String },
   |                    ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:15:35
   |
15 |     MissingField { field: String, model: String },
   |                                   ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:19:9
   |
19 |         field: String,
   |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:20:9
   |
20 |         value: String,
   |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:21:9
   |
21 |         expected: String},
   |         ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:24:24
   |
24 |     InconsistentData { description: String },
   |                        ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:27:23
   |
27 |     InvalidProvider { provider: String },
   |                       ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:30:24
   |
30 |     InvalidModelName { name: String },
   |                        ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:33:22
   |
33 |     InvalidPricing { description: String },
   |                      ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:36:25
   |
36 |     InvalidCapability { description: String },
   |                         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:39:27
   |
39 |     UnsafeConfiguration { description: String }}
   |                           ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
 --> packages/domain/src/prompt/mod.rs:6:1
  |
6 | pub struct Prompt {
  | ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
 --> packages/domain/src/prompt/mod.rs:7:5
  |
7 |     pub content: String,
  |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
 --> packages/domain/src/prompt/mod.rs:9:5
  |
9 |     pub role: MessageRole}
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> packages/domain/src/prompt/mod.rs:16:5
   |
16 |     pub fn new(content: impl Into<String>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/prompt/mod.rs:22:5
   |
22 |     pub fn content(&self) -> &str {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> packages/domain/src/tool/core.rs:43:5
   |
43 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/tool/core.rs:47:5
   |
47 |     pub fn push(&mut self, tool: ToolDefinition) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/tool/core.rs:55:5
   |
55 |     Typed(Box<dyn std::any::Any + Send + Sync>),
   |     ^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/tool/core.rs:56:5
   |
56 |     Named(NamedTool)}
   |     ^^^^^

warning: `fluent_ai_domain` (lib) generated 937 warnings
    Checking fluent_ai_provider v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/provider)
    Checking fluent_ai_candle v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/fluent-ai-candle)
error[E0252]: the name `StreamingCompletionResponse` is defined multiple times
  --> packages/provider/src/clients/xai/streaming.rs:19:5
   |
6  | use crate::streaming::StreamingCompletionResponse;
   |     --------------------------------------------- previous import of the trait `StreamingCompletionResponse` here
...
19 | use crate::streaming::StreamingCompletionResponse;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `StreamingCompletionResponse` reimported here
   |
   = note: `StreamingCompletionResponse` must be defined only once in the type namespace of this module

error: environment variable `OUT_DIR` not defined at compile time
  --> packages/provider/src/lib.rs:15:18
   |
15 | include!(concat!(env!("OUT_DIR"), "/providers.rs"));
   |                  ^^^^^^^^^^^^^^^
   |
   = help: Cargo sets build script variables at run time. Use `std::env::var("OUT_DIR")` instead

error: environment variable `OUT_DIR` not defined at compile time
  --> packages/provider/src/lib.rs:16:18
   |
16 | include!(concat!(env!("OUT_DIR"), "/models.rs"));
   |                  ^^^^^^^^^^^^^^^
   |
   = help: Cargo sets build script variables at run time. Use `std::env::var("OUT_DIR")` instead

error[E0432]: unresolved import `fluent_ai_domain::message::MimeType`
   --> packages/provider/src/clients/gemini/completion.rs:824:43
    |
824 |     use fluent_ai_domain::message::{self, MimeType as _};
    |                                           ^^^^^^^^^^^^^ no `MimeType` in `chat::message`

error[E0432]: unresolved import `fluent_ai_domain::channel`
  --> packages/provider/src/clients/groq/client.rs:36:35
   |
36 | use fluent_ai_domain::{AsyncTask, channel, spawn_async};
   |                                   ^^^^^^^
   |                                   |
   |                                   no `channel` in the root
   |                                   help: a similar name exists in the module (notice the capitalization): `Channel`
   |
   = help: consider importing one of these items instead:
           crate::channel
           crossbeam::channel
           fluent_ai_async::channel
           futures::channel

error[E0432]: unresolved import `fluent_ai_domain::channel`
  --> packages/provider/src/clients/openrouter/client.rs:14:35
   |
14 | use fluent_ai_domain::{AsyncTask, channel, spawn_async};
   |                                   ^^^^^^^
   |                                   |
   |                                   no `channel` in the root
   |                                   help: a similar name exists in the module (notice the capitalization): `Channel`
   |
   = help: consider importing one of these items instead:
           crate::channel
           crossbeam::channel
           fluent_ai_async::channel
           futures::channel

error[E0432]: unresolved import `super::types`
 --> packages/provider/src/clients/openrouter/completion.rs:2:12
  |
2 | use super::types::{
  |            ^^^^^ could not find `types` in `super`

error[E0432]: unresolved import `fluent_ai_domain::message::ToolCall`
   --> packages/provider/src/clients/openrouter/streaming.rs:29:5
    |
29  | use fluent_ai_domain::message::ToolCall;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `ToolCall` in `chat::message`
    |
note: struct `crate::clients::ollama::completion::ToolCall` exists but is inaccessible
   --> packages/provider/src/clients/ollama/completion.rs:391:1
    |
391 | pub struct ToolCall {
    | ^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items instead
    |
29  - use fluent_ai_domain::message::ToolCall;
29  + use crate::ToolCall;
    |
29  - use fluent_ai_domain::message::ToolCall;
29  + use crate::clients::anthropic::ToolCall;
    |
29  - use fluent_ai_domain::message::ToolCall;
29  + use crate::clients::mistral::completion::ToolCall;
    |
29  - use fluent_ai_domain::message::ToolCall;
29  + use crate::clients::openrouter::streaming::CompletionChunk::ToolCall;
    |
      and 3 other candidates

error[E0432]: unresolved import `fluent_ai_http3::stream::SseEvent`
  --> packages/provider/src/clients/openrouter/streaming.rs:30:5
   |
30 | use fluent_ai_http3::stream::SseEvent;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `SseEvent` in `stream`
   |
help: consider importing one of these structs instead
   |
30 - use fluent_ai_http3::stream::SseEvent;
30 + use crate::SseEvent;
   |
30 - use fluent_ai_http3::stream::SseEvent;
30 + use fluent_ai_http3::SseEvent;
   |

error[E0432]: unresolved import `fluent_ai_domain::channel`
  --> packages/provider/src/clients/together/client.rs:13:35
   |
13 | use fluent_ai_domain::{AsyncTask, channel, spawn_async};
   |                                   ^^^^^^^
   |                                   |
   |                                   no `channel` in the root
   |                                   help: a similar name exists in the module (notice the capitalization): `Channel`
   |
   = help: consider importing one of these items instead:
           crate::channel
           crossbeam::channel
           fluent_ai_async::channel
           futures::channel

error[E0433]: failed to resolve: could not find `types` in `super`
  --> packages/provider/src/clients/together/completion.rs:14:12
   |
14 | use super::types::{
   |            ^^^^^ could not find `types` in `super`

error[E0432]: unresolved import `super::types`
  --> packages/provider/src/clients/together/completion.rs:14:12
   |
14 | use super::types::{
   |            ^^^^^ could not find `types` in `super`

error[E0432]: unresolved imports `crate::domain::ToolCall`, `crate::domain::ToolFunction`
   --> packages/provider/src/clients/openai/messages.rs:13:44
    |
13  |     Message as DomainMessage, MessageRole, ToolCall as DomainToolCall, ToolFunction};
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^ no `ToolFunction` in the root
    |                                            |
    |                                            no `ToolCall` in the root
    |
    = help: consider importing one of these items instead:
            crate::ToolCall
            crate::clients::anthropic::ToolCall
            crate::clients::mistral::completion::ToolCall
            crate::domain::chunk::CompletionChunk::ToolCall
            crate::domain::http::ToolCall
            fluent_ai_domain::chunk::CompletionChunk::ToolCall
            fluent_ai_domain::http::ToolCall
note: struct `crate::clients::ollama::completion::ToolCall` exists but is inaccessible
   --> packages/provider/src/clients/ollama/completion.rs:391:1
    |
391 | pub struct ToolCall {
    | ^^^^^^^^^^^^^^^^^^^ not accessible

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/anthropic/completion.rs:21:5
   |
21 | use fluent_ai_http_structs::{
   |     ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0432]: unresolved imports `crate::openai::OpenAIContent`, `crate::openai::OpenAIContentPart`, `crate::openai::OpenAIImageUrl`, `crate::openai::OpenAITool`, `crate::openai::OpenAIFunction`, `crate::openai::OpenAIToolCall`, `crate::openai::OpenAIFunctionCall`, `crate::openai::OpenAIToolChoice`, `crate::openai::OpenAIResponseFormat`, `crate::openai::OpenAIResponseMessage`, `crate::openai::OpenAIResponseToolCall`, `crate::openai::OpenAIResponseFunction`, `crate::openai::OpenAILogprobs`, `crate::openai::OpenAIContentLogprob`, `crate::openai::OpenAITopLogprob`, `crate::openai::OpenAIErrorResponse`, `crate::openai::OpenAIStreamingChunk`, `crate::openai::OpenAIStreamingChoice`, `crate::openai::OpenAIStreamingDelta`, `crate::openai::OpenAIStreamingToolCall`, `crate::openai::OpenAIStreamingFunction`
  --> packages/provider/src/clients/xai/types.rs:16:5
   |
16 |     OpenAIContent as XAIContent,
   |     -------------^^^^^^^^^^^^^^
   |     |
   |     no `OpenAIContent` in `clients::openai`
   |     help: a similar name exists in the module: `OpenAIClient`
17 |     OpenAIContentPart as XAIContentPart,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAIContentPart` in `clients::openai`
18 |     OpenAIImageUrl as XAIImageUrl,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAIImageUrl` in `clients::openai`
19 |     OpenAITool as XAITool,
   |     ^^^^^^^^^^^^^^^^^^^^^ no `OpenAITool` in `clients::openai`
20 |     OpenAIFunction as XAIFunction,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAIFunction` in `clients::openai`
21 |     OpenAIToolCall as XAIToolCall,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAIToolCall` in `clients::openai`
22 |     OpenAIFunctionCall as XAIFunctionCall,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAIFunctionCall` in `clients::openai`
23 |     OpenAIToolChoice as XAIToolChoice,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAIToolChoice` in `clients::openai`
24 |     // OpenAIToolChoiceFunction as XAIToolChoiceFunction, // TODO: Add when OpenAIToolChoiceFunction is defined
25 |     OpenAIResponseFormat as XAIResponseFormat,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAIResponseFormat` in `clients::openai`
26 |     OpenAIResponseMessage as XAIResponseMessage,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAIResponseMessage` in `clients::openai`
27 |     OpenAIResponseToolCall as XAIResponseToolCall,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
28 |     OpenAIResponseFunction as XAIResponseFunction,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
29 |     OpenAILogprobs as XAILogprobs,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
30 |     OpenAIContentLogprob as XAIContentLogprob,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
31 |     OpenAITopLogprob as XAITopLogprob,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
32 |     OpenAIErrorResponse as XAIErrorResponse,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
33 |     OpenAIError as XAIError,
34 |     OpenAIStreamingChunk as XAIStreamingChunk,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
35 |     OpenAIStreamingChoice as XAIStreamingChoice,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
36 |     OpenAIStreamingDelta as XAIStreamingDelta,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
37 |     OpenAIStreamingToolCall as XAIStreamingToolCall,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
38 |     OpenAIStreamingFunction as XAIStreamingFunction};
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: enum `crate::openai::messages::OpenAIContent` exists but is inaccessible
  --> packages/provider/src/clients/openai/messages.rs:33:1
   |
33 | pub enum OpenAIContent {
   | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: struct `crate::openai::messages::OpenAIContentPart` exists but is inaccessible
  --> packages/provider/src/clients/openai/messages.rs:39:1
   |
39 | pub struct OpenAIContentPart {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: struct `crate::openai::messages::OpenAIImageUrl` exists but is inaccessible
  --> packages/provider/src/clients/openai/messages.rs:51:1
   |
51 | pub struct OpenAIImageUrl {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: struct `crate::openai::tools::OpenAITool` exists but is inaccessible
  --> packages/provider/src/clients/openai/tools.rs:15:1
   |
15 | pub struct OpenAITool {
   | ^^^^^^^^^^^^^^^^^^^^^ not accessible
note: struct `crate::openai::tools::OpenAIFunction` exists but is inaccessible
  --> packages/provider/src/clients/openai/tools.rs:22:1
   |
22 | pub struct OpenAIFunction {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: these structs exist but are inaccessible
  --> packages/provider/src/clients/openai/messages.rs:66:1
   |
66 | pub struct OpenAIToolCall {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::openai::messages::OpenAIToolCall`: not accessible
   |
  ::: packages/provider/src/clients/openai/tools.rs:48:1
   |
48 | pub struct OpenAIToolCall {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::openai::tools::OpenAIToolCall`: not accessible
note: these structs exist but are inaccessible
  --> packages/provider/src/clients/openai/messages.rs:74:1
   |
74 | pub struct OpenAIFunctionCall {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::openai::messages::OpenAIFunctionCall`: not accessible
   |
  ::: packages/provider/src/clients/openai/tools.rs:56:1
   |
56 | pub struct OpenAIFunctionCall {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::openai::tools::OpenAIFunctionCall`: not accessible
note: enum `crate::openai::tools::OpenAIToolChoice` exists but is inaccessible
  --> packages/provider/src/clients/openai/tools.rs:32:1
   |
32 | pub enum OpenAIToolChoice {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0432]: unresolved import `super::completion::AnthropicCompletionRequest`
 --> packages/provider/src/clients/anthropic/requests.rs:8:5
  |
8 | use super::completion::AnthropicCompletionRequest;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `AnthropicCompletionRequest` in `clients::anthropic::completion`
  |
help: a similar name exists in the module
  |
8 - use super::completion::AnthropicCompletionRequest;
8 + use super::completion::AnthropicCompletionBuilder;
  |
help: consider importing this struct through its public re-export instead
  |
8 - use super::completion::AnthropicCompletionRequest;
8 + use crate::clients::AnthropicCompletionRequest;
  |

error[E0432]: unresolved imports `function_calling::ToolRegistry`, `function_calling::ToolWithDeps`, `function_calling::ToolWithInvocation`, `function_calling::ToolWithRequestSchema`, `function_calling::ToolWithSchemas`, `function_calling::TypedTool`, `function_calling::TypedToolStorage`, `function_calling::TypedToolTrait`
  --> packages/provider/src/clients/anthropic/tools/mod.rs:32:17
   |
32 |     ToolOutput, ToolRegistry, ToolResult, ToolWithDeps, ToolWithInvocation, ToolWithRequestSchema,
   |                 ^^^^^^^^^^^^              ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^ no `ToolWithRequestSchema` in `clients::anthropic::tools::function_calling`
   |                 |                         |             |
   |                 |                         |             no `ToolWithInvocation` in `clients::anthropic::tools::function_calling`
   |                 |                         no `ToolWithDeps` in `clients::anthropic::tools::function_calling`
   |                 no `ToolRegistry` in `clients::anthropic::tools::function_calling`
33 |     ToolWithSchemas, TypedTool, TypedToolStorage, TypedToolTrait};
   |     ^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^ no `TypedToolTrait` in `clients::anthropic::tools::function_calling`
   |     |                |          |
   |     |                |          no `TypedToolStorage` in `clients::anthropic::tools::function_calling`
   |     |                no `TypedTool` in `clients::anthropic::tools::function_calling`
   |     no `ToolWithSchemas` in `clients::anthropic::tools::function_calling`
   |
help: a similar name exists in the module
   |
32 -     ToolOutput, ToolRegistry, ToolResult, ToolWithDeps, ToolWithInvocation, ToolWithRequestSchema,
32 +     ToolOutput, ToolRegistry, ToolResult, ToolWithDeps, WithInvocation, ToolWithRequestSchema,
   |
help: a similar name exists in the module
   |
32 -     ToolOutput, ToolRegistry, ToolResult, ToolWithDeps, ToolWithInvocation, ToolWithRequestSchema,
32 +     ToolOutput, ToolRegistry, ToolResult, ToolWithDeps, ToolWithInvocation, WithRequestSchema,
   |
help: a similar name exists in the module
   |
33 -     ToolWithSchemas, TypedTool, TypedToolStorage, TypedToolTrait};
33 +     ToolWithSchemas, NamedTool, TypedToolStorage, TypedToolTrait};
   |
help: a similar name exists in the module
   |
33 -     ToolWithSchemas, TypedTool, TypedToolStorage, TypedToolTrait};
33 +     ToolWithSchemas, TypedTool, ToolStorage, TypedToolTrait};
   |

error[E0432]: unresolved imports `super::models::CandleDevice`, `super::models::CandleModelInfo`
  --> packages/provider/src/clients/candle/client.rs:25:21
   |
25 | use super::models::{CandleDevice, CandleModel, CandleModelInfo};
   |                     ^^^^^^^^^^^^               ^^^^^^^^^^^^^^^
   |                     |                          |
   |                     |                          no `CandleModelInfo` in `clients::candle::models`
   |                     |                          help: a similar name exists in the module: `CandleModel`
   |                     no `CandleDevice` in `clients::candle::models`

error[E0432]: unresolved imports `super::error::InferenceErrorCode`, `super::error::InferenceStage`
   --> packages/provider/src/clients/candle/client.rs:387:28
    |
387 |         use super::error::{InferenceErrorCode, InferenceStage};
    |                            ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^ no `InferenceStage` in `clients::candle::error`
    |                            |
    |                            no `InferenceErrorCode` in `clients::candle::error`

error[E0432]: unresolved import `super::models::CandleDevice`
  --> packages/provider/src/clients/candle/device_manager.rs:16:5
   |
16 | use super::models::CandleDevice;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `CandleDevice` in `clients::candle::models`

error[E0432]: unresolved import `super::models::CandleDevice`
  --> packages/provider/src/clients/candle/error.rs:12:21
   |
12 | use super::models::{CandleDevice, CandleModel};
   |                     ^^^^^^^^^^^^ no `CandleDevice` in `clients::candle::models`

error[E0432]: unresolved import `super::models::CandleDevice`
  --> packages/provider/src/clients/candle/model_repo.rs:20:21
   |
20 | use super::models::{CandleDevice, CandleModel};
   |                     ^^^^^^^^^^^^ no `CandleDevice` in `clients::candle::models`

error[E0432]: unresolved import `models::CandleModelInfo`
  --> packages/provider/src/clients/candle/mod.rs:29:31
   |
29 | pub use models::{CandleModel, CandleModelInfo};
   |                               ^^^^^^^^^^^^^^^
   |                               |
   |                               no `CandleModelInfo` in `clients::candle::models`
   |                               help: a similar name exists in the module: `CandleModel`

error[E0432]: unresolved import `super::completion::CompletionModel`
  --> packages/provider/src/clients/gemini/client.rs:27:25
   |
27 | use super::completion::{CompletionModel, GEMINI_1_5_PRO};
   |                         ^^^^^^^^^^^^^^^
   |                         |
   |                         no `CompletionModel` in `clients::gemini::completion`
   |                         help: a similar name exists in the module: `CompletionChunk`
   |
   = help: consider importing one of these items instead:
           crate::CompletionModel
           crate::clients::groq::CompletionModel
           crate::clients::mistral::CompletionModel
           crate::clients::xai::CompletionModel
           fluent_ai_domain::CompletionModel

error[E0432]: unresolved import `super::completion::CompletionModel`
 --> packages/provider/src/clients/gemini/streaming.rs:5:25
  |
5 | use super::completion::{CompletionModel, create_request_body, gemini_api_types::ContentCandidate};
  |                         ^^^^^^^^^^^^^^^
  |                         |
  |                         no `CompletionModel` in `clients::gemini::completion`
  |                         help: a similar name exists in the module: `CompletionChunk`
  |
  = help: consider importing one of these items instead:
          crate::CompletionModel
          crate::clients::groq::CompletionModel
          crate::clients::mistral::CompletionModel
          crate::clients::xai::CompletionModel
          fluent_ai_domain::CompletionModel

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/gemini/gemini_client.rs:16:5
   |
16 | use fluent_ai_http_structs::{
   |     ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0432]: unresolved import `crate::completion`
 --> packages/provider/src/clients/gemini/streaming.rs:7:5
  |
7 |     completion::{CompletionError, CompletionRequest},
  |     ^^^^^^^^^^
  |     |
  |     unresolved import
  |     help: a similar path exists: `fluent_ai_domain::completion`

error[E0432]: unresolved imports `crate::completion`, `crate::completion`, `crate::message`
  --> packages/provider/src/clients/gemini/gemini_types.rs:16:5
   |
16 |     completion::{self, CompletionError},
   |     ^^^^^^^^^^   ^^^^ no `completion` in the root
   |     |
   |     unresolved import
   |     help: a similar path exists: `fluent_ai_domain::completion`
17 |     message};
   |     ^^^^^^^ no `message` in the root
   |
   = help: consider importing one of these modules instead:
           crate::clients::anthropic::completion
           crate::clients::azure::completion
           crate::clients::deepseek::completion
           crate::clients::gemini::completion
           crate::clients::huggingface::completion
           crate::clients::mistral::completion
           crate::clients::openrouter::completion
           crate::clients::perplexity::completion
           crate::clients::together::completion
           crate::clients::xai::completion
           crate::domain::completion
           crate::domain::http::requests::completion
           crate::domain::http::responses::completion
           fluent_ai_domain::completion
           fluent_ai_domain::http::requests::completion
           fluent_ai_domain::http::responses::completion
note: these modules exist but are inaccessible
  --> packages/provider/src/clients/bedrock/mod.rs:45:1
   |
45 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::bedrock::completion`: not accessible
   |
  ::: packages/provider/src/clients/groq/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
   |
  ::: packages/provider/src/clients/ollama/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::ollama::completion`: not accessible
   |
  ::: packages/provider/src/clients/openai/mod.rs:51:1
   |
51 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::openai::completion`: not accessible
   = help: consider importing one of these modules instead:
           crate::domain::message
           fluent_ai_domain::message

error[E0432]: unresolved import `completion::CompletionModel`
  --> packages/provider/src/clients/gemini/mod.rs:26:22
   |
26 | pub use completion::{CompletionModel, GeminiCompletionBuilder, completion_builder};
   |                      ^^^^^^^^^^^^^^^
   |                      |
   |                      no `CompletionModel` in `clients::gemini::completion`
   |                      help: a similar name exists in the module: `CompletionChunk`
   |
   = help: consider importing one of these items instead:
           crate::CompletionModel
           crate::clients::groq::CompletionModel
           crate::clients::mistral::CompletionModel
           crate::clients::xai::CompletionModel
           fluent_ai_domain::CompletionModel

error[E0432]: unresolved import `crate::clients::openai::CompletionResponse`
   --> packages/provider/src/clients/groq/completion.rs:170:9
    |
170 | pub use crate::clients::openai::CompletionResponse;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `CompletionResponse` in `clients::openai`
    |
note: struct `crate::clients::ollama::completion::CompletionResponse` exists but is inaccessible
   --> packages/provider/src/clients/ollama/completion.rs:51:1
    |
51  | pub struct CompletionResponse {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items instead
    |
170 - pub use crate::clients::openai::CompletionResponse;
170 + pub use crate::CompletionResponse;
    |
170 - pub use crate::clients::openai::CompletionResponse;
170 + pub use crate::clients::groq::completion::completion::CompletionResponse;
    |
170 - pub use crate::clients::openai::CompletionResponse;
170 + pub use crate::clients::mistral::completion::CompletionResponse;
    |
170 - pub use crate::clients::openai::CompletionResponse;
170 + pub use crate::clients::openrouter::completion::CompletionResponse;
    |
      and 5 other candidates

error[E0432]: unresolved imports `crate::clients::openai::CompletionResponse`, `crate::completion`, `crate::http`
  --> packages/provider/src/clients/groq/streaming.rs:16:23
   |
16 |     clients::openai::{CompletionResponse, StreamingChoice, StreamingMessage},
   |                       ^^^^^^^^^^^^^^^^^^ no `CompletionResponse` in `clients::openai`
17 |     completion::CompletionError,
   |     ^^^^^^^^^^ unresolved import
18 |     http::{HttpClient, HttpRequest}};
   |     ^^^^ unresolved import
   |
   = help: consider importing one of these items instead:
           crate::CompletionResponse
           crate::clients::groq::completion::CompletionResponse
           crate::clients::mistral::completion::CompletionResponse
           crate::clients::openrouter::completion::CompletionResponse
           crate::clients::perplexity::completion::CompletionResponse
           crate::clients::xai::completion::CompletionResponse
           crate::domain::completion::CompletionResponse
           crate::domain::http::CompletionResponse
           fluent_ai_domain::completion::CompletionResponse
           fluent_ai_domain::http::CompletionResponse
note: struct `crate::clients::ollama::completion::CompletionResponse` exists but is inaccessible
  --> packages/provider/src/clients/ollama/completion.rs:51:1
   |
51 | pub struct CompletionResponse {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: a similar path exists
   |
17 |     fluent_ai_domain::completion::CompletionError,
   |     ++++++++++++++++++
help: a similar path exists
   |
18 |     fluent_ai_domain::http::{HttpClient, HttpRequest}};
   |     ++++++++++++++++++

error[E0432]: unresolved import `super::completion::CompletionModel`
 --> packages/provider/src/clients/huggingface/streaming.rs:8:5
  |
8 | use super::completion::CompletionModel;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `CompletionModel` in `clients::huggingface::completion`
  |
help: a similar name exists in the module
  |
8 - use super::completion::CompletionModel;
8 + use super::completion::CompletionChunk;
  |
help: consider importing one of these items instead
  |
8 - use super::completion::CompletionModel;
8 + use crate::CompletionModel;
  |
8 - use super::completion::CompletionModel;
8 + use crate::clients::gemini::CompletionModel;
  |
8 - use super::completion::CompletionModel;
8 + use crate::clients::groq::CompletionModel;
  |
8 - use super::completion::CompletionModel;
8 + use crate::clients::mistral::CompletionModel;
  |
    and 2 other candidates

error[E0432]: unresolved import `super::completion::ApiResponse`
  --> packages/provider/src/clients/huggingface/transcription.rs:7:5
   |
7  | use super::completion::ApiResponse;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `ApiResponse` in `clients::huggingface::completion`
   |
note: these enums exist but are inaccessible
  --> packages/provider/src/clients/azure/completion.rs:63:1
   |
63 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::azure::completion::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/azure/embedding.rs:66:1
   |
66 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::azure::embedding::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/azure/transcription.rs:27:1
   |
27 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::azure::transcription::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/groq/completion.rs:81:1
   |
81 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::groq::completion::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/ollama/completion.rs:43:1
   |
43 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::ollama::completion::ApiResponse`: not accessible
help: consider importing one of these items instead
   |
7  - use super::completion::ApiResponse;
7  + use crate::clients::anthropic::ApiResponse;
   |
7  - use super::completion::ApiResponse;
7  + use crate::clients::gemini::ApiResponse;
   |
7  - use super::completion::ApiResponse;
7  + use crate::clients::openrouter::client::ApiResponse;
   |
7  - use super::completion::ApiResponse;
7  + use crate::clients::perplexity::client::ApiResponse;
   |
     and 1 other candidate

error[E0432]: unresolved imports `super::client::Client`, `super::client::Usage`
  --> packages/provider/src/clients/mistral/completion.rs:10:21
   |
10 | use super::client::{Client, Usage};
   |                     ^^^^^^  ^^^^^ no `Usage` in `clients::mistral::client`
   |                     |
   |                     no `Client` in `clients::mistral::client`
   |
   = help: consider importing one of these structs instead:
           crate::clients::azure::Client
           crate::clients::gemini::Client
           crate::clients::groq::Client
           crate::clients::huggingface::Client
           crate::clients::ollama::Client
           crate::clients::openrouter::Client
           crate::clients::perplexity::Client
           crate::clients::together::Client
           crate::clients::xai::Client
           crate::domain::tool::mcp::Client
           fluent_ai_domain::tool::mcp::Client
           progresshub::Client
           progresshub::bandwidth::dns::Client
   = help: consider importing one of these items instead:
           crate::clients::azure::Usage
           crate::clients::openrouter::client::Usage
           crate::clients::perplexity::completion::Usage
           crate::clients::together::embedding::Usage
           crate::clients::xai::completion::Usage
           crate::domain::Usage
           crate::domain::chat::commands::StatsType::Usage
           fluent_ai_domain::Usage
           fluent_ai_domain::chat::commands::StatsType::Usage

error[E0432]: unresolved import `crate::streaming::RawStreamingChoice`
  --> packages/provider/src/clients/mistral/completion.rs:11:24
   |
11 | use crate::streaming::{RawStreamingChoice, StreamingCompletionResponse};
   |                        ^^^^^^^^^^^^^^^^^^ no `RawStreamingChoice` in `streaming`
   |
   = help: consider importing this enum instead:
           crate::clients::openrouter::streaming::RawStreamingChoice

error[E0432]: unresolved import `crate::clients::mistral::client::ApiResponse`
  --> packages/provider/src/clients/mistral/completion.rs:12:24
   |
12 | use crate::{OneOrMany, clients::mistral::client::ApiResponse, json_util};
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `ApiResponse` in `clients::mistral::client`
   |
   = help: consider importing one of these items instead:
           crate::clients::anthropic::ApiResponse
           crate::clients::gemini::ApiResponse
           crate::clients::openrouter::client::ApiResponse
           crate::clients::perplexity::client::ApiResponse
           crate::clients::together::client::together_ai_api_types::ApiResponse
note: these enums exist but are inaccessible
  --> packages/provider/src/clients/azure/completion.rs:63:1
   |
63 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::azure::completion::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/azure/embedding.rs:66:1
   |
66 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::azure::embedding::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/azure/transcription.rs:27:1
   |
27 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::azure::transcription::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/groq/completion.rs:81:1
   |
81 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::groq::completion::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/ollama/completion.rs:43:1
   |
43 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::ollama::completion::ApiResponse`: not accessible

warning: unused import: `std::collections::HashMap`
 --> packages/fluent-ai-candle/src/types/candle_chat/chat/commands/types/parser.rs:6:5
  |
6 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

error[E0432]: unresolved imports `super::client::ApiResponse`, `super::client::Client`, `super::client::Usage`
  --> packages/provider/src/clients/mistral/embedding.rs:5:21
   |
5  | use super::client::{ApiResponse, Client, Usage};
   |                     ^^^^^^^^^^^  ^^^^^^  ^^^^^ no `Usage` in `clients::mistral::client`
   |                     |            |
   |                     |            no `Client` in `clients::mistral::client`
   |                     no `ApiResponse` in `clients::mistral::client`
   |
   = help: consider importing one of these items instead:
           crate::clients::anthropic::ApiResponse
           crate::clients::gemini::ApiResponse
           crate::clients::openrouter::client::ApiResponse
           crate::clients::perplexity::client::ApiResponse
           crate::clients::together::client::together_ai_api_types::ApiResponse
note: these enums exist but are inaccessible
  --> packages/provider/src/clients/azure/completion.rs:63:1
   |
63 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::azure::completion::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/azure/embedding.rs:66:1
   |
66 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::azure::embedding::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/azure/transcription.rs:27:1
   |
27 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::azure::transcription::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/groq/completion.rs:81:1
   |
81 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::groq::completion::ApiResponse`: not accessible
   |
  ::: packages/provider/src/clients/ollama/completion.rs:43:1
   |
43 | enum ApiResponse<T> {
   | ^^^^^^^^^^^^^^^^^^^ `crate::clients::ollama::completion::ApiResponse`: not accessible
   = help: consider importing one of these structs instead:
           crate::clients::azure::Client
           crate::clients::gemini::Client
           crate::clients::groq::Client
           crate::clients::huggingface::Client
           crate::clients::ollama::Client
           crate::clients::openrouter::Client
           crate::clients::perplexity::Client
           crate::clients::together::Client
           crate::clients::xai::Client
           crate::domain::tool::mcp::Client
           fluent_ai_domain::tool::mcp::Client
           progresshub::Client
           progresshub::bandwidth::dns::Client
   = help: consider importing one of these items instead:
           crate::clients::azure::Usage
           crate::clients::openrouter::client::Usage
           crate::clients::perplexity::completion::Usage
           crate::clients::together::embedding::Usage
           crate::clients::xai::completion::Usage
           crate::domain::Usage
           crate::domain::chat::commands::StatsType::Usage
           fluent_ai_domain::Usage
           fluent_ai_domain::chat::commands::StatsType::Usage

error[E0432]: unresolved import `client::Client`
 --> packages/provider/src/clients/mistral/mod.rs:6:18
  |
6 | pub use client::{Client, MistralCompletionBuilder};
  |                  ^^^^^^ no `Client` in `clients::mistral::client`
  |
  = help: consider importing one of these structs instead:
          crate::clients::azure::Client
          crate::clients::gemini::Client
          crate::clients::groq::Client
          crate::clients::huggingface::Client
          crate::clients::ollama::Client
          crate::clients::openrouter::Client
          crate::clients::perplexity::Client
          crate::clients::together::Client
          crate::clients::xai::Client
          crate::domain::tool::mcp::Client
          fluent_ai_domain::tool::mcp::Client
          progresshub::Client
          progresshub::bandwidth::dns::Client

error[E0432]: unresolved import `embedding::EmbeddingModel`
  --> packages/provider/src/clients/mistral/mod.rs:12:21
   |
12 | pub use embedding::{EmbeddingModel, MISTRAL_EMBED};
   |                     ^^^^^^^^^^^^^^ no `EmbeddingModel` in `clients::mistral::embedding`
   |
   = help: consider importing one of these items instead:
           crate::EmbeddingModel
           crate::clients::gemini::embedding::EmbeddingModel
           crate::domain::context::EmbeddingModel
           crate::domain::embedding::EmbeddingModel
           crate::embeddings::EmbeddingModel
           candle_transformers::models::stella_en_v5::EmbeddingModel
           fluent_ai_domain::context::EmbeddingModel
           fluent_ai_domain::embedding::EmbeddingModel

warning: unused import: `std::collections::HashMap`
 --> packages/fluent-ai-candle/src/types/candle_context/provider/processor.rs:5:5
  |
5 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0432]: unresolved imports `super::completion::CompletionModel`, `super::completion::EmbeddingModel`
  --> packages/provider/src/clients/ollama/client.rs:18:25
   |
18 | use super::completion::{CompletionModel, EmbeddingModel, MISTRAL_MAGISTRAR_SMALL};
   |                         ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^ no `EmbeddingModel` in `clients::ollama::completion`
   |                         |
   |                         no `CompletionModel` in `clients::ollama::completion`
   |                         help: a similar name exists in the module: `CompletionError`
   |
   = help: consider importing one of these items instead:
           crate::CompletionModel
           crate::clients::gemini::CompletionModel
           crate::clients::groq::CompletionModel
           crate::clients::mistral::CompletionModel
           crate::clients::xai::CompletionModel
           fluent_ai_domain::CompletionModel
   = help: consider importing one of these items instead:
           crate::EmbeddingModel
           crate::clients::gemini::embedding::EmbeddingModel
           crate::clients::mistral::EmbeddingModel
           crate::domain::context::EmbeddingModel
           crate::domain::embedding::EmbeddingModel
           crate::embeddings::EmbeddingModel
           candle_transformers::models::stella_en_v5::EmbeddingModel
           fluent_ai_domain::context::EmbeddingModel
           fluent_ai_domain::embedding::EmbeddingModel

warning: unused import: `std::collections::HashMap`
 --> packages/fluent-ai-candle/src/types/candle_context/provider/context_impls.rs:5:5
  |
5 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0432]: unresolved imports `crate::completion`, `crate::completion`, `crate::message`, `crate::runtime`, `crate::runtime`
  --> packages/provider/src/clients/ollama/client.rs:21:5
   |
21 |     completion::{
   |     ^^^^^^^^^^ unresolved import
22 |         self, CompletionError, CompletionRequest, CompletionRequestBuilder, Prompt, PromptError},
   |         ^^^^ no `completion` in the root
...
25 |     message::Message,
   |     ^^^^^^^ unresolved import
26 |     runtime::{self, AsyncTask}};
   |     ^^^^^^^   ^^^^ no `runtime` in the root
   |     |
   |     unresolved import
   |
   = help: consider importing one of these modules instead:
           crate::clients::anthropic::completion
           crate::clients::azure::completion
           crate::clients::deepseek::completion
           crate::clients::gemini::completion
           crate::clients::huggingface::completion
           crate::clients::mistral::completion
           crate::clients::ollama::completion
           crate::clients::openrouter::completion
           crate::clients::perplexity::completion
           crate::clients::together::completion
           crate::clients::xai::completion
           crate::domain::completion
           crate::domain::http::requests::completion
           crate::domain::http::responses::completion
           fluent_ai_domain::completion
           fluent_ai_domain::http::requests::completion
           fluent_ai_domain::http::responses::completion
note: these modules exist but are inaccessible
  --> packages/provider/src/clients/bedrock/mod.rs:45:1
   |
45 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::bedrock::completion`: not accessible
   |
  ::: packages/provider/src/clients/groq/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
   |
  ::: packages/provider/src/clients/openai/mod.rs:51:1
   |
51 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::openai::completion`: not accessible
   = help: consider importing this module instead:
           tokio::runtime
help: a similar path exists
   |
21 |     fluent_ai_domain::completion::{
   |     ++++++++++++++++++
help: a similar path exists
   |
25 |     fluent_ai_domain::message::Message,
   |     ++++++++++++++++++
help: a similar path exists
   |
26 |     tokio::runtime::{self, AsyncTask}};
   |     +++++++

error[E0432]: unresolved imports `crate::completion`, `crate::completion`, `crate::message`, `crate::message`, `crate::runtime`, `crate::runtime`
  --> packages/provider/src/clients/ollama/completion.rs:13:5
   |
13 |     completion::{
   |     ^^^^^^^^^^ unresolved import
14 |         self, AssistantContent, CompletionError, CompletionRequest, Message as CompletionMessage},
   |         ^^^^ no `completion` in the root
...
17 |     message::{self, Message, MessageError, Text, ToolResultContent, UserContent},
   |     ^^^^^^^   ^^^^ no `message` in the root
   |     |
   |     unresolved import
18 |     runtime::{self, AsyncTask},
   |     ^^^^^^^   ^^^^ no `runtime` in the root
   |     |
   |     unresolved import
   |
   = help: consider importing one of these modules instead:
           crate::clients::anthropic::completion
           crate::clients::azure::completion
           crate::clients::deepseek::completion
           crate::clients::gemini::completion
           crate::clients::huggingface::completion
           crate::clients::mistral::completion
           crate::clients::ollama::completion
           crate::clients::openrouter::completion
           crate::clients::perplexity::completion
           crate::clients::together::completion
           crate::clients::xai::completion
           crate::domain::completion
           crate::domain::http::requests::completion
           crate::domain::http::responses::completion
           fluent_ai_domain::completion
           fluent_ai_domain::http::requests::completion
           fluent_ai_domain::http::responses::completion
note: these modules exist but are inaccessible
  --> packages/provider/src/clients/bedrock/mod.rs:45:1
   |
45 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::bedrock::completion`: not accessible
   |
  ::: packages/provider/src/clients/groq/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
   |
  ::: packages/provider/src/clients/openai/mod.rs:51:1
   |
51 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::openai::completion`: not accessible
   = help: consider importing one of these modules instead:
           crate::domain::message
           fluent_ai_domain::message
   = help: consider importing this module instead:
           tokio::runtime
help: a similar path exists
   |
13 |     fluent_ai_domain::completion::{
   |     ++++++++++++++++++
help: a similar path exists
   |
17 |     fluent_ai_domain::message::{self, Message, MessageError, Text, ToolResultContent, UserContent},
   |     ++++++++++++++++++
help: a similar path exists
   |
18 |     tokio::runtime::{self, AsyncTask},
   |     +++++++

error[E0432]: unresolved imports `crate::completion`, `crate::runtime`, `crate::runtime`, `crate::streaming::RawStreamingChoice`
  --> packages/provider/src/clients/ollama/streaming.rs:13:5
   |
13 |     completion::CompletionError,
   |     ^^^^^^^^^^ unresolved import
14 |     runtime::{self, AsyncStream},
   |     ^^^^^^^   ^^^^ no `runtime` in the root
   |     |
   |     unresolved import
15 |     streaming::{RawStreamingChoice, StreamingCompletionResponse}};
   |                 ^^^^^^^^^^^^^^^^^^ no `RawStreamingChoice` in `streaming`
   |
   = help: consider importing this module instead:
           tokio::runtime
   = help: consider importing this enum instead:
           crate::clients::openrouter::streaming::RawStreamingChoice
help: a similar path exists
   |
13 |     fluent_ai_domain::completion::CompletionError,
   |     ++++++++++++++++++
help: a similar path exists
   |
14 |     tokio::runtime::{self, AsyncStream},
   |     +++++++

error[E0432]: unresolved imports `completion::CompletionModel`, `completion::EmbeddingModel`
  --> packages/provider/src/clients/ollama/mod.rs:14:22
   |
14 | pub use completion::{CompletionModel, EmbeddingModel};
   |                      ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^ no `EmbeddingModel` in `clients::ollama::completion`
   |                      |
   |                      no `CompletionModel` in `clients::ollama::completion`
   |
   = help: consider importing one of these items instead:
           crate::CompletionModel
           crate::clients::gemini::CompletionModel
           crate::clients::groq::CompletionModel
           crate::clients::mistral::CompletionModel
           crate::clients::xai::CompletionModel
           fluent_ai_domain::CompletionModel
   = help: consider importing one of these items instead:
           crate::EmbeddingModel
           crate::clients::gemini::embedding::EmbeddingModel
           crate::clients::mistral::EmbeddingModel
           crate::domain::context::EmbeddingModel
           crate::domain::embedding::EmbeddingModel
           crate::embeddings::EmbeddingModel
           candle_transformers::models::stella_en_v5::EmbeddingModel
           fluent_ai_domain::context::EmbeddingModel
           fluent_ai_domain::embedding::EmbeddingModel

error[E0432]: unresolved import `audio::OpenAIAudioClient`
  --> packages/provider/src/clients/openai/mod.rs:31:17
   |
31 | pub use audio::{OpenAIAudioClient, TranscriptionResponse};
   |                 ^^^^^^^^^^^^^^^^^ no `OpenAIAudioClient` in `clients::openai::audio`

error[E0432]: unresolved import `client::OpenAIProvider`
  --> packages/provider/src/clients/openai/mod.rs:33:32
   |
33 | pub use client::{OpenAIClient, OpenAIProvider};
   |                                ^^^^^^^^^^^^^^ no `OpenAIProvider` in `clients::openai::client`

error[E0432]: unresolved imports `completion::CompletionResponse`, `completion::OpenAICompletionRequest`, `completion::OpenAICompletionResponse`
  --> packages/provider/src/clients/openai/mod.rs:35:5
   |
35 |     CompletionResponse, OpenAICompletionBuilder, OpenAICompletionRequest, OpenAICompletionResponse};
   |     ^^^^^^^^^^^^^^^^^^                           ^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAICompletionResponse` in `clients::openai::completion`
   |     |                                            |
   |     |                                            no `OpenAICompletionRequest` in `clients::openai::completion`
   |     no `CompletionResponse` in `clients::openai::completion`
   |
   = help: consider importing one of these items instead:
           crate::CompletionResponse
           crate::clients::mistral::completion::CompletionResponse
           crate::clients::openrouter::completion::CompletionResponse
           crate::clients::perplexity::completion::CompletionResponse
           crate::clients::xai::completion::CompletionResponse
           crate::domain::completion::CompletionResponse
           crate::domain::http::CompletionResponse
           fluent_ai_domain::completion::CompletionResponse
           fluent_ai_domain::http::CompletionResponse
note: these items exist but are inaccessible:
      crate::clients::groq::completion::CompletionResponse
  --> packages/provider/src/clients/ollama/completion.rs:51:1
   |
51 | pub struct CompletionResponse {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::clients::ollama::completion::CompletionResponse`: not accessible
help: a similar name exists in the module
   |
35 -     CompletionResponse, OpenAICompletionBuilder, OpenAICompletionRequest, OpenAICompletionResponse};
35 +     CompletionResponse, OpenAICompletionBuilder, OpenAICompletionBuilder, OpenAICompletionResponse};
   |
help: a similar name exists in the module
   |
35 -     CompletionResponse, OpenAICompletionBuilder, OpenAICompletionRequest, OpenAICompletionResponse};
35 +     CompletionResponse, OpenAICompletionBuilder, OpenAICompletionRequest, OpenAICompletionBuilder};
   |

error[E0432]: unresolved import `embeddings::OpenAIEmbeddingClient`
  --> packages/provider/src/clients/openai/mod.rs:37:9
   |
37 | pub use embeddings::OpenAIEmbeddingClient;
   |         ^^^^^^^^^^^^---------------------
   |         |           |
   |         |           help: a similar name exists in the module: `OpenAIEmbeddingRequest`
   |         no `OpenAIEmbeddingClient` in `clients::openai::embeddings`

error[E0432]: unresolved import `streaming::OpenAIStream`
  --> packages/provider/src/clients/openai/mod.rs:41:5
   |
41 |     OpenAIStream, StreamingChoice, StreamingCompletionResponse, StreamingMessage,
   |     ^^^^^^^^^^^^ no `OpenAIStream` in `clients::openai::streaming`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/openai/completion.rs:21:5
   |
21 | use fluent_ai_http_structs::{
   |     ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/openai/discovery.rs:18:12
   |
18 | use crate::model::{
   |            ^^^^^
   |            |
   |            unresolved import
   |            help: a similar path exists: `fluent_ai_domain::model`

error[E0432]: unresolved import `vision::OpenAIVisionClient`
  --> packages/provider/src/clients/openai/mod.rs:43:9
   |
43 | pub use vision::OpenAIVisionClient;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAIVisionClient` in `clients::openai::vision`

error[E0432]: unresolved import `super::completion::CompletionModel`
  --> packages/provider/src/clients/openrouter/client.rs:19:25
   |
19 | use super::completion::{CompletionModel, GPT_4_1};
   |                         ^^^^^^^^^^^^^^^
   |                         |
   |                         no `CompletionModel` in `clients::openrouter::completion`
   |                         help: a similar name exists in the module: `CompletionError`
   |
   = help: consider importing one of these items instead:
           crate::CompletionModel
           crate::clients::groq::CompletionModel
           crate::clients::mistral::CompletionModel
           crate::clients::ollama::CompletionModel
           crate::clients::xai::CompletionModel
           fluent_ai_domain::CompletionModel

error[E0432]: unresolved imports `crate::completion`, `crate::completion`, `crate::message`
  --> packages/provider/src/clients/openrouter/client.rs:22:5
   |
22 |     completion::{
   |     ^^^^^^^^^^ unresolved import
23 |         self, CompletionError, CompletionRequest, CompletionRequestBuilder, Prompt, PromptError},
   |         ^^^^ no `completion` in the root
24 |     json_util,
25 |     message::Message};
   |     ^^^^^^^ unresolved import
   |
   = help: consider importing one of these modules instead:
           crate::clients::anthropic::completion
           crate::clients::azure::completion
           crate::clients::deepseek::completion
           crate::clients::gemini::completion
           crate::clients::huggingface::completion
           crate::clients::mistral::completion
           crate::clients::openrouter::completion
           crate::clients::perplexity::completion
           crate::clients::together::completion
           crate::clients::xai::completion
           crate::domain::completion
           crate::domain::http::requests::completion
           crate::domain::http::responses::completion
           fluent_ai_domain::completion
           fluent_ai_domain::http::requests::completion
           fluent_ai_domain::http::responses::completion
note: these modules exist but are inaccessible
  --> packages/provider/src/clients/bedrock/mod.rs:45:1
   |
45 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::bedrock::completion`: not accessible
   |
  ::: packages/provider/src/clients/groq/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
   |
  ::: packages/provider/src/clients/ollama/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::ollama::completion`: not accessible
   |
  ::: packages/provider/src/clients/openai/mod.rs:51:1
   |
51 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::openai::completion`: not accessible
help: a similar path exists
   |
22 |     fluent_ai_domain::completion::{
   |     ++++++++++++++++++
help: a similar path exists
   |
25 |     fluent_ai_domain::message::Message};
   |     ++++++++++++++++++

error[E0432]: unresolved imports `crate::completion`, `crate::completion`
  --> packages/provider/src/clients/openrouter/completion.rs:15:5
   |
15 |     completion::{self, CompletionError, CompletionModel, CompletionRequest},
   |     ^^^^^^^^^^   ^^^^ no `completion` in the root
   |     |
   |     unresolved import
   |     help: a similar path exists: `fluent_ai_domain::completion`
   |
   = help: consider importing one of these modules instead:
           crate::clients::anthropic::completion
           crate::clients::azure::completion
           crate::clients::deepseek::completion
           crate::clients::gemini::completion
           crate::clients::huggingface::completion
           crate::clients::mistral::completion
           crate::clients::openrouter::completion
           crate::clients::perplexity::completion
           crate::clients::together::completion
           crate::clients::xai::completion
           crate::domain::completion
           crate::domain::http::requests::completion
           crate::domain::http::responses::completion
           fluent_ai_domain::completion
           fluent_ai_domain::http::requests::completion
           fluent_ai_domain::http::responses::completion
note: these modules exist but are inaccessible
  --> packages/provider/src/clients/bedrock/mod.rs:45:1
   |
45 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::bedrock::completion`: not accessible
   |
  ::: packages/provider/src/clients/groq/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
   |
  ::: packages/provider/src/clients/ollama/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::ollama::completion`: not accessible
   |
  ::: packages/provider/src/clients/openai/mod.rs:51:1
   |
51 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::openai::completion`: not accessible

error[E0432]: unresolved import `super::completion::CompletionModel`
  --> packages/provider/src/clients/perplexity/client.rs:18:25
   |
18 | use super::completion::{CompletionModel, SONAR_PRO};
   |                         ^^^^^^^^^^^^^^^
   |                         |
   |                         no `CompletionModel` in `clients::perplexity::completion`
   |                         help: a similar name exists in the module: `CompletionError`
   |
   = help: consider importing one of these items instead:
           crate::CompletionModel
           crate::clients::groq::CompletionModel
           crate::clients::mistral::CompletionModel
           crate::clients::openrouter::CompletionModel
           crate::clients::xai::CompletionModel
           fluent_ai_domain::CompletionModel

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
 --> packages/provider/src/clients/perplexity/completion.rs:8:5
  |
8 | use fluent_ai_http_structs::{
  |     ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
  |
  = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0432]: unresolved imports `crate::completion`, `crate::completion`, `crate::message`, `crate::runtime`, `crate::runtime`
  --> packages/provider/src/clients/perplexity/client.rs:21:5
   |
21 |     completion::{
   |     ^^^^^^^^^^ unresolved import
22 |         self, CompletionError, CompletionRequest, CompletionRequestBuilder, Prompt, PromptError},
   |         ^^^^ no `completion` in the root
23 |     json_util,
24 |     message::Message,
   |     ^^^^^^^ unresolved import
25 |     runtime::{self, AsyncTask}};
   |     ^^^^^^^   ^^^^ no `runtime` in the root
   |     |
   |     unresolved import
   |
   = help: consider importing one of these modules instead:
           crate::clients::anthropic::completion
           crate::clients::azure::completion
           crate::clients::deepseek::completion
           crate::clients::gemini::completion
           crate::clients::huggingface::completion
           crate::clients::mistral::completion
           crate::clients::openrouter::completion
           crate::clients::perplexity::completion
           crate::clients::together::completion
           crate::clients::xai::completion
           crate::domain::completion
           crate::domain::http::requests::completion
           crate::domain::http::responses::completion
           fluent_ai_domain::completion
           fluent_ai_domain::http::requests::completion
           fluent_ai_domain::http::responses::completion
note: these modules exist but are inaccessible
  --> packages/provider/src/clients/bedrock/mod.rs:45:1
   |
45 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::bedrock::completion`: not accessible
   |
  ::: packages/provider/src/clients/groq/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
   |
  ::: packages/provider/src/clients/ollama/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::ollama::completion`: not accessible
   |
  ::: packages/provider/src/clients/openai/mod.rs:51:1
   |
51 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::openai::completion`: not accessible
   = help: consider importing this module instead:
           tokio::runtime
help: a similar path exists
   |
21 |     fluent_ai_domain::completion::{
   |     ++++++++++++++++++
help: a similar path exists
   |
24 |     fluent_ai_domain::message::Message,
   |     ++++++++++++++++++
help: a similar path exists
   |
25 |     tokio::runtime::{self, AsyncTask}};
   |     +++++++

error[E0432]: unresolved imports `crate::completion`, `crate::completion`, `crate::message`
  --> packages/provider/src/clients/perplexity/completion.rs:22:5
   |
22 |     completion::{self, CompletionError, CompletionModel, CompletionRequest},
   |     ^^^^^^^^^^   ^^^^ no `completion` in the root
   |     |
   |     unresolved import
   |     help: a similar path exists: `fluent_ai_domain::completion`
23 |     json_util, message};
   |                ^^^^^^^ no `message` in the root
   |
   = help: consider importing one of these modules instead:
           crate::clients::anthropic::completion
           crate::clients::azure::completion
           crate::clients::deepseek::completion
           crate::clients::gemini::completion
           crate::clients::huggingface::completion
           crate::clients::mistral::completion
           crate::clients::openrouter::completion
           crate::clients::perplexity::completion
           crate::clients::together::completion
           crate::clients::xai::completion
           crate::domain::completion
           crate::domain::http::requests::completion
           crate::domain::http::responses::completion
           fluent_ai_domain::completion
           fluent_ai_domain::http::requests::completion
           fluent_ai_domain::http::responses::completion
note: these modules exist but are inaccessible
  --> packages/provider/src/clients/bedrock/mod.rs:45:1
   |
45 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::bedrock::completion`: not accessible
   |
  ::: packages/provider/src/clients/groq/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
   |
  ::: packages/provider/src/clients/ollama/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::ollama::completion`: not accessible
   |
  ::: packages/provider/src/clients/openai/mod.rs:51:1
   |
51 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::openai::completion`: not accessible
   = help: consider importing one of these modules instead:
           crate::domain::message
           fluent_ai_domain::message

error[E0432]: unresolved import `super::embedding::EmbeddingModel`
  --> packages/provider/src/clients/together/client.rs:20:17
   |
20 |     embedding::{EmbeddingModel, M2_BERT_80M_8K_RETRIEVAL}};
   |                 ^^^^^^^^^^^^^^ no `EmbeddingModel` in `clients::together::embedding`
   |
   = help: consider importing one of these items instead:
           crate::EmbeddingModel
           crate::clients::gemini::embedding::EmbeddingModel
           crate::clients::ollama::EmbeddingModel
           crate::domain::context::EmbeddingModel
           crate::domain::embedding::EmbeddingModel
           crate::embeddings::EmbeddingModel
           candle_transformers::models::stella_en_v5::EmbeddingModel
           fluent_ai_domain::context::EmbeddingModel
           fluent_ai_domain::embedding::EmbeddingModel

error[E0432]: unresolved imports `crate::completion`, `crate::completion`, `crate::message`
  --> packages/provider/src/clients/together/client.rs:23:5
   |
23 |     completion::{
   |     ^^^^^^^^^^ unresolved import
24 |         self, CompletionError, CompletionRequest, CompletionRequestBuilder, Prompt, PromptError},
   |         ^^^^ no `completion` in the root
25 |     json_util,
26 |     message::Message};
   |     ^^^^^^^ unresolved import
   |
   = help: consider importing one of these modules instead:
           crate::clients::anthropic::completion
           crate::clients::azure::completion
           crate::clients::deepseek::completion
           crate::clients::gemini::completion
           crate::clients::huggingface::completion
           crate::clients::mistral::completion
           crate::clients::openrouter::completion
           crate::clients::perplexity::completion
           crate::clients::together::completion
           crate::clients::xai::completion
           crate::domain::completion
           crate::domain::http::requests::completion
           crate::domain::http::responses::completion
           fluent_ai_domain::completion
           fluent_ai_domain::http::requests::completion
           fluent_ai_domain::http::responses::completion
note: these modules exist but are inaccessible
  --> packages/provider/src/clients/bedrock/mod.rs:45:1
   |
45 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::bedrock::completion`: not accessible
   |
  ::: packages/provider/src/clients/groq/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
   |
  ::: packages/provider/src/clients/ollama/mod.rs:8:1
   |
8  | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::clients::ollama::completion`: not accessible
   |
  ::: packages/provider/src/clients/openai/mod.rs:51:1
   |
51 | mod completion;
   | ^^^^^^^^^^^^^^^ `crate::openai::completion`: not accessible
help: a similar path exists
   |
23 |     fluent_ai_domain::completion::{
   |     ++++++++++++++++++
help: a similar path exists
   |
26 |     fluent_ai_domain::message::Message};
   |     ++++++++++++++++++

error[E0432]: unresolved import `crate::completion`
 --> packages/provider/src/clients/together/streaming.rs:8:5
  |
8 |     completion::{CompletionError, CompletionRequest},
  |     ^^^^^^^^^^
  |     |
  |     unresolved import
  |     help: a similar path exists: `fluent_ai_domain::completion`

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/discovery.rs:14:12
   |
14 | use crate::model::{
   |            ^^^^^
   |            |
   |            unresolved import
   |            help: a similar path exists: `fluent_ai_domain::model`

error[E0432]: unresolved imports `super::types::XaiChatRequest`, `super::types::XaiChatResponse`, `super::types::XaiChoice`, `super::types::XaiContent`, `super::types::XaiFunction`, `super::types::XaiMessage`, `super::types::XaiResponseMessage`, `super::types::XaiStreamingChunk`, `super::types::XaiTool`, `super::types::XaiUsage`
  --> packages/provider/src/clients/xai/completion.rs:11:5
   |
11 |     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
   |     ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^ no `XaiMessage` in `clients::xai::types`
   |     |               |                |          |           |
   |     |               |                |          |           no `XaiFunction` in `clients::xai::types`
   |     |               |                |          no `XaiContent` in `clients::xai::types`
   |     |               |                no `XaiChoice` in `clients::xai::types`
   |     |               no `XaiChatResponse` in `clients::xai::types`
   |     no `XaiChatRequest` in `clients::xai::types`
12 |     XaiResponseMessage, XaiStreamingChunk, XaiTool, XaiUsage};
   |     ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^  ^^^^^^^^ no `XaiUsage` in `clients::xai::types`
   |     |                   |                  |
   |     |                   |                  no `XaiTool` in `clients::xai::types`
   |     |                   no `XaiStreamingChunk` in `clients::xai::types`
   |     no `XaiResponseMessage` in `clients::xai::types`
   |
help: a similar name exists in the module
   |
11 -     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
11 +     XAIChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
   |
help: a similar name exists in the module
   |
11 -     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
11 +     XaiChatRequest, XAIChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
   |
help: a similar name exists in the module
   |
11 -     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
11 +     XaiChatRequest, XaiChatResponse, XAIChoice, XaiContent, XaiFunction, XaiMessage,
   |
help: a similar name exists in the module
   |
11 -     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
11 +     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XAIMessage,
   |
help: a similar name exists in the module
   |
12 -     XaiResponseMessage, XaiStreamingChunk, XaiTool, XaiUsage};
12 +     XaiResponseMessage, XaiStreamingChunk, XaiTool, XAIUsage};
   |

error[E0432]: unresolved import `crate::http`
  --> packages/provider/src/client_factory.rs:21:12
   |
21 | use crate::http::HttpRequest;
   |            ^^^^
   |            |
   |            unresolved import
   |            help: a similar path exists: `fluent_ai_domain::http`

error[E0365]: `CompletionCoreError` is private, and cannot be re-exported
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ re-export of private `CompletionCoreError`
   |
   = note: consider declaring type or module `CompletionCoreError` with `pub`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
 --> packages/provider/src/clients/gemini/gemini_types.rs:8:5
  |
8 | use fluent_ai_http_structs::google::{
  |     ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
  |
  = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0432]: unresolved import `crate::providers`
  --> packages/provider/src/client_factory.rs:22:12
   |
22 | use crate::providers::Providers;
   |            ^^^^^^^^^
   |            |
   |            unresolved import
   |            help: a similar path exists: `fluent_ai_domain::model::providers`

error[E0432]: unresolved import `zeroize`
  --> packages/provider/src/security/credentials.rs:18:5
   |
18 | use zeroize::{Zeroize, ZeroizeOnDrop};
   |     ^^^^^^^ use of unresolved module or unlinked crate `zeroize`
   |
   = help: if you wanted to use a crate named `zeroize`, use `cargo add zeroize` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `chacha20poly1305`
  --> packages/provider/src/security/encryption.rs:13:5
   |
13 | use chacha20poly1305::{
   |     ^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `chacha20poly1305`
   |
   = help: if you wanted to use a crate named `chacha20poly1305`, use `cargo add chacha20poly1305` to add it to your `Cargo.toml`

error[E0432]: unresolved import `chacha20poly1305`
  --> packages/provider/src/security/encryption.rs:13:5
   |
13 | use chacha20poly1305::{
   |     ^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `chacha20poly1305`
   |
   = help: if you wanted to use a crate named `chacha20poly1305`, use `cargo add chacha20poly1305` to add it to your `Cargo.toml`

error[E0432]: unresolved import `zeroize`
  --> packages/provider/src/security/encryption.rs:18:5
   |
18 | use zeroize::{Zeroize, ZeroizeOnDrop};
   |     ^^^^^^^ use of unresolved module or unlinked crate `zeroize`
   |
   = help: if you wanted to use a crate named `zeroize`, use `cargo add zeroize` to add it to your `Cargo.toml`

error: cannot find derive macro `Deserialize` in this scope
  --> packages/provider/src/clients/gemini/gemini_types.rs:77:17
   |
77 | #[derive(Debug, Deserialize, Serialize, Clone, PartialEq)]
   |                 ^^^^^^^^^^^
   |
   = note: derive macro `crate::image_processing::utils::Deserialize` exists but is inaccessible
help: consider importing this derive macro
   |
6  + use serde::Deserialize;
   |

error: cannot find derive macro `Serialize` in this scope
  --> packages/provider/src/clients/gemini/gemini_types.rs:77:30
   |
77 | #[derive(Debug, Deserialize, Serialize, Clone, PartialEq)]
   |                              ^^^^^^^^^
   |
   = note: derive macro `crate::image_processing::utils::Serialize` exists but is inaccessible
help: consider importing this derive macro
   |
6  + use serde::Serialize;
   |

error: cannot find attribute `serde` in this scope
  --> packages/provider/src/clients/gemini/gemini_types.rs:78:3
   |
78 | #[serde(rename_all = "lowercase")]
   |   ^^^^^
   |
   = note: `serde` is in scope, but it is a crate, not an attribute
help: `serde` is an attribute that can be used by the derive macros `Deserialize` and `Serialize`, you might be missing a `derive` attribute
   |
79 + #[derive(Deserialize, Serialize)]
80 | pub enum Role {
   |

error: cannot find macro `handle_error` in this scope
   --> packages/provider/src/image_processing/factory.rs:749:13
    |
749 |             handle_error!(ImageProcessingError::ProcessingError("Not implemented".to_string()), "Image processing not implemented");
    |             ^^^^^^^^^^^^
    |
help: consider importing this macro
    |
6   + use fluent_ai_async::handle_error;
    |

error: cannot find attribute `zeroize` in this scope
  --> packages/provider/src/security/credentials.rs:31:7
   |
31 |     #[zeroize(skip)]
   |       ^^^^^^^

error: cannot find attribute `zeroize` in this scope
  --> packages/provider/src/security/encryption.rs:29:7
   |
29 |     #[zeroize(skip)]
   |       ^^^^^^^

error: cannot find attribute `zeroize` in this scope
  --> packages/provider/src/security/encryption.rs:33:7
   |
33 |     #[zeroize(skip)]
   |       ^^^^^^^

error: cannot find attribute `zeroize` in this scope
  --> packages/provider/src/security/encryption.rs:37:7
   |
37 |     #[zeroize(skip)]
   |       ^^^^^^^

error: cannot find attribute `zeroize` in this scope
  --> packages/provider/src/security/encryption.rs:50:7
   |
50 |     #[zeroize(skip)]
   |       ^^^^^^^

error[E0106]: missing lifetime specifier
  --> packages/provider/src/clients/anthropic/responses.rs:30:26
   |
30 |     ) -> AnthropicResult<CompletionResponse> {
   |                          ^^^^^^^^^^^^^^^^^^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime, but this is uncommon unless you're returning a borrowed value from a `const` or a `static`, or if you will only have owned values
   |
30 |     ) -> AnthropicResult<CompletionResponse<'static>> {
   |                                            +++++++++

error[E0106]: missing lifetime specifier
   --> packages/provider/src/clients/anthropic/responses.rs:292:79
    |
292 | pub fn process_completion_response(response: HttpResponse) -> AnthropicResult<CompletionResponse> {
    |                                                                               ^^^^^^^^^^^^^^^^^^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime, but this is uncommon unless you're returning a borrowed value from a `const` or a `static`, or if you will only have owned values
    |
292 | pub fn process_completion_response(response: HttpResponse) -> AnthropicResult<CompletionResponse<'static>> {
    |                                                                                                 +++++++++

error[E0106]: missing lifetime specifier
   --> packages/provider/src/clients/azure/client.rs:475:46
    |
475 |         Result<completion::CompletionResponse<completion::CompletionResponseData>, CompletionError>,
    |                                              ^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'a` lifetime
    |
475 |         Result<completion::CompletionResponse<'a, completion::CompletionResponseData>, CompletionError>,
    |                                               +++

error[E0437]: type `Response` is not a member of trait `completion::CompletionModel`
  --> packages/provider/src/clients/azure/completion.rs:83:5
   |
83 |     type Response = openai::CompletionResponse;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0437]: type `StreamingResponse` is not a member of trait `completion::CompletionModel`
  --> packages/provider/src/clients/azure/completion.rs:84:5
   |
84 |     type StreamingResponse = openai::StreamingCompletionResponse;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0407]: method `completion` is not a member of trait `completion::CompletionModel`
  --> packages/provider/src/clients/azure/completion.rs:86:5
   |
86 | /     fn completion(
87 | |         &self,
88 | |         req: CompletionRequest,
89 | |     ) -> AsyncTask<Result<completion::CompletionResponse<Self::Response>, CompletionError>> {
90 | |         let this = self.clone();
91 | |         rt::spawn_async(async move { this.perform_completion(req).await })
92 | |     }
   | |_____^ not a member of trait `completion::CompletionModel`

error[E0407]: method `stream` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/azure/completion.rs:94:5
    |
94  | /     fn stream(
95  | |         &self,
96  | |         req: CompletionRequest,
97  | |     ) -> AsyncTask<Result<RigStreaming<Self::StreamingResponse>, CompletionError>> {
98  | |         let this = self.clone();
99  | |         rt::spawn_async(async move { this.perform_stream(req).await })
100 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0106]: missing lifetime specifier
   --> packages/provider/src/clients/azure/completion.rs:110:47
    |
110 |     ) -> Result<completion::CompletionResponse<openai::CompletionResponse>, CompletionError> {
    |                                               ^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime, but this is uncommon unless you're returning a borrowed value from a `const` or a `static`, or if you will only have owned values
    |
110 |     ) -> Result<completion::CompletionResponse<'static, openai::CompletionResponse>, CompletionError> {
    |                                                ++++++++

error[E0437]: type `Response` is not a member of trait `CompletionProvider`
   --> packages/provider/src/clients/bedrock/completion.rs:379:5
    |
379 |     type Response = CompletionResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `CompletionProvider`

error[E0437]: type `StreamingResponse` is not a member of trait `CompletionProvider`
   --> packages/provider/src/clients/bedrock/completion.rs:380:5
    |
380 |     type StreamingResponse = StreamingResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `CompletionProvider`

error[E0437]: type `Error` is not a member of trait `CompletionProvider`
   --> packages/provider/src/clients/bedrock/completion.rs:381:5
    |
381 |     type Error = CompletionError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `CompletionProvider`

error[E0407]: method `completion` is not a member of trait `CompletionProvider`
   --> packages/provider/src/clients/bedrock/completion.rs:410:5
    |
410 | /     fn completion(
411 | |         &self,
412 | |         request: CompletionRequest,
413 | |     ) -> AsyncTask<Result<Self::Response, Self::Error>> {
...   |
421 | |         })
422 | |     }
    | |_____^ not a member of trait `CompletionProvider`

error[E0407]: method `stream` is not a member of trait `CompletionProvider`
   --> packages/provider/src/clients/bedrock/completion.rs:424:5
    |
424 | /     fn stream(
425 | |         &self,
426 | |         request: CompletionRequest,
427 | |     ) -> AsyncTask<Result<AsyncStream<Self::StreamingResponse>, Self::Error>> {
...   |
439 | |         })
440 | |     }
    | |_____^ not a member of trait `CompletionProvider`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `hf_hub`
   --> packages/provider/src/clients/candle/model_repo.rs:154:31
    |
154 |     hf_client: ArcSwap<Option<hf_hub::api::tokio::Api>>}
    |                               ^^^^^^ use of unresolved module or unlinked crate `hf_hub`
    |
    = help: if you wanted to use a crate named `hf_hub`, use `cargo add hf_hub` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `hf_hub`
   --> packages/provider/src/clients/candle/model_repo.rs:176:19
    |
176 |         let api = hf_hub::api::tokio::Api::new()
    |                   ^^^^^^ use of unresolved module or unlinked crate `hf_hub`
    |
    = help: if you wanted to use a crate named `hf_hub`, use `cargo add hf_hub` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `hf_hub`
   --> packages/provider/src/clients/candle/model_repo.rs:361:32
    |
361 |         let repo = hf_api.repo(hf_hub::Repo::with_revision(
    |                                ^^^^^^ use of unresolved module or unlinked crate `hf_hub`
    |
    = help: if you wanted to use a crate named `hf_hub`, use `cargo add hf_hub` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `hf_hub`
   --> packages/provider/src/clients/candle/model_repo.rs:363:13
    |
363 |             hf_hub::RepoType::Model,
    |             ^^^^^^ use of unresolved module or unlinked crate `hf_hub`
    |
    = help: if you wanted to use a crate named `hf_hub`, use `cargo add hf_hub` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `hf_hub`
   --> packages/provider/src/clients/candle/model_repo.rs:444:16
    |
444 |         repo: &hf_hub::api::tokio::ApiRepo,
    |                ^^^^^^ use of unresolved module or unlinked crate `hf_hub`
    |
    = help: if you wanted to use a crate named `hf_hub`, use `cargo add hf_hub` to add it to your `Cargo.toml`

error[E0106]: missing lifetime specifier
   --> packages/provider/src/clients/gemini/client.rs:592:43
    |
592 |             completion::CompletionResponse<super::completion::CompletionResponse>,
    |                                           ^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'a` lifetime
    |
592 |             completion::CompletionResponse<'a, super::completion::CompletionResponse>,
    |                                            +++

error[E0437]: type `Response` is not a member of trait `completion::CompletionModel`
  --> packages/provider/src/clients/gemini/completion.rs:75:5
   |
75 |     type Response = GenerateContentResponse;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0437]: type `StreamingResponse` is not a member of trait `completion::CompletionModel`
  --> packages/provider/src/clients/gemini/completion.rs:76:5
   |
76 |     type StreamingResponse = StreamingCompletionResponse;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0407]: method `completion` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/gemini/completion.rs:78:5
    |
78  | /     fn completion(
79  | |         &self,
80  | |         completion_request: CompletionRequest,
81  | |     ) -> crate::runtime::AsyncTask<
...   |
140 | |         task
141 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/gemini/completion.rs:81:17
   |
81 |     ) -> crate::runtime::AsyncTask<
   |                 ^^^^^^^
   |                 |
   |                 unresolved import
   |                 help: a similar path exists: `tokio::runtime`

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/gemini/completion.rs:84:33
   |
84 |         let (tx, task) = crate::runtime::channel();
   |                                 ^^^^^^^
   |                                 |
   |                                 unresolved import
   |                                 help: a similar path exists: `tokio::runtime`

error[E0407]: method `stream` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/gemini/completion.rs:143:5
    |
143 | /     fn stream(
144 | |         &self,
145 | |         request: CompletionRequest,
146 | |     ) -> crate::runtime::AsyncTask<
...   |
163 | |         task
164 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/gemini/completion.rs:146:17
    |
146 |     ) -> crate::runtime::AsyncTask<
    |                 ^^^^^^^
    |                 |
    |                 unresolved import
    |                 help: a similar path exists: `tokio::runtime`

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/gemini/completion.rs:152:33
    |
152 |         let (tx, task) = crate::runtime::channel();
    |                                 ^^^^^^^
    |                                 |
    |                                 unresolved import
    |                                 help: a similar path exists: `tokio::runtime`

error[E0726]: implicit elided lifetime not allowed here
   --> packages/provider/src/clients/gemini/completion.rs:779:43
    |
779 | impl TryFrom<GenerateContentResponse> for completion::CompletionResponse<GenerateContentResponse> {
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected lifetime parameter
    |
help: indicate the anonymous lifetime
    |
779 | impl TryFrom<GenerateContentResponse> for completion::CompletionResponse<'_, GenerateContentResponse> {
    |                                                                          +++

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/gemini/completion.rs:878:36
    |
878 |         #[serde(deserialize_with = "crate::util::string_or_one_or_many")]
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                                    |
    |                                    unresolved import
    |                                    help: a similar path exists: `fluent_ai_domain::util`

error[E0433]: failed to resolve: could not find `MediaType` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:909:46
    |
909 | ...                   message::MediaType::from_mime_type(&inline_data.mime_type);
    |                                ^^^^^^^^^ could not find `MediaType` in `message`

error[E0433]: failed to resolve: could not find `MediaType` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:912:51
    |
912 | ...                   Some(message::MediaType::Image(media_type)) => {
    |                                     ^^^^^^^^^ could not find `MediaType` in `message`

error[E0433]: failed to resolve: could not find `MediaType` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:920:51
    |
920 | ...                   Some(message::MediaType::Document(media_type)) => {
    |                                     ^^^^^^^^^ could not find `MediaType` in `message`

error[E0433]: failed to resolve: could not find `MediaType` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:927:51
    |
927 | ...                   Some(message::MediaType::Audio(media_type)) => {
    |                                     ^^^^^^^^^ could not find `MediaType` in `message`

error[E0437]: type `Response` is not a member of trait `completion::CompletionModel`
  --> packages/provider/src/clients/gemini/gemini_client.rs:61:5
   |
61 |     type Response = GeminiGenerateContentResponse;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0437]: type `StreamingResponse` is not a member of trait `completion::CompletionModel`
  --> packages/provider/src/clients/gemini/gemini_client.rs:62:5
   |
62 |     type StreamingResponse = StreamingCompletionResponse;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0407]: method `completion` is not a member of trait `completion::CompletionModel`
  --> packages/provider/src/clients/gemini/gemini_client.rs:64:5
   |
64 | /     fn completion(
65 | |         &self,
66 | |         completion_request: CompletionRequest,
67 | |     ) -> crate::runtime::AsyncTask<
...  |
97 | |         task
98 | |     }
   | |_____^ not a member of trait `completion::CompletionModel`

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/gemini/gemini_client.rs:67:17
   |
67 |     ) -> crate::runtime::AsyncTask<
   |                 ^^^^^^^
   |                 |
   |                 unresolved import
   |                 help: a similar path exists: `tokio::runtime`

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/gemini/gemini_client.rs:70:33
   |
70 |         let (tx, task) = crate::runtime::channel();
   |                                 ^^^^^^^
   |                                 |
   |                                 unresolved import
   |                                 help: a similar path exists: `tokio::runtime`

error[E0407]: method `stream` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/gemini/gemini_client.rs:100:5
    |
100 | /     fn stream(
101 | |         &self,
102 | |         request: CompletionRequest,
103 | |     ) -> crate::runtime::AsyncTask<
...   |
119 | |         task
120 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/gemini/gemini_client.rs:103:17
    |
103 |     ) -> crate::runtime::AsyncTask<
    |                 ^^^^^^^
    |                 |
    |                 unresolved import
    |                 help: a similar path exists: `tokio::runtime`

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/gemini/gemini_client.rs:109:33
    |
109 |         let (tx, task) = crate::runtime::channel();
    |                                 ^^^^^^^
    |                                 |
    |                                 unresolved import
    |                                 help: a similar path exists: `tokio::runtime`

error[E0408]: variable `code` is not bound in all patterns
   --> packages/provider/src/clients/gemini/gemini_error.rs:150:13
    |
150 |             Self::HttpError { .. } |
    |             ^^^^^^^^^^^^^^^^^^^^^^ pattern doesn't bind `code`
151 |             Self::RateLimited { .. } |
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ pattern doesn't bind `code`
152 |             Self::Timeout { .. } |
    |             ^^^^^^^^^^^^^^^^^^^^ pattern doesn't bind `code`
153 |             Self::InternalError { code, .. } if *code >= 500
    |                                   ---- variable not in all patterns

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/gemini/gemini_types.rs:73:20
   |
73 | pub type Content = fluent_ai_http_structs::google::GeminiContent;
   |                    ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/gemini/gemini_types.rs:84:17
   |
84 | pub type Part = fluent_ai_http_structs::google::GeminiPart;
   |                 ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/gemini/gemini_types.rs:89:17
   |
89 | pub type Blob = fluent_ai_http_structs::google::GeminiInlineData;
   |                 ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/gemini/gemini_types.rs:90:25
   |
90 | pub type FunctionCall = fluent_ai_http_structs::google::GeminiFunctionCall;
   |                         ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/gemini/gemini_types.rs:91:29
   |
91 | pub type FunctionResponse = fluent_ai_http_structs::google::GeminiFunctionResponse;
   |                             ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/gemini/gemini_types.rs:92:21
   |
92 | pub type FileData = fluent_ai_http_structs::google::GeminiFileData;
   |                     ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/gemini/gemini_types.rs:93:27
   |
93 | pub type ExecutableCode = fluent_ai_http_structs::google::GeminiExecutableCode;
   |                           ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/gemini/gemini_types.rs:94:32
   |
94 | pub type CodeExecutionResult = fluent_ai_http_structs::google::GeminiCodeExecutionResult;
   |                                ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/gemini/gemini_types.rs:97:25
   |
97 | pub type SafetyRating = fluent_ai_http_structs::google::GeminiSafetyRating;
   |                         ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/gemini/gemini_types.rs:98:26
   |
98 | pub type UsageMetadata = fluent_ai_http_structs::google::GeminiUsageMetadata;
   |                          ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/gemini/gemini_types.rs:103:27
    |
103 | pub type PromptFeedback = fluent_ai_http_structs::google::GeminiPromptFeedback;
    |                           ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/gemini/gemini_types.rs:104:29
    |
104 | pub type CitationMetadata = fluent_ai_http_structs::google::GeminiCitationMetadata;
    |                             ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/gemini/gemini_types.rs:105:27
    |
105 | pub type CitationSource = fluent_ai_http_structs::google::GeminiCitationSource;
    |                           ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/gemini/gemini_types.rs:108:29
    |
108 | pub type GenerationConfig = fluent_ai_http_structs::google::GeminiGenerationConfig;
    |                             ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/gemini/gemini_types.rs:116:35
    |
116 | pub type GenerateContentRequest = fluent_ai_http_structs::google::GeminiGenerateContentRequest;
    |                                   ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/gemini/gemini_types.rs:117:17
    |
117 | pub type Tool = fluent_ai_http_structs::google::GeminiTool;
    |                 ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/gemini/gemini_types.rs:118:32
    |
118 | pub type FunctionDeclaration = fluent_ai_http_structs::google::GeminiFunctionDeclaration;
    |                                ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/gemini/gemini_types.rs:119:23
    |
119 | pub type ToolConfig = fluent_ai_http_structs::google::GeminiToolConfig;
    |                       ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/gemini/gemini_types.rs:120:26
    |
120 | pub type CodeExecution = fluent_ai_http_structs::google::GeminiCodeExecution;
    |                          ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/gemini/gemini_types.rs:121:26
    |
121 | pub type SafetySetting = fluent_ai_http_structs::google::GeminiSafetySetting;
    |                          ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0106]: missing lifetime specifier
   --> packages/provider/src/clients/groq/client.rs:411:43
    |
411 |             completion::CompletionResponse<super::completion::CompletionResponse>,
    |                                           ^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'a` lifetime
    |
411 |             completion::CompletionResponse<'a, super::completion::CompletionResponse>,
    |                                            +++

error[E0437]: type `Response` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/groq/completion.rs:259:5
    |
259 |     type Response = CompletionResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0437]: type `StreamingResponse` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/groq/completion.rs:260:5
    |
260 |     type StreamingResponse = streaming::StreamingCompletionResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0407]: method `completion` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/groq/completion.rs:262:5
    |
262 | /     fn completion(
263 | |         &self,
264 | |         completion_request: CompletionRequest,
265 | |     ) -> AsyncTask<Result<completion::CompletionResponse<CompletionResponse>, CompletionError>>
...   |
300 | |         AsyncTask::from_receiver(rx)
301 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0407]: method `stream` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/groq/completion.rs:303:5
    |
303 | /     fn stream(
304 | |         &self,
305 | |         request: CompletionRequest,
306 | |     ) -> AsyncTask<Result<StreamingCompletionResponse<Self::StreamingResponse>, CompletionError>>
...   |
335 | |         AsyncTask::from_receiver(rx)
336 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0407]: method `execute_completion` is not a member of trait `CompletionProvider`
   --> packages/provider/src/clients/groq/completion.rs:579:5
    |
579 | /     async fn execute_completion(
580 | |         mut builder: Self,
581 | |         prompt_text: String,
582 | |         api_key: String,
...   |
786 | |         Ok(())
787 | |     }
    | |_____^ not a member of trait `CompletionProvider`

error[E0433]: failed to resolve: could not find `UserContent` in `message`
  --> packages/provider/src/clients/mistral/completion.rs:91:69
   |
91 |                     .partition(|content| matches!(content, message::UserContent::ToolResult(_)));
   |                                                                     ^^^^^^^^^^^ could not find `UserContent` in `message`

error[E0433]: failed to resolve: could not find `UserContent` in `message`
  --> packages/provider/src/clients/mistral/completion.rs:96:34
   |
96 |                         message::UserContent::Text(message::Text { text }) => {
   |                                  ^^^^^^^^^^^ could not find `UserContent` in `message`

error[E0726]: implicit elided lifetime not allowed here
   --> packages/provider/src/clients/mistral/completion.rs:304:38
    |
304 | impl TryFrom<CompletionResponse> for completion::CompletionResponse {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected lifetime parameter
    |
help: indicate the anonymous lifetime
    |
304 | impl TryFrom<CompletionResponse> for completion::CompletionResponse<'_> {
    |                                                                    ++++

error[E0437]: type `Response` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/mistral/completion.rs:354:5
    |
354 |     type Response = CompletionResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0437]: type `StreamingResponse` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/mistral/completion.rs:355:5
    |
355 |     type StreamingResponse = CompletionResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0407]: method `completion` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/mistral/completion.rs:358:5
    |
358 | /     async fn completion(
359 | |         &self,
360 | |         completion_request: CompletionRequest,
361 | |     ) -> Result<completion::CompletionResponse<CompletionResponse>, CompletionError> {
...   |
397 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0407]: method `stream` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/mistral/completion.rs:400:5
    |
400 | /     async fn stream(
401 | |         &self,
402 | |         request: CompletionRequest,
403 | |     ) -> Result<StreamingCompletionResponse<Self::StreamingResponse>, CompletionError> {
...   |
424 | |         Ok(StreamingCompletionResponse::stream(stream))
425 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/ollama/streaming.rs:37:13
   |
37 | ) -> crate::runtime::AsyncTask<
   |             ^^^^^^^
   |             |
   |             unresolved import
   |             help: a similar path exists: `tokio::runtime`

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/moderation.rs:643:12
    |
643 |     crate::async_task::spawn_async(async move {
    |            ^^^^^^^^^^ unresolved import
    |
help: a struct with a similar name exists
    |
643 -     crate::async_task::spawn_async(async move {
643 +     crate::AsyncTask::spawn_async(async move {
    |
help: a similar path exists
    |
643 |     crate::fluent_ai_domain::async_task::spawn_async(async move {
    |            ++++++++++++++++++

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:669:12
    |
669 |     crate::async_task::spawn_async(async move {
    |            ^^^^^^^^^^ unresolved import
    |
help: a struct with a similar name exists
    |
669 -     crate::async_task::spawn_async(async move {
669 +     crate::AsyncTask::spawn_async(async move {
    |
help: a similar path exists
    |
669 |     crate::fluent_ai_domain::async_task::spawn_async(async move {
    |            ++++++++++++++++++

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:712:12
    |
712 |     crate::async_task::spawn_async(async move {
    |            ^^^^^^^^^^ unresolved import
    |
help: a struct with a similar name exists
    |
712 -     crate::async_task::spawn_async(async move {
712 +     crate::AsyncTask::spawn_async(async move {
    |
help: a similar path exists
    |
712 |     crate::fluent_ai_domain::async_task::spawn_async(async move {
    |            ++++++++++++++++++

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:767:12
    |
767 |     crate::async_task::spawn_async(async move {
    |            ^^^^^^^^^^ unresolved import
    |
help: a struct with a similar name exists
    |
767 -     crate::async_task::spawn_async(async move {
767 +     crate::AsyncTask::spawn_async(async move {
    |
help: a similar path exists
    |
767 |     crate::fluent_ai_domain::async_task::spawn_async(async move {
    |            ++++++++++++++++++

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/openrouter/completion.rs:33:31
   |
33 | pub type CompletionResponse = fluent_ai_http_structs::openrouter::OpenRouterChatResponse;
   |                               ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/openrouter/completion.rs:96:19
   |
96 | pub type Choice = fluent_ai_http_structs::openrouter::OpenRouterChoice;
   |                   ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: could not find `types` in `super`
   --> packages/provider/src/clients/openrouter/completion.rs:178:50
    |
178 |                     let openrouter_tool = super::types::OpenRouterTool {
    |                                                  ^^^^^ could not find `types` in `super`

error[E0433]: failed to resolve: could not find `types` in `super`
   --> packages/provider/src/clients/openrouter/completion.rs:180:42
    |
180 |                         function: super::types::OpenRouterFunction {
    |                                          ^^^^^ could not find `types` in `super`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/perplexity/completion.rs:34:31
   |
34 | pub type CompletionResponse = fluent_ai_http_structs::perplexity::PerplexityChatResponse;
   |                               ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/perplexity/completion.rs:37:20
   |
37 | pub type Message = fluent_ai_http_structs::perplexity::PerplexityMessage;
   |                    ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/perplexity/completion.rs:40:17
   |
40 | pub type Role = fluent_ai_http_structs::perplexity::PerplexityRole;
   |                 ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/perplexity/completion.rs:43:18
   |
43 | pub type Delta = fluent_ai_http_structs::perplexity::PerplexityDelta;
   |                  ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/perplexity/completion.rs:46:19
   |
46 | pub type Choice = fluent_ai_http_structs::perplexity::PerplexityChoice;
   |                   ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/perplexity/completion.rs:49:18
   |
49 | pub type Usage = fluent_ai_http_structs::perplexity::PerplexityUsage;
   |                  ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
  --> packages/provider/src/clients/perplexity/completion.rs:64:24
   |
64 |                     == fluent_ai_http_structs::perplexity::PerplexityRole::Assistant =>
   |                        ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
   |
   = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/perplexity/completion.rs:174:17
    |
174 |                 fluent_ai_http_structs::perplexity::PerplexityMessage {
    |                 ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/perplexity/completion.rs:175:27
    |
175 |                     role: fluent_ai_http_structs::perplexity::PerplexityRole::User,
    |                           ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/perplexity/completion.rs:193:17
    |
193 |                 fluent_ai_http_structs::perplexity::PerplexityMessage {
    |                 ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/perplexity/completion.rs:194:27
    |
194 |                     role: fluent_ai_http_structs::perplexity::PerplexityRole::Assistant,
    |                           ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/perplexity/completion.rs:204:13
    |
204 |             fluent_ai_http_structs::perplexity::PerplexityRole::User => {
    |             ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/perplexity/completion.rs:207:13
    |
207 |             fluent_ai_http_structs::perplexity::PerplexityRole::Assistant => {
    |             ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/perplexity/completion.rs:212:13
    |
212 |             fluent_ai_http_structs::perplexity::PerplexityRole::System => {
    |             ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0106]: missing lifetime specifier
   --> packages/provider/src/clients/xai/client.rs:476:43
    |
476 |             completion::CompletionResponse<super::completion::CompletionResponse>,
    |                                           ^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'a` lifetime
    |
476 |             completion::CompletionResponse<'a, super::completion::CompletionResponse>,
    |                                            +++

error[E0437]: type `Response` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/xai/completion.rs:134:5
    |
134 |     type Response = XaiChatResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0437]: type `StreamingResponse` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/xai/completion.rs:135:5
    |
135 |     type StreamingResponse = StreamingCompletionResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0407]: method `completion` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/xai/completion.rs:138:5
    |
138 | /     async fn completion(
139 | |         &self,
140 | |         completion_request: fluent_ai_domain::completion::CompletionRequest,
141 | |     ) -> Result<DomainCompletionResponse<XaiChatResponse>, CompletionError> {
...   |
182 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0407]: method `stream` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/xai/completion.rs:185:5
    |
185 | /     async fn stream(
186 | |         &self,
187 | |         request: CompletionRequest,
188 | |     ) -> Result<crate::streaming::StreamingResponse<Self::StreamingResponse>, CompletionError> {
...   |
220 | |         ))
221 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/xai/completion.rs:246:31
    |
246 | pub type CompletionResponse = fluent_ai_http_structs::xai::XaiChatResponse;
    |                               ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/xai/completion.rs:247:27
    |
247 | pub type ToolDefinition = fluent_ai_http_structs::xai::XaiTool;
    |                           ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/xai/completion.rs:248:21
    |
248 | pub type Function = fluent_ai_http_structs::xai::XaiFunction;
    |                     ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/xai/completion.rs:249:19
    |
249 | pub type Choice = fluent_ai_http_structs::xai::XaiChoice;
    |                   ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_http_structs`
   --> packages/provider/src/clients/xai/completion.rs:250:18
    |
250 | pub type Usage = fluent_ai_http_structs::xai::XaiUsage;
    |                  ^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_http_structs`
    |
    = help: if you wanted to use a crate named `fluent_ai_http_structs`, use `cargo add fluent_ai_http_structs` to add it to your `Cargo.toml`

error[E0308]: mismatched types
   --> packages/fluent-ai-candle/src/tokenizer/core.rs:208:34
    |
208 |         let bpe_model = BPE::new(vocab, merges);
    |                         -------- ^^^^^ expected `AHashMap<String, u32>`, found `HashMap<String, u32>`
    |                         |
    |                         arguments to this function are incorrect
    |
    = note: expected struct `AHashMap<std::string::String, u32>`
               found struct `std::collections::HashMap<std::string::String, u32>`
note: associated function defined here
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokenizers-0.21.2/src/models/bpe/model.rs:312:12
    |
312 |     pub fn new(vocab: Vocab, merges: Merges) -> Self {
    |            ^^^

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/client_factory.rs:43:24
   |
43 |         source: crate::http::HttpError}}
   |                        ^^^^
   |                        |
   |                        unresolved import
   |                        help: a similar path exists: `fluent_ai_domain::http`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tempfile`
   --> packages/provider/src/security/audit.rs:256:25
    |
256 |         let temp_file = tempfile::NamedTempFile::new().map_err(|e| SecurityError::AuditError {
    |                         ^^^^^^^^ use of unresolved module or unlinked crate `tempfile`
    |
    = help: if you wanted to use a crate named `tempfile`, use `cargo add tempfile` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `uuid`
   --> packages/provider/src/security/audit.rs:308:17
    |
308 |             id: uuid::Uuid::new_v4().to_string(),
    |                 ^^^^ use of unresolved module or unlinked crate `uuid`
    |
    = help: if you wanted to use a crate named `uuid`, use `cargo add uuid` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `uuid`
   --> packages/provider/src/security/audit.rs:543:21
    |
543 |                 id: uuid::Uuid::new_v4().to_string(),
    |                     ^^^^ use of unresolved module or unlinked crate `uuid`
    |
    = help: if you wanted to use a crate named `uuid`, use `cargo add uuid` to add it to your `Cargo.toml`

error[E0407]: method `transcribed_text` is not a member of trait `TranscriptionChunk`
   --> packages/provider/src/http3_streaming.rs:364:5
    |
364 | /     fn transcribed_text(&self) -> Option<&str> {
365 | |         self.transcribed_text.as_deref()
366 | |     }
    | |_____^ not a member of trait `TranscriptionChunk`

error[E0407]: method `language` is not a member of trait `TranscriptionChunk`
   --> packages/provider/src/http3_streaming.rs:368:5
    |
368 | /     fn language(&self) -> Option<&str> {
369 | |         self.language.as_deref()
370 | |     }
    | |_____^ not a member of trait `TranscriptionChunk`

error[E0407]: method `mime_type` is not a member of trait `DownloadChunk`
   --> packages/provider/src/http3_streaming.rs:436:5
    |
436 | /     fn mime_type(&self) -> Option<&str> {
437 | |         self.mime_type.as_deref()
438 | |     }
    | |_____^ not a member of trait `DownloadChunk`

error[E0407]: method `file_size` is not a member of trait `DownloadChunk`
   --> packages/provider/src/http3_streaming.rs:440:5
    |
440 | /     fn file_size(&self) -> Option<u64> {
441 | |         Some(self.data.len() as u64)
442 | |     }
    | |_____^ not a member of trait `DownloadChunk`

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/anthropic/completion.rs:53:12
   |
53 |     crate::model_info::get_model_config(model_name)
   |            ^^^^^^^^^^ unresolved import
   |
note: module `crate::openai::model_info` exists but is inaccessible
  --> packages/provider/src/clients/openai/mod.rs:56:1
   |
56 | mod model_info;
   | ^^^^^^^^^^^^^^^ not accessible
help: a struct with a similar name exists
   |
53 -     crate::model_info::get_model_config(model_name)
53 +     crate::ModelInfo::get_model_config(model_name)
   |
help: a similar path exists
   |
53 |     crate::openai::model_info::get_model_config(model_name)
   |            ++++++++
help: consider importing one of these modules
   |
15 + use crate::clients::gemini::model_info;
   |
15 + use crate::clients::mistral::model_info;
   |
help: if you import `model_info`, refer to it directly
   |
53 -     crate::model_info::get_model_config(model_name)
53 +     model_info::get_model_config(model_name)
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/anthropic/completion.rs:78:19
   |
78 |     chat_history: ArrayVec<Message, MAX_MESSAGES>,
   |                   ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/anthropic/completion.rs:79:16
   |
79 |     documents: ArrayVec<Document, MAX_DOCUMENTS>,
   |                ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/anthropic/completion.rs:80:12
   |
80 |     tools: ArrayVec<ToolDefinition, MAX_TOOLS>,
   |            ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/anthropic/completion.rs:90:21
   |
90 |     search_results: ArrayVec<SearchResultData, MAX_SEARCH_RESULTS>}
   |                     ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/anthropic/completion.rs:135:27
    |
135 |             chat_history: ArrayVec::new(),
    |                           ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/anthropic/completion.rs:136:24
    |
136 |             documents: ArrayVec::new(),
    |                        ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/anthropic/completion.rs:137:20
    |
137 |             tools: ArrayVec::new(),
    |                    ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/anthropic/completion.rs:144:29
    |
144 |             search_results: ArrayVec::new()})
    |                             ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayString`
   --> packages/provider/src/clients/anthropic/completion.rs:441:13
    |
441 |             ArrayString::from("anthropic-version").map_err(|_| {
    |             ^^^^^^^^^^^ use of undeclared type `ArrayString`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayString;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayString`
   --> packages/provider/src/clients/anthropic/completion.rs:444:13
    |
444 |             ArrayString::from("2023-06-01").map_err(|_| {
    |             ^^^^^^^^^^^ use of undeclared type `ArrayString`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayString;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/anthropic/completion.rs:640:39
    |
640 |     fn convert_tools(&self) -> Result<ArrayVec<AnthropicTool<'_>, MAX_TOOLS>, CompletionError> {
    |                                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/anthropic/completion.rs:641:25
    |
641 |         let mut tools = ArrayVec::new();
    |                         ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/clients/anthropic/expression_evaluator.rs:46:16
   |
46 |     variables: HashMap<String, f64>}
   |                ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/provider/src/clients/anthropic/expression_evaluator.rs:52:24
   |
52 |             variables: HashMap::new()}
   |                        ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/clients/anthropic/expression_evaluator.rs:146:21
    |
146 |         variables: &HashMap<String, f64>,
    |                     ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/clients/anthropic/expression_evaluator.rs:746:17
    |
746 |     variables: &HashMap<String, f64>,
    |                 ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/anthropic/messages.rs:66:24
   |
66 |         #[serde(with = "crate::util::json_util::stringified_json")]
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unresolved import
   |
help: a similar path exists
   |
66 -         #[serde(with = "crate::util::json_util::stringified_json")]
66 +         #[serde(with = fluent_ai_domain::util)]
   |
help: consider importing one of these modules
   |
6  + use crate::json_util::stringified_json;
   |
6  + use fluent_ai_domain::json_util::stringified_json;
   |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/messages.rs:111:20
    |
111 |     #[serde(with = "crate::util::json_util::stringified_json")]
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
111 -     #[serde(with = "crate::util::json_util::stringified_json")]
111 +     #[serde(with = fluent_ai_domain::util)]
    |
help: consider importing one of these modules
    |
6   + use crate::json_util::stringified_json;
    |
6   + use fluent_ai_domain::json_util::stringified_json;
    |

error[E0412]: cannot find type `HttpClient` in this scope
  --> packages/provider/src/clients/anthropic/requests.rs:32:22
   |
32 |     http_client: &'a HttpClient}
   |                      ^^^^^^^^^^ not found in this scope
   |
   = note: struct `crate::image_processing::factory::batch_processing::HttpClient` exists but is inaccessible
help: consider importing this struct
   |
6  + use fluent_ai_http3::HttpClient;
   |

error[E0412]: cannot find type `HttpClient` in this scope
  --> packages/provider/src/clients/anthropic/requests.rs:37:62
   |
37 |     pub fn new(config: &'a AnthropicConfig, http_client: &'a HttpClient) -> Self {
   |                                                              ^^^^^^^^^^ not found in this scope
   |
   = note: struct `crate::image_processing::factory::batch_processing::HttpClient` exists but is inaccessible
help: consider importing this struct
   |
6  + use fluent_ai_http3::HttpClient;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/clients/anthropic/requests.rs:45:32
   |
45 |     fn build_headers(&self) -> HashMap<String, String> {
   |                                ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/provider/src/clients/anthropic/requests.rs:46:27
   |
46 |         let mut headers = HashMap::with_capacity(4);
   |                           ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/clients/anthropic/requests.rs:75:36
   |
75 |     fn build_headers_map(&self) -> HashMap<String, String> {
   |                                    ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/provider/src/clients/anthropic/requests.rs:76:27
   |
76 |         let mut headers = HashMap::new();
   |                           ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0412]: cannot find type `HttpResponse` in this scope
   --> packages/provider/src/clients/anthropic/requests.rs:121:26
    |
121 |     ) -> AnthropicResult<HttpResponse> {
    |                          ^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use fluent_ai_http3::HttpResponse;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpRequest`
   --> packages/provider/src/clients/anthropic/requests.rs:135:32
    |
135 |         let mut http_request = HttpRequest::new(HttpMethod::Post, url.to_string()).with_body(body);
    |                                ^^^^^^^^^^^ use of undeclared type `HttpRequest`
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpRequest` exists but is inaccessible
help: consider importing this struct
    |
6   + use fluent_ai_http3::HttpRequest;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpMethod`
   --> packages/provider/src/clients/anthropic/requests.rs:135:49
    |
135 |         let mut http_request = HttpRequest::new(HttpMethod::Post, url.to_string()).with_body(body);
    |                                                 ^^^^^^^^^^ use of undeclared type `HttpMethod`
    |
help: consider importing one of these enums
    |
6   + use crate::domain::http::HttpMethod;
    |
6   + use fluent_ai_domain::http::HttpMethod;
    |

error[E0412]: cannot find type `HttpResponse` in this scope
   --> packages/provider/src/clients/anthropic/requests.rs:164:60
    |
164 |     pub async fn test_connection(&self) -> AnthropicResult<HttpResponse> {
    |                                                            ^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use fluent_ai_http3::HttpResponse;
    |

error[E0422]: cannot find struct, variant or union type `AnthropicMessage` in module `crate::clients::anthropic::messages`
   --> packages/provider/src/clients/anthropic/requests.rs:171:65
    |
171 |             messages: vec![crate::clients::anthropic::messages::AnthropicMessage {
    |                                                                 ^^^^^^^^^^^^^^^^ not found in `crate::clients::anthropic::messages`
    |
help: consider importing this struct through its public re-export
    |
6   + use crate::clients::anthropic::AnthropicMessage;
    |
help: if you import `AnthropicMessage`, refer to it directly
    |
171 -             messages: vec![crate::clients::anthropic::messages::AnthropicMessage {
171 +             messages: vec![AnthropicMessage {
    |

error[E0433]: failed to resolve: use of undeclared type `HttpRequest`
   --> packages/provider/src/clients/anthropic/requests.rs:189:32
    |
189 |         let mut http_request = HttpRequest::new(HttpMethod::Post, url.to_string()).with_body(body);
    |                                ^^^^^^^^^^^ use of undeclared type `HttpRequest`
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpRequest` exists but is inaccessible
help: consider importing this struct
    |
6   + use fluent_ai_http3::HttpRequest;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpMethod`
   --> packages/provider/src/clients/anthropic/requests.rs:189:49
    |
189 |         let mut http_request = HttpRequest::new(HttpMethod::Post, url.to_string()).with_body(body);
    |                                                 ^^^^^^^^^^ use of undeclared type `HttpMethod`
    |
help: consider importing one of these enums
    |
6   + use crate::domain::http::HttpMethod;
    |
6   + use fluent_ai_domain::http::HttpMethod;
    |

error[E0412]: cannot find type `HttpClient` in this scope
   --> packages/provider/src/clients/anthropic/requests.rs:222:19
    |
222 |     http_client: &HttpClient,
    |                   ^^^^^^^^^^ not found in this scope
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpClient` exists but is inaccessible
help: consider importing this struct
    |
6   + use fluent_ai_http3::HttpClient;
    |

error[E0412]: cannot find type `HttpResponse` in this scope
   --> packages/provider/src/clients/anthropic/requests.rs:224:22
    |
224 | ) -> AnthropicResult<HttpResponse> {
    |                      ^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use fluent_ai_http3::HttpResponse;
    |

error[E0412]: cannot find type `HttpClient` in this scope
   --> packages/provider/src/clients/anthropic/requests.rs:233:19
    |
233 |     http_client: &HttpClient,
    |                   ^^^^^^^^^^ not found in this scope
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpClient` exists but is inaccessible
help: consider importing this struct
    |
6   + use fluent_ai_http3::HttpClient;
    |

error[E0412]: cannot find type `HttpResponse` in this scope
   --> packages/provider/src/clients/anthropic/requests.rs:235:22
    |
235 | ) -> AnthropicResult<HttpResponse> {
    |                      ^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use fluent_ai_http3::HttpResponse;
    |

error[E0412]: cannot find type `HttpClient` in this scope
   --> packages/provider/src/clients/anthropic/requests.rs:244:19
    |
244 |     http_client: &HttpClient,
    |                   ^^^^^^^^^^ not found in this scope
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpClient` exists but is inaccessible
help: consider importing this struct
    |
6   + use fluent_ai_http3::HttpClient;
    |

error[E0412]: cannot find type `HttpResponse` in this scope
   --> packages/provider/src/clients/anthropic/requests.rs:245:22
    |
245 | ) -> AnthropicResult<HttpResponse> {
    |                      ^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use fluent_ai_http3::HttpResponse;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/streaming.rs:112:20
    |
112 |             crate::providers::anthropic::AnthropicError::RequestError(format!(
    |                    ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
112 |             crate::fluent_ai_domain::model::providers::anthropic::AnthropicError::RequestError(format!(
    |                    +++++++++++++++++++++++++
help: consider importing this enum through its public re-export
    |
7   + use crate::clients::AnthropicError;
    |
help: if you import `AnthropicError`, refer to it directly
    |
112 -             crate::providers::anthropic::AnthropicError::RequestError(format!(
112 +             AnthropicError::RequestError(format!(
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/streaming.rs:146:36
    |
146 | ...                   crate::providers::anthropic::AnthropicError::RequestError(
    |                              ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
146 |                             crate::fluent_ai_domain::model::providers::anthropic::AnthropicError::RequestError(
    |                                    +++++++++++++++++++++++++
help: consider importing this enum through its public re-export
    |
7   + use crate::clients::AnthropicError;
    |
help: if you import `AnthropicError`, refer to it directly
    |
146 -                             crate::providers::anthropic::AnthropicError::RequestError(
146 +                             AnthropicError::RequestError(
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/streaming.rs:156:32
    |
156 |                         crate::providers::anthropic::AnthropicError::RequestError(e.to_string())
    |                                ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
156 |                         crate::fluent_ai_domain::model::providers::anthropic::AnthropicError::RequestError(e.to_string())
    |                                +++++++++++++++++++++++++
help: consider importing this enum through its public re-export
    |
7   + use crate::clients::AnthropicError;
    |
help: if you import `AnthropicError`, refer to it directly
    |
156 -                         crate::providers::anthropic::AnthropicError::RequestError(e.to_string())
156 +                         AnthropicError::RequestError(e.to_string())
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/streaming.rs:187:40
    |
187 | ...                   crate::providers::anthropic::AnthropicError::DeserializationError(
    |                              ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
187 |                                 crate::fluent_ai_domain::model::providers::anthropic::AnthropicError::DeserializationError(
    |                                        +++++++++++++++++++++++++
help: consider importing this enum through its public re-export
    |
7   + use crate::clients::AnthropicError;
    |
help: if you import `AnthropicError`, refer to it directly
    |
187 -                                 crate::providers::anthropic::AnthropicError::DeserializationError(
187 +                                 AnthropicError::DeserializationError(
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/streaming.rs:246:50
    |
246 | ) -> Result<Option<AnthropicStreamChunk>, crate::providers::anthropic::AnthropicError> {
    |                                                  ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
246 | ) -> Result<Option<AnthropicStreamChunk>, crate::fluent_ai_domain::model::providers::anthropic::AnthropicError> {
    |                                                  +++++++++++++++++++++++++
help: consider importing this module
    |
7   + use crate::clients::anthropic;
    |
help: if you import `anthropic`, refer to it directly
    |
246 - ) -> Result<Option<AnthropicStreamChunk>, crate::providers::anthropic::AnthropicError> {
246 + ) -> Result<Option<AnthropicStreamChunk>, anthropic::AnthropicError> {
    |

error[E0404]: expected trait, found struct `ToolExecutor`
   --> packages/provider/src/clients/anthropic/tools/calculator.rs:122:6
    |
122 | impl ToolExecutor for CalculatorTool {
    |      ^^^^^^^^^^^^ not a trait
    |
help: consider importing this trait instead
    |
6   + use crate::clients::anthropic::core::ToolExecutor;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/clients/anthropic/tools/core.rs:115:19
    |
115 |     pub metadata: HashMap<String, Value>,
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/clients/anthropic/tools/core.rs:156:19
    |
156 |     pub metadata: HashMap<String, Value>,
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/clients/anthropic/tools/core.rs:258:23
    |
258 |             metadata: HashMap::new(),
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0404]: expected trait, found struct `ToolExecutor`
  --> packages/provider/src/clients/anthropic/tools/file_operations.rs:81:6
   |
81 | impl ToolExecutor for FileOperationsTool {
   |      ^^^^^^^^^^^^ not a trait
   |
help: consider importing this trait instead
   |
6  + use crate::clients::anthropic::core::ToolExecutor;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:439:12
    |
439 |     tools: ArrayVec<Box<dyn FinalTool + Send + Sync>, N>,
    |            ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:446:20
    |
446 |             tools: ArrayVec::new(),
    |                    ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0404]: expected trait, found struct `ToolExecutor`
   --> packages/provider/src/clients/anthropic/tools/mod.rs:109:27
    |
109 |         executor: Box<dyn ToolExecutor + Send + Sync>,
    |                           ^^^^^^^^^^^^ not a trait
    |
help: `+` is used to constrain a "trait object" type with lifetimes or auto-traits; structs and enums can't be bound in that way
   --> packages/provider/src/clients/anthropic/tools/mod.rs:109:42
    |
109 |         executor: Box<dyn ToolExecutor + Send + Sync>,
    |                           ------------   ^^^^   ^^^^ ...because of these bounds
    |                           |
    |                           expected this type to be a trait...
help: consider importing this trait instead
    |
16  + use crate::clients::anthropic::core::ToolExecutor;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/anthropic/types.rs:39:19
   |
39 |     pub messages: ArrayVec<AnthropicMessage<'a>, MAX_MESSAGES>,
   |                   ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
13 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/anthropic/types.rs:56:23
   |
56 |     pub tools: Option<ArrayVec<serde_json::Value, MAX_TOOLS>>,
   |                       ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
13 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/anthropic/types.rs:61:32
   |
61 |     pub stop_sequences: Option<ArrayVec<&'a str, 4>>,
   |                                ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
13 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/anthropic/types.rs:98:12
   |
98 |     Blocks(ArrayVec<AnthropicContentBlock<'a>, 16>)}
   |            ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
13 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/anthropic/types.rs:153:12
    |
153 |     Blocks(ArrayVec<AnthropicContentBlock<'a>, 8>)}
    |            ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
13  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/clients/anthropic/types.rs:181:16
    |
181 |     pub extra: HashMap<&'a str, serde_json::Value>}
    |                ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
13  + use crate::domain::HashMap;
    |
13  + use std::collections::HashMap;
    |
13  + use fluent_ai_domain::HashMap;
    |
13  + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/anthropic/types.rs:353:23
    |
353 |             messages: ArrayVec::new(),
    |                       ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
13  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/anthropic/types.rs:437:31
    |
437 |             self.tools = Some(ArrayVec::new());
    |                               ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
13  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/anthropic/types.rs:457:26
    |
457 |         let mut blocks = ArrayVec::new();
    |                          ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
13  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `Document` in module `completion`
   --> packages/provider/src/clients/azure/client.rs:349:32
    |
349 |     documents: Vec<completion::Document>,
    |                                ^^^^^^^^ not found in `completion`
    |
help: consider importing one of these structs
    |
9   + use crate::domain::Document;
    |
9   + use fluent_ai_domain::Document;
    |
9   + use yyaml::parser::Document;
    |
help: if you import `Document`, refer to it directly
    |
349 -     documents: Vec<completion::Document>,
349 +     documents: Vec<Document>,
    |

error[E0405]: cannot find trait `ToolDefinitionInto` in module `completion`
   --> packages/provider/src/clients/azure/client.rs:403:32
    |
403 |     pub fn tool<T: completion::ToolDefinitionInto>(mut self, tool: T) -> Self {
    |                                ^^^^^^^^^^^^^^^^^^ not found in `completion`

error[E0412]: cannot find type `AsyncTask` in this scope
   --> packages/provider/src/clients/azure/client.rs:474:10
    |
474 |     ) -> AsyncTask<
    |          ^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
9   + use crate::AsyncTask;
    |
9   + use cyrup_sugars::AsyncTask;
    |
9   + use fluent_ai_async::AsyncTask;
    |
9   + use fluent_ai_domain::AsyncTask;
    |
      and 1 other candidate

error[E0412]: cannot find type `CompletionResponseData` in module `completion`
   --> packages/provider/src/clients/azure/client.rs:475:59
    |
475 |         Result<completion::CompletionResponse<completion::CompletionResponseData>, CompletionError>,
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^ help: a struct with a similar name exists: `CompletionResponse`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/response.rs:15:1
    |
15  | pub struct CompletionResponse<'a> {
    | --------------------------------- similarly named struct `CompletionResponse` defined here

error[E0433]: failed to resolve: use of undeclared type `AsyncTask`
   --> packages/provider/src/clients/azure/client.rs:479:23
    |
479 |             Err(e) => AsyncTask::spawn(async move { Err(CompletionError::from(e)) })}
    |                       ^^^^^^^^^ use of undeclared type `AsyncTask`
    |
help: consider importing one of these structs
    |
9   + use crate::AsyncTask;
    |
9   + use cyrup_sugars::AsyncTask;
    |
9   + use fluent_ai_async::AsyncTask;
    |
9   + use fluent_ai_domain::AsyncTask;
    |
      and 1 other candidate

error[E0412]: cannot find type `AsyncTask` in this scope
   --> packages/provider/src/clients/azure/client.rs:486:10
    |
486 |     ) -> AsyncTask<
    |          ^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
9   + use crate::AsyncTask;
    |
9   + use cyrup_sugars::AsyncTask;
    |
9   + use fluent_ai_async::AsyncTask;
    |
9   + use fluent_ai_domain::AsyncTask;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `AsyncTask`
   --> packages/provider/src/clients/azure/client.rs:496:23
    |
496 |             Err(e) => AsyncTask::spawn(async move { Err(CompletionError::from(e)) })}
    |                       ^^^^^^^^^ use of undeclared type `AsyncTask`
    |
help: consider importing one of these structs
    |
9   + use crate::AsyncTask;
    |
9   + use cyrup_sugars::AsyncTask;
    |
9   + use fluent_ai_async::AsyncTask;
    |
9   + use fluent_ai_domain::AsyncTask;
    |
      and 1 other candidate

error[E0412]: cannot find type `AsyncTask` in this scope
   --> packages/provider/src/clients/azure/client.rs:501:53
    |
501 |     pub fn chat(self, prompt: impl Into<String>) -> AsyncTask<Result<String, PromptError>> {
    |                                                     ^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
9   + use crate::AsyncTask;
    |
9   + use cyrup_sugars::AsyncTask;
    |
9   + use fluent_ai_async::AsyncTask;
    |
9   + use fluent_ai_domain::AsyncTask;
    |
      and 1 other candidate

error[E0412]: cannot find type `PromptError` in this scope
   --> packages/provider/src/clients/azure/client.rs:501:78
    |
501 |     pub fn chat(self, prompt: impl Into<String>) -> AsyncTask<Result<String, PromptError>> {
    |                                                                              ^^^^^^^^^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
447 | impl<'a, PromptError> AzureCompletionBuilder<'a, HasPrompt> {
    |        +++++++++++++

error[E0433]: failed to resolve: use of undeclared type `AsyncTask`
   --> packages/provider/src/clients/azure/client.rs:504:23
    |
504 |             Err(e) => AsyncTask::spawn(async move { Err(PromptError::from(e)) })}
    |                       ^^^^^^^^^ use of undeclared type `AsyncTask`
    |
help: consider importing one of these structs
    |
9   + use crate::AsyncTask;
    |
9   + use cyrup_sugars::AsyncTask;
    |
9   + use fluent_ai_async::AsyncTask;
    |
9   + use fluent_ai_domain::AsyncTask;
    |
      and 1 other candidate

error[E0412]: cannot find type `EmbeddingModel` in this scope
   --> packages/provider/src/clients/azure/client.rs:600:18
    |
600 |     type Model = EmbeddingModel;
    |                  ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
9   + use crate::EmbeddingModel;
    |
9   + use crate::clients::gemini::embedding::EmbeddingModel;
    |
9   + use crate::domain::context::EmbeddingModel;
    |
9   + use crate::domain::embedding::EmbeddingModel;
    |
      and 4 other candidates

error[E0412]: cannot find type `EmbeddingModel` in this scope
   --> packages/provider/src/clients/azure/client.rs:603:47
    |
603 |     fn embedding_model(&self, model: &str) -> EmbeddingModel {
    |                                               ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
9   + use crate::EmbeddingModel;
    |
9   + use crate::clients::gemini::embedding::EmbeddingModel;
    |
9   + use crate::domain::context::EmbeddingModel;
    |
9   + use crate::domain::embedding::EmbeddingModel;
    |
      and 4 other candidates

error[E0433]: failed to resolve: use of undeclared type `EmbeddingModel`
   --> packages/provider/src/clients/azure/client.rs:610:9
    |
610 |         EmbeddingModel::new(self.clone(), model, ndims)
    |         ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingModel`
    |
help: consider importing one of these items
    |
9   + use crate::EmbeddingModel;
    |
9   + use crate::clients::gemini::embedding::EmbeddingModel;
    |
9   + use crate::domain::context::EmbeddingModel;
    |
9   + use crate::domain::embedding::EmbeddingModel;
    |
      and 4 other candidates

error[E0412]: cannot find type `EmbeddingModel` in this scope
   --> packages/provider/src/clients/azure/client.rs:614:72
    |
614 |     fn embedding_model_with_ndims(&self, model: &str, ndims: usize) -> EmbeddingModel {
    |                                                                        ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
9   + use crate::EmbeddingModel;
    |
9   + use crate::clients::gemini::embedding::EmbeddingModel;
    |
9   + use crate::domain::context::EmbeddingModel;
    |
9   + use crate::domain::embedding::EmbeddingModel;
    |
      and 4 other candidates

error[E0433]: failed to resolve: use of undeclared type `EmbeddingModel`
   --> packages/provider/src/clients/azure/client.rs:615:9
    |
615 |         EmbeddingModel::new(self.clone(), model, ndims)
    |         ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingModel`
    |
help: consider importing one of these items
    |
9   + use crate::EmbeddingModel;
    |
9   + use crate::clients::gemini::embedding::EmbeddingModel;
    |
9   + use crate::domain::context::EmbeddingModel;
    |
9   + use crate::domain::embedding::EmbeddingModel;
    |
      and 4 other candidates

error[E0412]: cannot find type `TranscriptionModel` in this scope
   --> packages/provider/src/clients/azure/client.rs:620:18
    |
620 |     type Model = TranscriptionModel;
    |                  ^^^^^^^^^^^^^^^^^^
    |
   ::: packages/provider/src/client.rs:41:1
    |
41  | pub trait TranscriptionClient: Send + Sync + Clone {
    | -------------------------------------------------- similarly named trait `TranscriptionClient` defined here
    |
help: a trait with a similar name exists
    |
620 -     type Model = TranscriptionModel;
620 +     type Model = TranscriptionClient;
    |
help: consider importing one of these items
    |
9   + use crate::TranscriptionModel;
    |
9   + use crate::clients::gemini::transcription::TranscriptionModel;
    |

error[E0412]: cannot find type `TranscriptionModel` in this scope
   --> packages/provider/src/clients/azure/client.rs:623:51
    |
623 |     fn transcription_model(&self, model: &str) -> TranscriptionModel {
    |                                                   ^^^^^^^^^^^^^^^^^^
    |
   ::: packages/provider/src/client.rs:41:1
    |
41  | pub trait TranscriptionClient: Send + Sync + Clone {
    | -------------------------------------------------- similarly named trait `TranscriptionClient` defined here
    |
help: a trait with a similar name exists
    |
623 -     fn transcription_model(&self, model: &str) -> TranscriptionModel {
623 +     fn transcription_model(&self, model: &str) -> TranscriptionClient {
    |
help: consider importing one of these items
    |
9   + use crate::TranscriptionModel;
    |
9   + use crate::clients::gemini::transcription::TranscriptionModel;
    |

error[E0433]: failed to resolve: use of undeclared type `TranscriptionModel`
   --> packages/provider/src/clients/azure/client.rs:624:9
    |
624 |         TranscriptionModel::new(self.clone(), model)
    |         ^^^^^^^^^^^^^^^^^^ use of undeclared type `TranscriptionModel`
    |
help: a trait with a similar name exists
    |
624 -         TranscriptionModel::new(self.clone(), model)
624 +         TranscriptionClient::new(self.clone(), model)
    |
help: consider importing one of these items
    |
9   + use crate::TranscriptionModel;
    |
9   + use crate::clients::gemini::transcription::TranscriptionModel;
    |

error[E0573]: expected type, found function `AsyncTask`
  --> packages/provider/src/clients/azure/completion.rs:89:10
   |
89 |     ) -> AsyncTask<Result<completion::CompletionResponse<Self::Response>, CompletionError>> {
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type
   |
help: consider importing one of these structs instead
   |
9  + use crate::AsyncTask;
   |
9  + use cyrup_sugars::AsyncTask;
   |
9  + use fluent_ai_async::AsyncTask;
   |
9  + use fluent_ai_domain::AsyncTask;
   |
     and 1 other candidate

error[E0412]: cannot find type `CompletionError` in this scope
  --> packages/provider/src/clients/azure/completion.rs:89:75
   |
89 |     ) -> AsyncTask<Result<completion::CompletionResponse<Self::Response>, CompletionError>> {
   |                                                                           ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
   |
  ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
   |
40 | pub enum CompletionCoreError {
   | ---------------------------- similarly named enum `CompletionCoreError` defined here
   |
   = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0425]: cannot find function `spawn_async` in module `rt`
  --> packages/provider/src/clients/azure/completion.rs:91:13
   |
91 |         rt::spawn_async(async move { this.perform_completion(req).await })
   |             ^^^^^^^^^^^ not found in `rt`
   |
help: consider importing one of these functions
   |
9  + use crate::spawn_async;
   |
9  + use fluent_ai_domain::spawn_async;
   |
help: if you import `spawn_async`, refer to it directly
   |
91 -         rt::spawn_async(async move { this.perform_completion(req).await })
91 +         spawn_async(async move { this.perform_completion(req).await })
   |

error[E0573]: expected type, found function `AsyncTask`
  --> packages/provider/src/clients/azure/completion.rs:97:10
   |
97 |     ) -> AsyncTask<Result<RigStreaming<Self::StreamingResponse>, CompletionError>> {
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type
   |
help: consider importing one of these structs instead
   |
9  + use crate::AsyncTask;
   |
9  + use cyrup_sugars::AsyncTask;
   |
9  + use fluent_ai_async::AsyncTask;
   |
9  + use fluent_ai_domain::AsyncTask;
   |
     and 1 other candidate

error[E0412]: cannot find type `CompletionError` in this scope
  --> packages/provider/src/clients/azure/completion.rs:97:66
   |
97 |     ) -> AsyncTask<Result<RigStreaming<Self::StreamingResponse>, CompletionError>> {
   |                                                                  ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
   |
  ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
   |
40 | pub enum CompletionCoreError {
   | ---------------------------- similarly named enum `CompletionCoreError` defined here
   |
   = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0425]: cannot find function `spawn_async` in module `rt`
  --> packages/provider/src/clients/azure/completion.rs:99:13
   |
99 |         rt::spawn_async(async move { this.perform_stream(req).await })
   |             ^^^^^^^^^^^ not found in `rt`
   |
help: consider importing one of these functions
   |
9  + use crate::spawn_async;
   |
9  + use fluent_ai_domain::spawn_async;
   |
help: if you import `spawn_async`, refer to it directly
   |
99 -         rt::spawn_async(async move { this.perform_stream(req).await })
99 +         spawn_async(async move { this.perform_stream(req).await })
   |

error[E0412]: cannot find type `CompletionError` in this scope
   --> packages/provider/src/clients/azure/completion.rs:110:77
    |
110 |     ) -> Result<completion::CompletionResponse<openai::CompletionResponse>, CompletionError> {
    |                                                                             ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
    |
40  | pub enum CompletionCoreError {
    | ---------------------------- similarly named enum `CompletionCoreError` defined here
    |
    = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0433]: failed to resolve: use of undeclared type `CompletionError`
   --> packages/provider/src/clients/azure/completion.rs:132:46
    |
132 |                 ApiResponse::Err(err) => Err(CompletionError::ProviderError(err.message))}
    |                                              ^^^^^^^^^^^^^^^
    |                                              |
    |                                              use of undeclared type `CompletionError`
    |                                              help: an enum with a similar name exists: `CompletionCoreError`
    |
    = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0433]: failed to resolve: use of undeclared type `CompletionError`
   --> packages/provider/src/clients/azure/completion.rs:134:17
    |
134 |             Err(CompletionError::ProviderError(response.text().await?))
    |                 ^^^^^^^^^^^^^^^
    |                 |
    |                 use of undeclared type `CompletionError`
    |                 help: an enum with a similar name exists: `CompletionCoreError`
    |
    = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0412]: cannot find type `CompletionError` in this scope
   --> packages/provider/src/clients/azure/completion.rs:142:68
    |
142 |     ) -> Result<RigStreaming<openai::StreamingCompletionResponse>, CompletionError> {
    |                                                                    ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
    |
40  | pub enum CompletionCoreError {
    | ---------------------------- similarly named enum `CompletionCoreError` defined here
    |
    = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0425]: cannot find function `merge` in this scope
   --> packages/provider/src/clients/azure/completion.rs:145:19
    |
145 |         request = merge(
    |                   ^^^^^ not found in this scope
    |
note: function `crate::clients::xai::streaming::merge` exists but is inaccessible
   --> packages/provider/src/clients/xai/streaming.rs:9:1
    |
9   | fn merge(mut base: serde_json::Value, other: serde_json::Value) -> serde_json::Value {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these functions
    |
9   + use crate::json_util::merge;
    |
9   + use fluent_ai_domain::json_util::merge;
    |

error[E0412]: cannot find type `CompletionError` in this scope
   --> packages/provider/src/clients/azure/completion.rs:162:36
    |
162 |     ) -> Result<serde_json::Value, CompletionError> {
    |                                    ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
    |
40  | pub enum CompletionCoreError {
    | ---------------------------- similarly named enum `CompletionCoreError` defined here
    |
    = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0433]: failed to resolve: could not find `ToolDefinition` in `openai`
   --> packages/provider/src/clients/azure/completion.rs:193:75
    |
193 |                 "tools": completion_request.tools.into_iter().map(openai::ToolDefinition::from).collect::<Vec<_>>(),
    |                                                                           ^^^^^^^^^^^^^^ could not find `ToolDefinition` in `openai`
    |
note: struct `crate::clients::ollama::completion::ToolDefinition` exists but is inaccessible
   --> packages/provider/src/clients/ollama/completion.rs:373:1
    |
373 | pub struct ToolDefinition {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
    |
9   + use crate::clients::azure::completion::completion::ToolDefinition;
    |
9   + use crate::clients::xai::completion::ToolDefinition;
    |
9   + use crate::domain::http::ToolDefinition;
    |
9   + use crate::domain::tool::ToolDefinition;
    |
      and 3 other candidates
help: if you import `ToolDefinition`, refer to it directly
    |
193 -                 "tools": completion_request.tools.into_iter().map(openai::ToolDefinition::from).collect::<Vec<_>>(),
193 +                 "tools": completion_request.tools.into_iter().map(ToolDefinition::from).collect::<Vec<_>>(),
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `json_util`
   --> packages/provider/src/clients/azure/completion.rs:198:13
    |
198 |             json_util::merge(request, params)
    |             ^^^^^^^^^ use of unresolved module or unlinked crate `json_util`
    |
    = help: if you wanted to use a crate named `json_util`, use `cargo add json_util` to add it to your `Cargo.toml`
help: consider importing one of these modules
    |
9   + use crate::json_util;
    |
9   + use fluent_ai_domain::json_util;
    |

error[E0412]: cannot find type `EmbeddingError` in this scope
  --> packages/provider/src/clients/azure/embedding.rs:70:33
   |
70 | impl From<ApiErrorResponse> for EmbeddingError {
   |                                 ^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this enum through its public re-export
   |
9  + use crate::EmbeddingError;
   |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
  --> packages/provider/src/clients/azure/embedding.rs:72:9
   |
72 |         EmbeddingError::ProviderError(err.message)
   |         ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
   |
help: consider importing this enum through its public re-export
   |
9  + use crate::EmbeddingError;
   |

error[E0412]: cannot find type `EmbeddingError` in this scope
  --> packages/provider/src/clients/azure/embedding.rs:76:73
   |
76 | impl From<ApiResponse<EmbeddingResponse>> for Result<EmbeddingResponse, EmbeddingError> {
   |                                                                         ^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this enum through its public re-export
   |
9  + use crate::EmbeddingError;
   |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
  --> packages/provider/src/clients/azure/embedding.rs:80:42
   |
80 |             ApiResponse::Err(err) => Err(EmbeddingError::ProviderError(err.message))}
   |                                          ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
   |
help: consider importing this enum through its public re-export
   |
9  + use crate::EmbeddingError;
   |

error[E0412]: cannot find type `EmbeddingModel` in this scope
  --> packages/provider/src/clients/azure/embedding.rs:88:6
   |
88 | impl EmbeddingModel {
   |      ^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
9  + use crate::EmbeddingModel;
   |
9  + use crate::clients::azure::embedding::embedding::EmbeddingModel;
   |
9  + use crate::clients::gemini::embedding::EmbeddingModel;
   |
9  + use crate::domain::context::EmbeddingModel;
   |
     and 4 other candidates

error[E0433]: failed to resolve: could not find `client` in `super`
  --> packages/provider/src/clients/azure/embedding.rs:99:20
   |
99 | impl super::super::client::EmbeddingModel for EmbeddingModel {
   |                    ^^^^^^ could not find `client` in `super`
   |
note: module `crate::clients::ollama::client` exists but is inaccessible
  --> packages/provider/src/clients/ollama/mod.rs:7:1
   |
7  | mod client;
   | ^^^^^^^^^^^ not accessible
help: consider importing one of these modules
   |
9  + use crate::client;
   |
9  + use crate::clients::azure::client;
   |
9  + use crate::clients::gemini::client;
   |
9  + use crate::clients::together::client;
   |
help: if you import `client`, refer to it directly
   |
99 - impl super::super::client::EmbeddingModel for EmbeddingModel {
99 + impl client::EmbeddingModel for EmbeddingModel {
   |

error[E0412]: cannot find type `EmbeddingModel` in this scope
  --> packages/provider/src/clients/azure/embedding.rs:99:47
   |
99 | impl super::super::client::EmbeddingModel for EmbeddingModel {
   |                                               ^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
9  + use crate::EmbeddingModel;
   |
9  + use crate::clients::azure::embedding::embedding::EmbeddingModel;
   |
9  + use crate::clients::gemini::embedding::EmbeddingModel;
   |
9  + use crate::domain::context::EmbeddingModel;
   |
     and 4 other candidates

error[E0573]: expected type, found function `AsyncTask`
   --> packages/provider/src/clients/azure/embedding.rs:111:10
    |
111 |       ) -> AsyncTask<
    |  __________^
112 | |         Result<
113 | |             Vec<fluent_ai_domain::embedding::Embedding>,
114 | |             anyhow::Error, // was fluent_ai_domain::embedding::EmbeddingError
115 | |         >,
116 | |     > {
    | |_____^ not a type
    |
help: consider importing one of these structs instead
    |
9   + use crate::AsyncTask;
    |
9   + use cyrup_sugars::AsyncTask;
    |
9   + use fluent_ai_async::AsyncTask;
    |
9   + use fluent_ai_domain::AsyncTask;
    |
      and 1 other candidate

error[E0425]: cannot find function `spawn_async` in crate `rt`
   --> packages/provider/src/clients/azure/embedding.rs:119:13
    |
119 |         rt::spawn_async(async move { this.perform_embedding_batch(documents).await })
    |             ^^^^^^^^^^^ not found in `rt`
    |
help: consider importing one of these functions
    |
9   + use crate::spawn_async;
    |
9   + use fluent_ai_domain::spawn_async;
    |
help: if you import `spawn_async`, refer to it directly
    |
119 -         rt::spawn_async(async move { this.perform_embedding_batch(documents).await })
119 +         spawn_async(async move { this.perform_embedding_batch(documents).await })
    |

error[E0573]: expected type, found function `AsyncTask`
   --> packages/provider/src/clients/azure/embedding.rs:123:36
    |
123 |     fn embed(&self, text: &str) -> AsyncTask<cyrup_sugars::ZeroOneOrMany<f32>> {
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type
    |
help: consider importing one of these structs instead
    |
9   + use crate::AsyncTask;
    |
9   + use cyrup_sugars::AsyncTask;
    |
9   + use fluent_ai_async::AsyncTask;
    |
9   + use fluent_ai_domain::AsyncTask;
    |
      and 1 other candidate

error[E0425]: cannot find function `spawn_async` in crate `rt`
   --> packages/provider/src/clients/azure/embedding.rs:126:13
    |
126 |         rt::spawn_async(async move {
    |             ^^^^^^^^^^^ not found in `rt`
    |
help: consider importing one of these functions
    |
9   + use crate::spawn_async;
    |
9   + use fluent_ai_domain::spawn_async;
    |
help: if you import `spawn_async`, refer to it directly
    |
126 -         rt::spawn_async(async move {
126 +         spawn_async(async move {
    |

error[E0412]: cannot find type `EmbeddingModel` in this scope
   --> packages/provider/src/clients/azure/embedding.rs:171:6
    |
171 | impl EmbeddingModel {
    |      ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
9   + use crate::EmbeddingModel;
    |
9   + use crate::clients::azure::embedding::embedding::EmbeddingModel;
    |
9   + use crate::clients::gemini::embedding::EmbeddingModel;
    |
9   + use crate::domain::context::EmbeddingModel;
    |
      and 4 other candidates

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:188:26
    |
188 |             .map_err(|e| EmbeddingError::Serialization(e.to_string()))?;
    |                          ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:198:26
    |
198 |             .map_err(|e| EmbeddingError::Http(e.to_string()))?
    |                          ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:207:26
    |
207 |             .map_err(|e| EmbeddingError::Http(e.to_string()))?;
    |                          ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:214:30
    |
214 |                 .map_err(|e| EmbeddingError::Http(e.to_string()))?;
    |                              ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:215:24
    |
215 |             return Err(EmbeddingError::ProviderError(format!(
    |                        ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:224:26
    |
224 |             .map_err(|e| EmbeddingError::Serialization(e.to_string()))?;
    |                          ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:228:25
    |
228 |             None => Err(EmbeddingError::ResponseError(
    |                         ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:250:24
    |
250 |             return Err(EmbeddingError::Provider(format!(
    |                        ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:263:26
    |
263 |             .map_err(|e| EmbeddingError::Serialization(e.to_string()))?;
    |                          ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:273:26
    |
273 |             .map_err(|e| EmbeddingError::Http(e.to_string()))?
    |                          ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:282:26
    |
282 |             .map_err(|e| EmbeddingError::Http(e.to_string()))?;
    |                          ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:289:30
    |
289 |                 .map_err(|e| EmbeddingError::Http(e.to_string()))?;
    |                              ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:290:24
    |
290 |             return Err(EmbeddingError::ProviderError(format!(
    |                        ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:299:26
    |
299 |             .map_err(|e| EmbeddingError::Serialization(e.to_string()))?;
    |                          ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingError`
   --> packages/provider/src/clients/azure/embedding.rs:302:24
    |
302 |             return Err(EmbeddingError::ResponseError(format!(
    |                        ^^^^^^^^^^^^^^ use of undeclared type `EmbeddingError`
    |
help: consider importing this enum through its public re-export
    |
9   + use crate::EmbeddingError;
    |

error[E0573]: expected type, found function `AsyncTask`
  --> packages/provider/src/clients/azure/streaming.rs:40:10
   |
40 |     ) -> AsyncTask<Result<RigStreaming<StreamingCompletionResponse>, CompletionError>> {
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type
   |
help: consider importing one of these structs instead
   |
9  + use crate::AsyncTask;
   |
9  + use cyrup_sugars::AsyncTask;
   |
9  + use fluent_ai_async::AsyncTask;
   |
9  + use fluent_ai_domain::AsyncTask;
   |
     and 1 other candidate

error[E0412]: cannot find type `CompletionError` in this scope
  --> packages/provider/src/clients/azure/streaming.rs:40:70
   |
40 |     ) -> AsyncTask<Result<RigStreaming<StreamingCompletionResponse>, CompletionError>> {
   |                                                                      ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
   |
  ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
   |
40 | pub enum CompletionCoreError {
   | ---------------------------- similarly named enum `CompletionCoreError` defined here
   |
   = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0425]: cannot find function `spawn_async` in crate `rt`
  --> packages/provider/src/clients/azure/streaming.rs:41:13
   |
41 |         rt::spawn_async(self.clone().drive_stream(req))
   |             ^^^^^^^^^^^ not found in `rt`
   |
help: consider importing one of these functions
   |
9  + use crate::spawn_async;
   |
9  + use fluent_ai_domain::spawn_async;
   |
help: if you import `spawn_async`, refer to it directly
   |
41 -         rt::spawn_async(self.clone().drive_stream(req))
41 +         spawn_async(self.clone().drive_stream(req))
   |

error[E0412]: cannot find type `CompletionError` in this scope
  --> packages/provider/src/clients/azure/streaming.rs:49:60
   |
49 |     ) -> Result<RigStreaming<StreamingCompletionResponse>, CompletionError> {
   |                                                            ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
   |
  ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
   |
40 | pub enum CompletionCoreError {
   | ---------------------------- similarly named enum `CompletionCoreError` defined here
   |
   = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0425]: cannot find function `merge` in this scope
  --> packages/provider/src/clients/azure/streaming.rs:53:19
   |
53 |         request = merge(
   |                   ^^^^^ not found in this scope
   |
note: function `crate::clients::xai::streaming::merge` exists but is inaccessible
  --> packages/provider/src/clients/xai/streaming.rs:9:1
   |
9  | fn merge(mut base: serde_json::Value, other: serde_json::Value) -> serde_json::Value {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these functions
   |
9  + use crate::json_util::merge;
   |
9  + use fluent_ai_domain::json_util::merge;
   |

error[E0412]: cannot find type `TranscriptionModel` in this scope
  --> packages/provider/src/clients/azure/transcription.rs:35:6
   |
35 | impl TranscriptionModel {
   |      ^^^^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
10 + use crate::TranscriptionModel;
   |
10 + use crate::clients::gemini::transcription::TranscriptionModel;
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `transcription`
  --> packages/provider/src/clients/azure/transcription.rs:45:6
   |
45 | impl transcription::TranscriptionModel for TranscriptionModel {
   |      ^^^^^^^^^^^^^ use of unresolved module or unlinked crate `transcription`
   |
help: to make use of source file packages/provider/src/clients/azure/transcription.rs, use `mod transcription` in this file to declare the module
  --> packages/provider/src/lib.rs:7:1
   |
7  + mod transcription;
   |
help: consider importing one of these modules
   |
10 + use crate::clients::gemini::transcription;
   |
10 + use crate::transcription;
   |

error[E0412]: cannot find type `TranscriptionModel` in this scope
  --> packages/provider/src/clients/azure/transcription.rs:45:44
   |
45 | impl transcription::TranscriptionModel for TranscriptionModel {
   |                                            ^^^^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
10 + use crate::TranscriptionModel;
   |
10 + use crate::clients::gemini::transcription::TranscriptionModel;
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `transcription`
  --> packages/provider/src/clients/azure/transcription.rs:50:18
   |
50 |         request: transcription::TranscriptionRequest,
   |                  ^^^^^^^^^^^^^ use of unresolved module or unlinked crate `transcription`
   |
help: to make use of source file packages/provider/src/clients/azure/transcription.rs, use `mod transcription` in this file to declare the module
  --> packages/provider/src/lib.rs:7:1
   |
7  + mod transcription;
   |
help: consider importing one of these modules
   |
10 + use crate::domain::voice::transcription;
   |
10 + use crate::transcription;
   |
10 + use fluent_ai_domain::voice::transcription;
   |

error[E0573]: expected type, found function `AsyncTask`
  --> packages/provider/src/clients/azure/transcription.rs:51:10
   |
51 |       ) -> AsyncTask<
   |  __________^
52 | |         Result<
53 | |             transcription::TranscriptionResponse<Self::Response>,
54 | |             transcription::TranscriptionError,
55 | |         >,
56 | |     > {
   | |_____^ not a type
   |
help: consider importing one of these structs instead
   |
10 + use crate::AsyncTask;
   |
10 + use cyrup_sugars::AsyncTask;
   |
10 + use fluent_ai_async::AsyncTask;
   |
10 + use fluent_ai_domain::AsyncTask;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `transcription`
  --> packages/provider/src/clients/azure/transcription.rs:53:13
   |
53 |             transcription::TranscriptionResponse<Self::Response>,
   |             ^^^^^^^^^^^^^ use of unresolved module or unlinked crate `transcription`
   |
help: to make use of source file packages/provider/src/clients/azure/transcription.rs, use `mod transcription` in this file to declare the module
  --> packages/provider/src/lib.rs:7:1
   |
7  + mod transcription;
   |
help: consider importing one of these modules
   |
10 + use crate::clients::huggingface::transcription;
   |
10 + use crate::domain::voice::transcription;
   |
10 + use crate::transcription;
   |
10 + use fluent_ai_domain::voice::transcription;
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `transcription`
  --> packages/provider/src/clients/azure/transcription.rs:54:13
   |
54 |             transcription::TranscriptionError,
   |             ^^^^^^^^^^^^^ use of unresolved module or unlinked crate `transcription`
   |
help: to make use of source file packages/provider/src/clients/azure/transcription.rs, use `mod transcription` in this file to declare the module
  --> packages/provider/src/lib.rs:7:1
   |
7  + mod transcription;
   |
help: consider importing one of these modules
   |
10 + use crate::clients::gemini::transcription;
   |
10 + use crate::clients::huggingface::transcription;
   |
10 + use crate::transcription;
   |

error[E0425]: cannot find function `spawn_async` in crate `rt`
  --> packages/provider/src/clients/azure/transcription.rs:58:13
   |
58 |         rt::spawn_async(async move { this.perform_transcription(request).await })
   |             ^^^^^^^^^^^ not found in `rt`
   |
help: consider importing one of these functions
   |
10 + use crate::spawn_async;
   |
10 + use fluent_ai_domain::spawn_async;
   |
help: if you import `spawn_async`, refer to it directly
   |
58 -         rt::spawn_async(async move { this.perform_transcription(request).await })
58 +         spawn_async(async move { this.perform_transcription(request).await })
   |

error[E0412]: cannot find type `TranscriptionModel` in this scope
  --> packages/provider/src/clients/azure/transcription.rs:64:6
   |
64 | impl TranscriptionModel {
   |      ^^^^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
10 + use crate::TranscriptionModel;
   |
10 + use crate::clients::gemini::transcription::TranscriptionModel;
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `transcription`
  --> packages/provider/src/clients/azure/transcription.rs:69:18
   |
69 |         request: transcription::TranscriptionRequest,
   |                  ^^^^^^^^^^^^^ use of unresolved module or unlinked crate `transcription`
   |
help: to make use of source file packages/provider/src/clients/azure/transcription.rs, use `mod transcription` in this file to declare the module
  --> packages/provider/src/lib.rs:7:1
   |
7  + mod transcription;
   |
help: consider importing one of these modules
   |
10 + use crate::domain::voice::transcription;
   |
10 + use crate::transcription;
   |
10 + use fluent_ai_domain::voice::transcription;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/provider/src/clients/azure/transcription.rs:74:29
   |
74 |         let mut form_data = HashMap::new();
   |                             ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
10 + use crate::domain::HashMap;
   |
10 + use std::collections::HashMap;
   |
10 + use fluent_ai_domain::HashMap;
   |
10 + use hashbrown::HashMap;
   |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/bedrock/completion.rs:398:39
    |
398 |                     let error_chunk = CompletionChunk {
    |                                       ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
10  + use crate::domain::http::CompletionChunk;
    |
10  + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
  --> packages/provider/src/clients/bedrock/streaming.rs:72:43
   |
72 |                         let error_chunk = CompletionChunk {
   |                                           ^^^^^^^^^^^^^^^ not a struct, variant or union type
   |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
  --> packages/provider/src/clients/huggingface/streaming.rs:53:1
   |
53 | struct CompletionChunk {
   | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
   |
10 + use crate::domain::http::CompletionChunk;
   |
10 + use fluent_ai_domain::http::CompletionChunk;
   |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
  --> packages/provider/src/clients/bedrock/streaming.rs:86:35
   |
86 |                 let final_chunk = CompletionChunk {
   |                                   ^^^^^^^^^^^^^^^ not a struct, variant or union type
   |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
  --> packages/provider/src/clients/huggingface/streaming.rs:53:1
   |
53 | struct CompletionChunk {
   | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
   |
10 + use crate::domain::http::CompletionChunk;
   |
10 + use fluent_ai_domain::http::CompletionChunk;
   |

error[E0412]: cannot find type `EventStreamEvent` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/bedrock/streaming.rs:106:33
    |
106 |         event: fluent_ai_http3::EventStreamEvent,
    |                                 ^^^^^^^^^^^^^^^^ not found in `fluent_ai_http3`

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/bedrock/streaming.rs:148:25
    |
148 |             return Some(CompletionChunk {
    |                         ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
10  + use crate::domain::http::CompletionChunk;
    |
10  + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/bedrock/streaming.rs:168:25
    |
168 |             return Some(CompletionChunk {
    |                         ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
10  + use crate::domain::http::CompletionChunk;
    |
10  + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/bedrock/streaming.rs:190:25
    |
190 |             return Some(CompletionChunk {
    |                         ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
10  + use crate::domain::http::CompletionChunk;
    |
10  + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/bedrock/streaming.rs:212:14
    |
212 |         Some(CompletionChunk {
    |              ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
10  + use crate::domain::http::CompletionChunk;
    |
10  + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/bedrock/streaming.rs:245:25
    |
245 |             return Some(CompletionChunk {
    |                         ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
10  + use crate::domain::http::CompletionChunk;
    |
10  + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/bedrock/streaming.rs:286:37
    |
286 |                         return Some(CompletionChunk {
    |                                     ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
10  + use crate::domain::http::CompletionChunk;
    |
10  + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/bedrock/streaming.rs:304:29
    |
304 |                 return Some(CompletionChunk {
    |                             ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
10  + use crate::domain::http::CompletionChunk;
    |
10  + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0412]: cannot find type `ConfigMetrics` in module `super::config`
   --> packages/provider/src/clients/candle/client.rs:707:47
    |
707 |     pub global_config_metrics: super::config::ConfigMetrics,
    |                                               ^^^^^^^^^^^^^ not found in `super::config`

error[E0412]: cannot find type `RuntimeMetrics` in module `super::config`
   --> packages/provider/src/clients/candle/client.rs:709:42
    |
709 |     pub realtime_metrics: super::config::RuntimeMetrics}
    |                                          ^^^^^^^^^^^^^^ not found in `super::config`
    |
help: consider importing this struct
    |
6   + use tokio::runtime::RuntimeMetrics;
    |
help: if you import `RuntimeMetrics`, refer to it directly
    |
709 -     pub realtime_metrics: super::config::RuntimeMetrics}
709 +     pub realtime_metrics: RuntimeMetrics}
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:723:39
    |
723 |                     let error_chunk = CompletionChunk {
    |                                       ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:752:35
    |
752 |                 let error_chunk = CompletionChunk {
    |                                   ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:764:39
    |
764 |                     let error_chunk = CompletionChunk {
    |                                       ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:779:35
    |
779 |                 let error_chunk = CompletionChunk {
    |                                   ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:810:39
    |
810 |                     let error_chunk = CompletionChunk {
    |                                       ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:843:43
    |
843 |                         let error_chunk = CompletionChunk {
    |                                           ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:857:43
    |
857 |                         let error_chunk = CompletionChunk {
    |                                           ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:882:39
    |
882 |                     let error_chunk = CompletionChunk {
    |                                       ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:918:40
    |
918 |                 let completion_chunk = CompletionChunk {
    |                                        ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:943:31
    |
943 |             let final_chunk = CompletionChunk {
    |                               ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0422]: cannot find struct, variant or union type `CompletionUsage` in module `fluent_ai_domain::usage`
   --> packages/provider/src/clients/candle/client.rs:950:54
    |
950 |                 usage: Some(fluent_ai_domain::usage::CompletionUsage {
    |                                                      ^^^^^^^^^^^^^^^ not found in `fluent_ai_domain::usage`

error[E0412]: cannot find type `CompletionError` in crate `fluent_ai_domain`
   --> packages/provider/src/clients/candle/client.rs:982:52
    |
982 | impl From<CandleClientError> for fluent_ai_domain::CompletionError {
    |                                                    ^^^^^^^^^^^^^^^ help: a trait with a similar name exists: `CompletionModel`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/core.rs:14:1
    |
14  | pub trait CompletionModel: Send + Sync + 'static {
    | ------------------------------------------------ similarly named trait `CompletionModel` defined here
    |
    = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0433]: failed to resolve: could not find `CompletionError` in `fluent_ai_domain`
   --> packages/provider/src/clients/candle/client.rs:984:27
    |
984 |         fluent_ai_domain::CompletionError::ProviderError(err.to_string())
    |                           ^^^^^^^^^^^^^^^
    |                           |
    |                           could not find `CompletionError` in `fluent_ai_domain`
    |                           help: a trait with a similar name exists: `CompletionModel`
    |
    = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/clients/candle/config.rs:19:24
   |
19 |     pub model_configs: HashMap<CandleModel, ModelSpecificConfig>,
   |                        ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/provider/src/clients/candle/config.rs:31:33
   |
31 |         let mut model_configs = HashMap::new();
   |                                 ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0412]: cannot find type `AtomicU32` in this scope
    --> packages/provider/src/clients/candle/device_manager.rs:200:35
     |
200  |       avg_scan_time_us: CachePadded<AtomicU32>,
     |                                     ^^^^^^^^^
     |
    ::: /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/sync/atomic.rs:3786:1
     |
3786 | / atomic_int! {
3787 | |     cfg(target_has_atomic = "64"),
3788 | |     cfg(target_has_atomic_equal_alignment = "64"),
3789 | |     stable(feature = "integer_atomics_stable", since = "1.34.0"),
...    |
3802 | |     u64 AtomicU64
3803 | | }
     | |_- similarly named struct `AtomicU64` defined here
     |
help: a struct with a similar name exists
     |
200  -     avg_scan_time_us: CachePadded<AtomicU32>,
200  +     avg_scan_time_us: CachePadded<AtomicU64>,
     |
help: consider importing this struct
     |
6    + use std::sync::atomic::AtomicU32;
     |

error[E0433]: failed to resolve: use of undeclared type `AtomicU32`
   --> packages/provider/src/clients/candle/device_manager.rs:211:48
    |
211 |             avg_scan_time_us: CachePadded::new(AtomicU32::new(0)),
    |                                                ^^^^^^^^^ use of undeclared type `AtomicU32`
    |
help: a struct with a similar name exists
    |
211 -             avg_scan_time_us: CachePadded::new(AtomicU32::new(0)),
211 +             avg_scan_time_us: CachePadded::new(AtomicU64::new(0)),
    |
help: consider importing this struct
    |
6   + use std::sync::atomic::AtomicU32;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/candle/generation.rs:290:17
    |
290 |     prob_cache: ArrayVec<TokenProb, SAMPLING_CACHE_SIZE>}
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/candle/generation.rs:314:25
    |
314 |             prob_cache: ArrayVec::new()})
    |                         ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/candle/kv_cache.rs:150:26
    |
150 |     batch_cache: ArcSwap<ArrayVec<AlignedKvData, MAX_BATCH_SIZE>>,
    |                          ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/candle/kv_cache.rs:186:48
    |
186 |             batch_cache: ArcSwap::from_pointee(ArrayVec::new()),
    |                                                ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/candle/kv_cache.rs:296:27
    |
296 |         let empty_cache = ArrayVec::new();
    |                           ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/candle/kv_cache.rs:487:19
    |
487 |     layer_caches: ArrayVec<LayerCache, MAX_LAYERS>,
    |                   ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/candle/kv_cache.rs:541:32
    |
541 |         let mut layer_caches = ArrayVec::new();
    |                                ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0404]: expected trait, found enum `Provider`
  --> packages/provider/src/clients/candle/provider.rs:31:6
   |
31 | impl Provider for CandleProvider {
   |      ^^^^^^^^ not a trait

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/clients/candle/tokenizer.rs:100:36
    |
100 |     pub additional_special_tokens: HashMap<TokenString, u32>}
    |                                    ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/clients/candle/tokenizer.rs:110:40
    |
110 |             additional_special_tokens: HashMap::new()}
    |                                        ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0277]: a value of type `Vec<types::candle_chat::chat::macros::types::MacroMetadata>` cannot be built from an iterator over elements of type `types::candle_chat::macros::types::MacroMetadata`
    --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/system.rs:219:24
     |
219  |             .collect::<Vec<MacroMetadata>>()
     |              -------   ^^^^^^^^^^^^^^^^^^ value of type `Vec<types::candle_chat::chat::macros::types::MacroMetadata>` cannot be built from `std::iter::Iterator<Item=types::candle_chat::macros::types::MacroMetadata>`
     |              |
     |              required by a bound introduced by this call
     |
     = help: the trait `FromIterator<types::candle_chat::macros::types::MacroMetadata>` is not implemented for `Vec<types::candle_chat::chat::macros::types::MacroMetadata>`
             but trait `FromIterator<types::candle_chat::chat::macros::types::MacroMetadata>` is implemented for it
     = help: for that trait implementation, expected `types::candle_chat::chat::macros::types::MacroMetadata`, found `types::candle_chat::macros::types::MacroMetadata`
note: the method call chain might not have had the expected associated types
    --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/system.rs:218:14
     |
216  |         self.macros
     |         ----------- this expression has type `Arc<SkipMap<Uuid, ChatMacro>>`
217  |             .iter()
     |              ------ `Iterator::Item` is `Entry<'_, Uuid, ChatMacro>` here
218  |             .map(|entry| entry.value().metadata.clone())
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Iterator::Item` changed to `MacroMetadata` here
note: required by a bound in `std::iter::Iterator::collect`
    --> /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:2014:19
     |
2014 |     fn collect<B: FromIterator<Self::Item>>(self) -> B
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::collect`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/clients/candle/tokenizer.rs:135:38
    |
135 |                 let mut additional = HashMap::new();
    |                                      ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0277]: a value of type `Vec<types::candle_chat::chat::macros::types::MacroMetadata>` cannot be built from an iterator over elements of type `types::candle_chat::macros::types::MacroMetadata`
    --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/system.rs:247:24
     |
247  |             .collect::<Vec<MacroMetadata>>()
     |              -------   ^^^^^^^^^^^^^^^^^^ value of type `Vec<types::candle_chat::chat::macros::types::MacroMetadata>` cannot be built from `std::iter::Iterator<Item=types::candle_chat::macros::types::MacroMetadata>`
     |              |
     |              required by a bound introduced by this call
     |
     = help: the trait `FromIterator<types::candle_chat::macros::types::MacroMetadata>` is not implemented for `Vec<types::candle_chat::chat::macros::types::MacroMetadata>`
             but trait `FromIterator<types::candle_chat::chat::macros::types::MacroMetadata>` is implemented for it
     = help: for that trait implementation, expected `types::candle_chat::chat::macros::types::MacroMetadata`, found `types::candle_chat::macros::types::MacroMetadata`
note: the method call chain might not have had the expected associated types
    --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/system.rs:246:14
     |
226  |           self.macros
     |           ----------- this expression has type `Arc<SkipMap<Uuid, ChatMacro>>`
227  |               .iter()
     |                ------ `Iterator::Item` is `Entry<'_, Uuid, ChatMacro>` here
228  |               .filter(|entry| {
     |  ______________-
229  | |                 let macro_def = entry.value();
230  | |                 macro_def
231  | |                     .metadata
...    |
244  | |                         .any(|tag| tag.to_lowercase().contains(&query_lower))
245  | |             })
     | |______________- `Iterator::Item` remains `Entry<'_, Uuid, ChatMacro>` here
246  |               .map(|entry| entry.value().metadata.clone())
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Iterator::Item` changed to `MacroMetadata` here
note: required by a bound in `std::iter::Iterator::collect`
    --> /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:2014:19
     |
2014 |     fn collect<B: FromIterator<Self::Item>>(self) -> B
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::collect`

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/clients/candle/tokenizer.rs:351:20
    |
351 |     vocab: ArcSwap<HashMap<TokenString, u32>>,
    |                    ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/clients/candle/tokenizer.rs:353:28
    |
353 |     reverse_vocab: ArcSwap<HashMap<u32, TokenString>>,
    |                            ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/clients/candle/tokenizer.rs:407:21
    |
407 |         let vocab = HashMap::new();
    |                     ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/clients/candle/tokenizer.rs:408:29
    |
408 |         let reverse_vocab = HashMap::new();
    |                             ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/clients/candle/tokenizer.rs:424:21
    |
424 |         let vocab = HashMap::new();
    |                     ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/clients/candle/tokenizer.rs:425:29
    |
425 |         let reverse_vocab = HashMap::new();
    |                             ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/clients/candle/tokenizer.rs:450:25
    |
450 |         let mut vocab = HashMap::new();
    |                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/clients/candle/tokenizer.rs:451:33
    |
451 |         let mut reverse_vocab = HashMap::new();
    |                                 ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/deepseek/completion.rs:39:12
   |
39 |     crate::model_info::get_model_config(model_name)
   |            ^^^^^^^^^^ unresolved import
   |
note: module `crate::openai::model_info` exists but is inaccessible
  --> packages/provider/src/clients/openai/mod.rs:56:1
   |
56 | mod model_info;
   | ^^^^^^^^^^^^^^^ not accessible
help: a struct with a similar name exists
   |
39 -     crate::model_info::get_model_config(model_name)
39 +     crate::ModelInfo::get_model_config(model_name)
   |
help: a similar path exists
   |
39 |     crate::openai::model_info::get_model_config(model_name)
   |            ++++++++
help: consider importing one of these modules
   |
15 + use crate::clients::gemini::model_info;
   |
15 + use crate::clients::mistral::model_info;
   |
help: if you import `model_info`, refer to it directly
   |
39 -     crate::model_info::get_model_config(model_name)
39 +     model_info::get_model_config(model_name)
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/deepseek/completion.rs:57:19
   |
57 |     chat_history: ArrayVec<Message, MAX_MESSAGES>,
   |                   ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/deepseek/completion.rs:58:16
   |
58 |     documents: ArrayVec<Document, MAX_DOCUMENTS>,
   |                ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0308]: mismatched types
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/types.rs:62:30
   |
62 |                     command: command.clone(),
   |                              ^^^^^^^^^^^^^^^ expected `ImmutableChatCommand`, found a different `ImmutableChatCommand`
   |
   = note: `ImmutableChatCommand` and `ImmutableChatCommand` have similar names, but are actually distinct types
note: `ImmutableChatCommand` is defined in module `crate::types::candle_chat::chat::commands::types::command` of the current crate
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/commands/types/command.rs:15:1
   |
15 | pub enum ImmutableChatCommand {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: `ImmutableChatCommand` is defined in module `crate::types::candle_chat::commands::types::commands` of the current crate
  --> packages/fluent-ai-candle/src/types/candle_chat/commands/types/commands.rs:19:1
   |
19 | pub enum ImmutableChatCommand {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/deepseek/completion.rs:59:12
   |
59 |     tools: ArrayVec<ToolDefinition, MAX_TOOLS>,
   |            ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/deepseek/completion.rs:69:28
   |
69 |     pub tool_calls: Option<ArrayVec<DeepSeekToolCall<'a>, MAX_TOOLS>>}
   |                            ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0616]: field `config` of struct `ActionHandlerRegistry` is private
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/mod.rs:114:14
    |
114 |     handlers.config = handler_config;
    |              ^^^^^^ private field

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/deepseek/completion.rs:89:19
   |
89 |     pub messages: ArrayVec<DeepSeekMessage<'a>, MAX_MESSAGES>,
   |                   ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/deepseek/completion.rs:101:23
    |
101 |     pub tools: Option<ArrayVec<Value, MAX_TOOLS>>,
    |                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/deepseek/completion.rs:168:27
    |
168 |             chat_history: ArrayVec::new(),
    |                           ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/deepseek/completion.rs:169:24
    |
169 |             documents: ArrayVec::new(),
    |                        ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/deepseek/completion.rs:170:20
    |
170 |             tools: ArrayVec::new(),
    |                    ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/deepseek/completion.rs:439:28
    |
439 |         let mut messages = ArrayVec::new();
    |                            ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/deepseek/completion.rs:538:17
    |
538 |     ) -> Result<ArrayVec<DeepSeekToolCall<'_>, MAX_TOOLS>, CompletionError> {
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/deepseek/completion.rs:539:30
    |
539 |         let mut tool_calls = ArrayVec::new();
    |                              ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/deepseek/completion.rs:558:39
    |
558 |     fn convert_tools(&self) -> Result<ArrayVec<Value, MAX_TOOLS>, CompletionError> {
    |                                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/deepseek/completion.rs:559:25
    |
559 |         let mut tools = ArrayVec::new();
    |                         ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/deepseek/streaming.rs:25:12
   |
25 |     crate::runtime::spawn_async(async move {
   |            ^^^^^^^ unresolved import
   |
help: a similar path exists
   |
25 |     crate::tokio::runtime::spawn_async(async move {
   |            +++++++
help: consider importing one of these modules
   |
7  + use crate::clients::deepseek::streaming::runtime::runtime;
   |
7  + use tokio::runtime;
   |
help: if you import `runtime`, refer to it directly
   |
25 -     crate::runtime::spawn_async(async move {
25 +     runtime::spawn_async(async move {
   |

error[E0425]: cannot find function `async_stream` in crate `runtime`
  --> packages/provider/src/clients/deepseek/streaming.rs:28:22
   |
28 |             runtime::async_stream::<Result<StreamingCompletionResponse, CompletionError>>(512);
   |                      ^^^^^^^^^^^^ not found in `runtime`

error[E0412]: cannot find type `CompletionError` in this scope
  --> packages/provider/src/clients/deepseek/streaming.rs:28:73
   |
28 |             runtime::async_stream::<Result<StreamingCompletionResponse, CompletionError>>(512);
   |                                                                         ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
   |
  ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
   |
40 | pub enum CompletionCoreError {
   | ---------------------------- similarly named enum `CompletionCoreError` defined here
   |
   = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0433]: failed to resolve: use of undeclared type `CompletionError`
  --> packages/provider/src/clients/deepseek/streaming.rs:32:13
   |
32 |             CompletionError::RequestError(format!("Failed to create HTTP3 client: {}", e))
   |             ^^^^^^^^^^^^^^^
   |             |
   |             use of undeclared type `CompletionError`
   |             help: an enum with a similar name exists: `CompletionCoreError`
   |
   = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0425]: cannot find function `spawn_async` in crate `runtime`
  --> packages/provider/src/clients/deepseek/streaming.rs:36:18
   |
36 |         runtime::spawn_async(async move {
   |                  ^^^^^^^^^^^ not found in `runtime`
   |
help: consider importing one of these functions
   |
7  + use crate::spawn_async;
   |
7  + use fluent_ai_domain::spawn_async;
   |
help: if you import `spawn_async`, refer to it directly
   |
36 -         runtime::spawn_async(async move {
36 +         spawn_async(async move {
   |

error[E0433]: failed to resolve: use of undeclared type `CompletionError`
  --> packages/provider/src/clients/deepseek/streaming.rs:41:45
   |
41 |                     let _ = tx.try_send(Err(CompletionError::RequestError(e.to_string())));
   |                                             ^^^^^^^^^^^^^^^
   |                                             |
   |                                             use of undeclared type `CompletionError`
   |                                             help: an enum with a similar name exists: `CompletionCoreError`
   |
   = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0412]: cannot find type `CompletionError` in this scope
  --> packages/provider/src/clients/deepseek/streaming.rs:42:37
   |
42 |                     return Ok::<(), CompletionError>(());
   |                                     ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
   |
  ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
   |
40 | pub enum CompletionCoreError {
   | ---------------------------- similarly named enum `CompletionCoreError` defined here
   |
   = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0433]: failed to resolve: use of undeclared type `CompletionError`
  --> packages/provider/src/clients/deepseek/streaming.rs:71:57
   |
71 | ...                   let _ = tx.try_send(Err(CompletionError::DeserializationError(
   |                                               ^^^^^^^^^^^^^^^
   |                                               |
   |                                               use of undeclared type `CompletionError`
   |                                               help: an enum with a similar name exists: `CompletionCoreError`
   |
   = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0433]: failed to resolve: use of undeclared type `CompletionError`
  --> packages/provider/src/clients/deepseek/streaming.rs:79:49
   |
79 |                         let _ = tx.try_send(Err(CompletionError::RequestError(e.to_string())));
   |                                                 ^^^^^^^^^^^^^^^
   |                                                 |
   |                                                 use of undeclared type `CompletionError`
   |                                                 help: an enum with a similar name exists: `CompletionCoreError`
   |
   = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0412]: cannot find type `CompletionError` in this scope
  --> packages/provider/src/clients/deepseek/streaming.rs:85:22
   |
85 |             Ok::<(), CompletionError>(())
   |                      ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
   |
  ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
   |
40 | pub enum CompletionCoreError {
   | ---------------------------- similarly named enum `CompletionCoreError` defined here
   |
   = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/gemini/client.rs:156:34
    |
156 |     ) -> Result<fluent_ai_http3::Response> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
156 -     ) -> Result<fluent_ai_http3::Response> {
156 +     ) -> Result<Response> {
    |

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/gemini/client.rs:194:34
    |
194 |     ) -> Result<fluent_ai_http3::Response> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
194 -     ) -> Result<fluent_ai_http3::Response> {
194 +     ) -> Result<Response> {
    |

error[E0609]: no field `message` on type `types::candle_chat::message::SearchChatMessage`
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/index.rs:94:31
   |
94 |         let content = message.message.content.clone();
   |                               ^^^^^^^ unknown field
   |
   = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 3 others

error[E0405]: cannot find trait `Embed` in this scope
   --> packages/provider/src/clients/gemini/client.rs:273:26
    |
273 |     pub fn embeddings<D: Embed>(&self, model: &str) -> EmbeddingBuilder<EmbeddingModel, D> {
    |                          ^^^^^ not found in this scope
    |
help: consider importing this trait through its public re-export
    |
7   + use crate::Embed;
    |

error[E0412]: cannot find type `EmbeddingBuilder` in this scope
   --> packages/provider/src/clients/gemini/client.rs:273:56
    |
273 |     pub fn embeddings<D: Embed>(&self, model: &str) -> EmbeddingBuilder<EmbeddingModel, D> {
    |                                                        ^^^^^^^^^^^^^^^^
    |
   ::: packages/provider/src/clients/gemini/embedding.rs:19:1
    |
19  | pub struct EmbeddingModel {
    | ------------------------- similarly named struct `EmbeddingModel` defined here
    |
help: a struct with a similar name exists
    |
273 -     pub fn embeddings<D: Embed>(&self, model: &str) -> EmbeddingBuilder<EmbeddingModel, D> {
273 +     pub fn embeddings<D: Embed>(&self, model: &str) -> EmbeddingModel<EmbeddingModel, D> {
    |
help: consider importing this struct through its public re-export
    |
7   + use crate::EmbeddingBuilder;
    |

error[E0433]: failed to resolve: use of undeclared type `EmbeddingBuilder`
   --> packages/provider/src/clients/gemini/client.rs:274:9
    |
274 |         EmbeddingBuilder::new(self.embedding_model(model))
    |         ^^^^^^^^^^^^^^^^ use of undeclared type `EmbeddingBuilder`
    |
help: a struct with a similar name exists
    |
274 -         EmbeddingBuilder::new(self.embedding_model(model))
274 +         EmbeddingModel::new(self.embedding_model(model))
    |
help: consider importing this struct through its public re-export
    |
7   + use crate::EmbeddingBuilder;
    |

error[E0412]: cannot find type `Document` in module `completion`
   --> packages/provider/src/clients/gemini/client.rs:376:32
    |
376 |     documents: Vec<completion::Document>,
    |                                ^^^^^^^^ not found in `completion`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::Document;
    |
7   + use fluent_ai_domain::Document;
    |
7   + use yyaml::parser::Document;
    |
help: if you import `Document`, refer to it directly
    |
376 -     documents: Vec<completion::Document>,
376 +     documents: Vec<Document>,
    |

error[E0412]: cannot find type `Document` in module `completion`
   --> packages/provider/src/clients/gemini/client.rs:476:54
    |
476 |     pub fn documents(mut self, docs: Vec<completion::Document>) -> Self {
    |                                                      ^^^^^^^^ not found in `completion`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::Document;
    |
7   + use fluent_ai_domain::Document;
    |
7   + use yyaml::parser::Document;
    |
help: if you import `Document`, refer to it directly
    |
476 -     pub fn documents(mut self, docs: Vec<completion::Document>) -> Self {
476 +     pub fn documents(mut self, docs: Vec<Document>) -> Self {
    |

error[E0412]: cannot find type `PromptError` in this scope
   --> packages/provider/src/clients/gemini/client.rs:526:58
    |
526 |     fn build_request(&self) -> Result<CompletionRequest, PromptError> {
    |                                                          ^^^^^^^^^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
524 | impl<'a, PromptError> GeminiCompletionBuilder<'a, HasPrompt> {
    |        +++++++++++++

error[E0412]: cannot find type `CompletionResponse` in module `super::completion`
   --> packages/provider/src/clients/gemini/client.rs:592:63
    |
592 |             completion::CompletionResponse<super::completion::CompletionResponse>,
    |                                                               ^^^^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/request.rs:20:1
    |
20  | pub struct CompletionRequest {
    | ---------------------------- similarly named struct `CompletionRequest` defined here
    |
note: struct `crate::clients::ollama::completion::CompletionResponse` exists but is inaccessible
   --> packages/provider/src/clients/ollama/completion.rs:51:1
    |
51  | pub struct CompletionResponse {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: a struct with a similar name exists
    |
592 -             completion::CompletionResponse<super::completion::CompletionResponse>,
592 +             completion::CompletionResponse<super::completion::CompletionRequest>,
    |
help: consider importing one of these items
    |
7   + use crate::CompletionResponse;
    |
7   + use crate::clients::gemini::client::completion::CompletionResponse;
    |
7   + use crate::clients::mistral::completion::CompletionResponse;
    |
7   + use crate::clients::openrouter::completion::CompletionResponse;
    |
      and 5 other candidates
help: if you import `CompletionResponse`, refer to it directly
    |
592 -             completion::CompletionResponse<super::completion::CompletionResponse>,
592 +             completion::CompletionResponse<CompletionResponse>,
    |

error[E0412]: cannot find type `CompletionError` in this scope
   --> packages/provider/src/clients/gemini/client.rs:593:13
    |
593 |             CompletionError,
    |             ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
    |
40  | pub enum CompletionCoreError {
    | ---------------------------- similarly named enum `CompletionCoreError` defined here
    |
    = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0599]: no method named `clone` found for struct `ConsistentCounter` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/index.rs:100:48
    |
100 |         let index_counter = self.index_counter.clone();
    |                                                ^^^^^ method not found in `ConsistentCounter`

error[E0412]: cannot find type `CompletionError` in this scope
   --> packages/provider/src/clients/gemini/client.rs:622:13
    |
622 |             CompletionError,
    |             ^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `CompletionCoreError`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/candle.rs:40:1
    |
40  | pub enum CompletionCoreError {
    | ---------------------------- similarly named enum `CompletionCoreError` defined here
    |
    = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0282]: type annotations needed for `Arc<_, _>`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/index.rs:111:21
    |
111 |                 let term = Arc::from(token.as_str());
    |                     ^^^^
...
121 |                 (*term_index).insert(term.clone(), vec![entry]);
    |                                           ----- type must be known at this point
    |
help: consider giving `term` an explicit type, where the type for type parameter `T` is specified
    |
111 |                 let term: Arc<T, A> = Arc::from(token.as_str());
    |                         +++++++++++

error[E0404]: expected trait, found struct `Prompt`
   --> packages/provider/src/clients/gemini/client.rs:647:10
    |
647 | impl<'a> Prompt for GeminiCompletionBuilder<'a, NeedsPrompt> {
    |          ^^^^^^ not a trait

error[E0412]: cannot find type `PromptError` in this scope
   --> packages/provider/src/clients/gemini/client.rs:651:77
    |
651 |     fn prompt(self, prompt: impl ToString) -> Result<Self::PromptedBuilder, PromptError> {
    |                                                                             ^^^^^^^^^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
647 | impl<'a, PromptError> Prompt for GeminiCompletionBuilder<'a, NeedsPrompt> {
    |        +++++++++++++

error[E0412]: cannot find type `CompletionModel` in this scope
   --> packages/provider/src/clients/gemini/completion.rs:66:6
    |
66  | impl CompletionModel {
    |      ^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:114:1
    |
114 | pub enum CompletionChunk {
    | ------------------------ similarly named enum `CompletionChunk` defined here
    |
help: an enum with a similar name exists
    |
66  - impl CompletionModel {
66  + impl CompletionChunk {
    |
help: consider importing one of these items
    |
30  + use crate::CompletionModel;
    |
30  + use crate::clients::groq::CompletionModel;
    |
30  + use crate::clients::mistral::CompletionModel;
    |
30  + use crate::clients::xai::CompletionModel;
    |
      and 1 other candidate

error[E0412]: cannot find type `CompletionModel` in this scope
   --> packages/provider/src/clients/gemini/completion.rs:74:38
    |
74  | impl completion::CompletionModel for CompletionModel {
    |                                      ^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:114:1
    |
114 | pub enum CompletionChunk {
    | ------------------------ similarly named enum `CompletionChunk` defined here
    |
help: an enum with a similar name exists
    |
74  - impl completion::CompletionModel for CompletionModel {
74  + impl completion::CompletionModel for CompletionChunk {
    |
help: consider importing one of these items
    |
30  + use crate::CompletionModel;
    |
30  + use crate::clients::groq::CompletionModel;
    |
30  + use crate::clients::mistral::CompletionModel;
    |
30  + use crate::clients::xai::CompletionModel;
    |
      and 1 other candidate

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/gemini/completion.rs:90:24
   |
90 |                 crate::runtime::spawn_async(async move {
   |                        ^^^^^^^ unresolved import
   |
help: a similar path exists
   |
90 |                 crate::tokio::runtime::spawn_async(async move {
   |                        +++++++
help: consider importing this module
   |
30 + use tokio::runtime;
   |
help: if you import `runtime`, refer to it directly
   |
90 -                 crate::runtime::spawn_async(async move {
90 +                 runtime::spawn_async(async move {
   |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/gemini/completion.rs:156:16
    |
156 |         crate::runtime::spawn_async(async move {
    |                ^^^^^^^ unresolved import
    |
help: a similar path exists
    |
156 |         crate::tokio::runtime::spawn_async(async move {
    |                +++++++
help: consider importing this module
    |
30  + use tokio::runtime;
    |
help: if you import `runtime`, refer to it directly
    |
156 -         crate::runtime::spawn_async(async move {
156 +         runtime::spawn_async(async move {
    |

error[E0422]: cannot find struct, variant or union type `CompletionModel` in this scope
   --> packages/provider/src/clients/gemini/completion.rs:157:26
    |
157 |             let result = CompletionModel { client, model }
    |                          ^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
30  + use crate::clients::groq::CompletionModel;
    |
30  + use crate::clients::mistral::CompletionModel;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/gemini/completion.rs:187:19
    |
187 |     chat_history: ArrayVec<Message, MAX_MESSAGES>,
    |                   ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
30  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/gemini/completion.rs:188:16
    |
188 |     documents: ArrayVec<Document, MAX_DOCUMENTS>,
    |                ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
30  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/gemini/completion.rs:189:12
    |
189 |     tools: ArrayVec<ToolDefinition, MAX_TOOLS>,
    |            ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
30  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/gemini/completion.rs:219:27
    |
219 |             chat_history: ArrayVec::new(),
    |                           ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
30  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/gemini/completion.rs:220:24
    |
220 |             documents: ArrayVec::new(),
    |                        ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
30  + use arrayvec::ArrayVec;
    |

error[E0599]: no method named `clone` found for struct `ConsistentCounter` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/index.rs:162:50
    |
162 |         let search_counter = self.search_counter.clone();
    |                                                  ^^^^^ method not found in `ConsistentCounter`

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/gemini/completion.rs:221:20
    |
221 |             tools: ArrayVec::new(),
    |                    ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
30  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `completion`
   --> packages/provider/src/clients/gemini/completion.rs:793:53
    |
793 |                     Part::Text(text) => completion::AssistantContent::text(text),
    |                                                     ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `completion`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
    |
30  + use crate::clients::mistral::completion::AssistantContent;
    |
30  + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
793 -                     Part::Text(text) => completion::AssistantContent::text(text),
793 +                     Part::Text(text) => AssistantContent::text(text),
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `completion`
   --> packages/provider/src/clients/gemini/completion.rs:794:70
    |
794 |                     Part::FunctionCall(function_call) => completion::AssistantContent::tool_call(
    |                                                                      ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `completion`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
    |
30  + use crate::clients::mistral::completion::AssistantContent;
    |
30  + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
794 -                     Part::FunctionCall(function_call) => completion::AssistantContent::tool_call(
794 +                     Part::FunctionCall(function_call) => AssistantContent::tool_call(
    |

error[E0433]: failed to resolve: could not find `UserContent` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:906:58
    |
906 | ...                   Part::Text(text) => message::UserContent::text(text),
    |                                                    ^^^^^^^^^^^ could not find `UserContent` in `message`
    |
help: consider importing this enum
    |
821 +     use crate::clients::mistral::completion::UserContent;
    |
help: if you import `UserContent`, refer to it directly
    |
906 -                             Part::Text(text) => message::UserContent::text(text),
906 +                             Part::Text(text) => UserContent::text(text),
    |

error[E0433]: failed to resolve: could not find `UserContent` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:913:50
    |
913 | ...                   message::UserContent::image(
    |                                ^^^^^^^^^^^ could not find `UserContent` in `message`
    |
help: consider importing this enum
    |
821 +     use crate::clients::mistral::completion::UserContent;
    |
help: if you import `UserContent`, refer to it directly
    |
913 -                                         message::UserContent::image(
913 +                                         UserContent::image(
    |

error[E0433]: failed to resolve: could not find `ContentFormat` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:915:59
    |
915 | ...                   Some(message::ContentFormat::default()),
    |                                     ^^^^^^^^^^^^^ could not find `ContentFormat` in `message`
    |
help: consider importing one of these enums
    |
821 +     use crate::domain::ContentFormat;
    |
821 +     use crate::domain::image::ContentFormat;
    |
821 +     use crate::domain::voice::audio::ContentFormat;
    |
821 +     use fluent_ai_domain::ContentFormat;
    |
      and 2 other candidates
help: if you import `ContentFormat`, refer to it directly
    |
915 -                                             Some(message::ContentFormat::default()),
915 +                                             Some(ContentFormat::default()),
    |

error[E0433]: failed to resolve: could not find `ImageDetail` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:917:59
    |
917 | ...                   Some(message::ImageDetail::default()),
    |                                     ^^^^^^^^^^^ could not find `ImageDetail` in `message`
    |
note: enum `crate::openai::vision::ImageDetail` exists but is inaccessible
   --> packages/provider/src/clients/openai/vision.rs:15:1
    |
15  | pub enum ImageDetail {
    | ^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these enums
    |
821 +     use crate::domain::image::ImageDetail;
    |
821 +     use fluent_ai_domain::image::ImageDetail;
    |
help: if you import `ImageDetail`, refer to it directly
    |
917 -                                             Some(message::ImageDetail::default()),
917 +                                             Some(ImageDetail::default()),
    |

error[E0433]: failed to resolve: could not find `UserContent` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:921:50
    |
921 | ...                   message::UserContent::document(
    |                                ^^^^^^^^^^^ could not find `UserContent` in `message`
    |
help: consider importing this enum
    |
821 +     use crate::clients::mistral::completion::UserContent;
    |
help: if you import `UserContent`, refer to it directly
    |
921 -                                         message::UserContent::document(
921 +                                         UserContent::document(
    |

error[E0599]: no method named `clone` found for struct `ConsistentCounter` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/index.rs:288:50
    |
288 |         let search_counter = self.search_counter.clone();
    |                                                  ^^^^^ method not found in `ConsistentCounter`

error[E0433]: failed to resolve: could not find `ContentFormat` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:923:59
    |
923 | ...                   Some(message::ContentFormat::default()),
    |                                     ^^^^^^^^^^^^^ could not find `ContentFormat` in `message`
    |
help: consider importing one of these enums
    |
821 +     use crate::domain::ContentFormat;
    |
821 +     use crate::domain::image::ContentFormat;
    |
821 +     use crate::domain::voice::audio::ContentFormat;
    |
821 +     use fluent_ai_domain::ContentFormat;
    |
      and 2 other candidates
help: if you import `ContentFormat`, refer to it directly
    |
923 -                                             Some(message::ContentFormat::default()),
923 +                                             Some(ContentFormat::default()),
    |

error[E0433]: failed to resolve: could not find `UserContent` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:928:50
    |
928 | ...                   message::UserContent::audio(
    |                                ^^^^^^^^^^^ could not find `UserContent` in `message`
    |
help: consider importing this enum
    |
821 +     use crate::clients::mistral::completion::UserContent;
    |
help: if you import `UserContent`, refer to it directly
    |
928 -                                         message::UserContent::audio(
928 +                                         UserContent::audio(
    |

error[E0433]: failed to resolve: could not find `ContentFormat` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:930:59
    |
930 | ...                   Some(message::ContentFormat::default()),
    |                                     ^^^^^^^^^^^^^ could not find `ContentFormat` in `message`
    |
help: consider importing one of these enums
    |
821 +     use crate::domain::ContentFormat;
    |
821 +     use crate::domain::image::ContentFormat;
    |
821 +     use crate::domain::voice::audio::ContentFormat;
    |
821 +     use fluent_ai_domain::ContentFormat;
    |
      and 2 other candidates
help: if you import `ContentFormat`, refer to it directly
    |
930 -                                             Some(message::ContentFormat::default()),
930 +                                             Some(ContentFormat::default()),
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:951:58
    |
951 | ...                   Part::Text(text) => message::AssistantContent::text(text),
    |                                                    ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
    |
821 +     use crate::clients::mistral::completion::AssistantContent;
    |
821 +     use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
951 -                             Part::Text(text) => message::AssistantContent::text(text),
951 +                             Part::Text(text) => AssistantContent::text(text),
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/gemini/completion.rs:953:42
    |
953 | ...                   message::AssistantContent::ToolCall(function_call.into())
    |                                ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
    |
821 +     use crate::clients::mistral::completion::AssistantContent;
    |
821 +     use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
953 -                                 message::AssistantContent::ToolCall(function_call.into())
953 +                                 AssistantContent::ToolCall(function_call.into())
    |

error[E0412]: cannot find type `ExecutableCode` in this scope
   --> packages/provider/src/clients/gemini/completion.rs:982:24
    |
982 |         ExecutableCode(ExecutableCode),
    |                        ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
821 +     use crate::clients::gemini::gemini_api_types::ExecutableCode;
    |
821 +     use crate::clients::gemini::gemini_types::ExecutableCode;
    |

error[E0412]: cannot find type `CodeExecutionResult` in this scope
    --> packages/provider/src/clients/gemini/completion.rs:983:29
     |
983  |         CodeExecutionResult(CodeExecutionResult)}
     |                             ^^^^^^^^^^^^^^^^^^^
...
1530 |     pub struct CodeExecution {}
     |     ------------------------ similarly named struct `CodeExecution` defined here
     |
help: a struct with a similar name exists
     |
983  -         CodeExecutionResult(CodeExecutionResult)}
983  +         CodeExecutionResult(CodeExecution)}
     |
help: consider importing one of these items
     |
821  +     use crate::clients::gemini::gemini_api_types::CodeExecutionResult;
     |
821  +     use crate::clients::gemini::gemini_types::CodeExecutionResult;
     |

error[E0412]: cannot find type `UserContent` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1005:27
     |
1005 |     impl TryFrom<message::UserContent> for Part {
     |                           ^^^^^^^^^^^ not found in `message`
     |
help: consider importing this enum
     |
821  +     use crate::clients::mistral::completion::UserContent;
     |
help: if you import `UserContent`, refer to it directly
     |
1005 -     impl TryFrom<message::UserContent> for Part {
1005 +     impl TryFrom<UserContent> for Part {
     |

error[E0412]: cannot find type `UserContent` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1008:39
     |
1008 |         fn try_from(content: message::UserContent) -> Result<Self, Self::Error> {
     |                                       ^^^^^^^^^^^ not found in `message`
     |
help: consider importing this enum
     |
821  +     use crate::clients::mistral::completion::UserContent;
     |
help: if you import `UserContent`, refer to it directly
     |
1008 -         fn try_from(content: message::UserContent) -> Result<Self, Self::Error> {
1008 +         fn try_from(content: UserContent) -> Result<Self, Self::Error> {
     |

error[E0433]: failed to resolve: could not find `UserContent` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1010:26
     |
1010 |                 message::UserContent::Text(message::Text { text }) => Ok(Self::Text(text)),
     |                          ^^^^^^^^^^^ could not find `UserContent` in `message`
     |
help: consider importing this enum
     |
821  +     use crate::clients::mistral::completion::UserContent;
     |
help: if you import `UserContent`, refer to it directly
     |
1010 -                 message::UserContent::Text(message::Text { text }) => Ok(Self::Text(text)),
1010 +                 UserContent::Text(message::Text { text }) => Ok(Self::Text(text)),
     |

error[E0422]: cannot find struct, variant or union type `Text` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1010:53
     |
1010 |                 message::UserContent::Text(message::Text { text }) => Ok(Self::Text(text)),
     |                                                     ^^^^ not found in `message`
     |
note: these variants exist but are inaccessible
    --> packages/provider/src/clients/huggingface/streaming.rs:26:5
     |
26   |     Text { text: String }}
     |     ^^^^ `crate::clients::huggingface::streaming::AssistantContent::Text`: not accessible
     |
    ::: packages/provider/src/clients/openai/messages.rs:34:5
     |
34   |     Text(String),
     |     ^^^^^^^^^^^^ `crate::openai::messages::OpenAIContent::Text`: not accessible
help: consider importing one of these variants
     |
821  +     use crate::clients::anthropic::AnthropicContent::Text;
     |
821  +     use crate::clients::anthropic::AnthropicContentBlock::Text;
     |
821  +     use crate::clients::anthropic::AnthropicResponseContent::Text;
     |
821  +     use crate::clients::anthropic::AnthropicSystemMessage::Text;
     |
       and 26 other candidates
help: if you import `Text`, refer to it directly
     |
1010 -                 message::UserContent::Text(message::Text { text }) => Ok(Self::Text(text)),
1010 +                 message::UserContent::Text(Text { text }) => Ok(Self::Text(text)),
     |

error[E0433]: failed to resolve: could not find `UserContent` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1011:26
     |
1011 |                 message::UserContent::ToolResult(message::ToolResult { id, content }) => {
     |                          ^^^^^^^^^^^ could not find `UserContent` in `message`
     |
help: consider importing this enum
     |
821  +     use crate::clients::mistral::completion::UserContent;
     |
help: if you import `UserContent`, refer to it directly
     |
1011 -                 message::UserContent::ToolResult(message::ToolResult { id, content }) => {
1011 +                 UserContent::ToolResult(message::ToolResult { id, content }) => {
     |

error[E0422]: cannot find struct, variant or union type `ToolResult` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1011:59
     |
1011 |                 message::UserContent::ToolResult(message::ToolResult { id, content }) => {
     |                                                           ^^^^^^^^^^ not found in `message`
     |
note: variant `crate::clients::ollama::completion::ProviderMessage::ToolResult` exists but is inaccessible
    --> packages/provider/src/clients/ollama/completion.rs:436:5
     |
436  |     ToolResult { name: String, content: String }}
     |     ^^^^^^^^^^ not accessible
help: consider importing one of these items
     |
821  +     use crate::clients::anthropic::AnthropicContentBlock::ToolResult;
     |
821  +     use crate::clients::anthropic::ContentBlock::ToolResult;
     |
821  +     use crate::clients::anthropic::ToolResult;
     |
help: if you import `ToolResult`, refer to it directly
     |
1011 -                 message::UserContent::ToolResult(message::ToolResult { id, content }) => {
1011 +                 message::UserContent::ToolResult(ToolResult { id, content }) => {
     |

error[E0433]: failed to resolve: could not find `ToolResultContent` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1013:34
     |
1013 |                         message::ToolResultContent::Text(text) => text.text,
     |                                  ^^^^^^^^^^^^^^^^^ could not find `ToolResultContent` in `message`
     |
help: consider importing this struct
     |
821  +     use crate::clients::mistral::completion::ToolResultContent;
     |
help: if you import `ToolResultContent`, refer to it directly
     |
1013 -                         message::ToolResultContent::Text(text) => text.text,
1013 +                         ToolResultContent::Text(text) => text.text,
     |

error[E0433]: failed to resolve: could not find `ToolResultContent` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1014:34
     |
1014 |                         message::ToolResultContent::Image(_) => {
     |                                  ^^^^^^^^^^^^^^^^^ could not find `ToolResultContent` in `message`
     |
help: consider importing this struct
     |
821  +     use crate::clients::mistral::completion::ToolResultContent;
     |
help: if you import `ToolResultContent`, refer to it directly
     |
1014 -                         message::ToolResultContent::Image(_) => {
1014 +                         ToolResultContent::Image(_) => {
     |

error[E0433]: failed to resolve: could not find `UserContent` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1028:26
     |
1028 |                 message::UserContent::Image(message::Image {
     |                          ^^^^^^^^^^^ could not find `UserContent` in `message`
     |
help: consider importing this enum
     |
821  +     use crate::clients::mistral::completion::UserContent;
     |
help: if you import `UserContent`, refer to it directly
     |
1028 -                 message::UserContent::Image(message::Image {
1028 +                 UserContent::Image(message::Image {
     |

error[E0422]: cannot find struct, variant or union type `Image` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1028:54
     |
1028 |                 message::UserContent::Image(message::Image {
     |                                                      ^^^^^ not found in `message`
     |
help: consider importing one of these items
     |
821  +     use crate::clients::anthropic::AnthropicContentBlock::Image;
     |
821  +     use crate::clients::anthropic::ContentBlock::Image;
     |
821  +     use crate::domain::image::Image;
     |
821  +     use crate::domain::memory::MemoryContent::Image;
     |
       and 2 other candidates
help: if you import `Image`, refer to it directly
     |
1028 -                 message::UserContent::Image(message::Image {
1028 +                 message::UserContent::Image(Image {
     |

error[E0433]: failed to resolve: could not find `ImageMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1032:34
     |
1032 |                         message::ImageMediaType::JPEG
     |                                  ^^^^^^^^^^^^^^ could not find `ImageMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::image::ImageMediaType;
     |
821  +     use fluent_ai_domain::image::ImageMediaType;
     |
help: if you import `ImageMediaType`, refer to it directly
     |
1032 -                         message::ImageMediaType::JPEG
1032 +                         ImageMediaType::JPEG
     |

error[E0433]: failed to resolve: could not find `ImageMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1033:36
     |
1033 |                         | message::ImageMediaType::PNG
     |                                    ^^^^^^^^^^^^^^ could not find `ImageMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::image::ImageMediaType;
     |
821  +     use fluent_ai_domain::image::ImageMediaType;
     |
help: if you import `ImageMediaType`, refer to it directly
     |
1033 -                         | message::ImageMediaType::PNG
1033 +                         | ImageMediaType::PNG
     |

error[E0433]: failed to resolve: could not find `ImageMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1034:36
     |
1034 |                         | message::ImageMediaType::WEBP
     |                                    ^^^^^^^^^^^^^^ could not find `ImageMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::image::ImageMediaType;
     |
821  +     use fluent_ai_domain::image::ImageMediaType;
     |
help: if you import `ImageMediaType`, refer to it directly
     |
1034 -                         | message::ImageMediaType::WEBP
1034 +                         | ImageMediaType::WEBP
     |

error[E0433]: failed to resolve: could not find `ImageMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1035:36
     |
1035 |                         | message::ImageMediaType::HEIC
     |                                    ^^^^^^^^^^^^^^ could not find `ImageMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::image::ImageMediaType;
     |
821  +     use fluent_ai_domain::image::ImageMediaType;
     |
help: if you import `ImageMediaType`, refer to it directly
     |
1035 -                         | message::ImageMediaType::HEIC
1035 +                         | ImageMediaType::HEIC
     |

error[E0433]: failed to resolve: could not find `ImageMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1036:36
     |
1036 |                         | message::ImageMediaType::HEIF => Ok(Self::InlineData(Blob {
     |                                    ^^^^^^^^^^^^^^ could not find `ImageMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::image::ImageMediaType;
     |
821  +     use fluent_ai_domain::image::ImageMediaType;
     |
help: if you import `ImageMediaType`, refer to it directly
     |
1036 -                         | message::ImageMediaType::HEIF => Ok(Self::InlineData(Blob {
1036 +                         | ImageMediaType::HEIF => Ok(Self::InlineData(Blob {
     |

error[E0609]: no field `message` on type `&types::candle_chat::message::SearchChatMessage`
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/export/formats.rs:35:86
   |
35 |             json_obj.insert("content".to_string(), serde_json::Value::String(message.message.content.to_string()));
   |                                                                                      ^^^^^^^ unknown field
   |
   = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 3 others

error[E0609]: no field `message` on type `&types::candle_chat::message::SearchChatMessage`
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/export/formats.rs:36:83
   |
36 |             json_obj.insert("role".to_string(), serde_json::Value::String(message.message.role.as_str()));
   |                                                                                   ^^^^^^^ unknown field
   |
   = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 3 others

error[E0609]: no field `message` on type `&types::candle_chat::message::SearchChatMessage`
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/export/formats.rs:81:43
   |
81 |             let content_escaped = message.message.content.replace("\"", "\"\"");
   |                                           ^^^^^^^ unknown field
   |
   = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 3 others

error[E0609]: no field `message` on type `&types::candle_chat::message::SearchChatMessage`
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/export/formats.rs:82:36
   |
82 |             let role_str = message.message.role.as_str();
   |                                    ^^^^^^^ unknown field
   |
   = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 3 others

error[E0609]: no field `message` on type `&types::candle_chat::message::SearchChatMessage`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/export/formats.rs:134:36
    |
134 |             let role_str = message.message.role.as_str();
    |                                    ^^^^^^^ unknown field
    |
    = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 3 others

error[E0609]: no field `message` on type `&types::candle_chat::message::SearchChatMessage`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/export/formats.rs:136:42
    |
136 |             md_content.push_str(&message.message.content);
    |                                          ^^^^^^^ unknown field
    |
    = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 3 others

error[E0433]: failed to resolve: could not find `UserContent` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1045:26
     |
1045 |                 message::UserContent::Document(message::Document {
     |                          ^^^^^^^^^^^ could not find `UserContent` in `message`
     |
help: consider importing this enum
     |
821  +     use crate::clients::mistral::completion::UserContent;
     |
help: if you import `UserContent`, refer to it directly
     |
1045 -                 message::UserContent::Document(message::Document {
1045 +                 UserContent::Document(message::Document {
     |

error[E0422]: cannot find struct, variant or union type `Document` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1045:57
     |
1045 |                 message::UserContent::Document(message::Document {
     |                                                         ^^^^^^^^ not found in `message`
     |
help: consider importing one of these items
     |
821  +     use crate::clients::anthropic::ContentBlock::Document;
     |
821  +     use crate::clients::gemini::completion::Document;
     |
821  +     use fluent_ai_domain::Document;
     |
821  +     use yyaml::parser::Document;
     |
       and 4 other candidates
help: if you import `Document`, refer to it directly
     |
1045 -                 message::UserContent::Document(message::Document {
1045 +                 message::UserContent::Document(Document {
     |

error[E0277]: the trait bound `ConsistentCounter: Clone` is not satisfied
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/export/exporter.rs:19:5
   |
16 | #[derive(Clone)]
   |          ----- in this derive macro expansion
...
19 |     stats_counter: ConsistentCounter,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `ConsistentCounter`

error[E0433]: failed to resolve: could not find `DocumentMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1049:34
     |
1049 |                         message::DocumentMediaType::PDF
     |                                  ^^^^^^^^^^^^^^^^^ could not find `DocumentMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::DocumentMediaType;
     |
821  +     use fluent_ai_domain::DocumentMediaType;
     |
help: if you import `DocumentMediaType`, refer to it directly
     |
1049 -                         message::DocumentMediaType::PDF
1049 +                         DocumentMediaType::PDF
     |

error[E0277]: the trait bound `AtomicUsize: Clone` is not satisfied
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/export/exporter.rs:21:5
   |
16 | #[derive(Clone)]
   |          ----- in this derive macro expansion
...
21 |     active_exports: AtomicUsize,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `AtomicUsize`

error[E0277]: the trait bound `AtomicUsize: Clone` is not satisfied
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/export/exporter.rs:23:5
   |
16 | #[derive(Clone)]
   |          ----- in this derive macro expansion
...
23 |     export_id_counter: AtomicUsize}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `AtomicUsize`

error[E0433]: failed to resolve: could not find `DocumentMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1050:36
     |
1050 |                         | message::DocumentMediaType::TXT
     |                                    ^^^^^^^^^^^^^^^^^ could not find `DocumentMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::DocumentMediaType;
     |
821  +     use fluent_ai_domain::DocumentMediaType;
     |
help: if you import `DocumentMediaType`, refer to it directly
     |
1050 -                         | message::DocumentMediaType::TXT
1050 +                         | DocumentMediaType::TXT
     |

error[E0433]: failed to resolve: could not find `DocumentMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1051:36
     |
1051 |                         | message::DocumentMediaType::RTF
     |                                    ^^^^^^^^^^^^^^^^^ could not find `DocumentMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::DocumentMediaType;
     |
821  +     use fluent_ai_domain::DocumentMediaType;
     |
help: if you import `DocumentMediaType`, refer to it directly
     |
1051 -                         | message::DocumentMediaType::RTF
1051 +                         | DocumentMediaType::RTF
     |

error[E0433]: failed to resolve: could not find `DocumentMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1052:36
     |
1052 |                         | message::DocumentMediaType::HTML
     |                                    ^^^^^^^^^^^^^^^^^ could not find `DocumentMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::DocumentMediaType;
     |
821  +     use fluent_ai_domain::DocumentMediaType;
     |
help: if you import `DocumentMediaType`, refer to it directly
     |
1052 -                         | message::DocumentMediaType::HTML
1052 +                         | DocumentMediaType::HTML
     |

error[E0433]: failed to resolve: could not find `DocumentMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1053:36
     |
1053 |                         | message::DocumentMediaType::CSS
     |                                    ^^^^^^^^^^^^^^^^^ could not find `DocumentMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::DocumentMediaType;
     |
821  +     use fluent_ai_domain::DocumentMediaType;
     |
help: if you import `DocumentMediaType`, refer to it directly
     |
1053 -                         | message::DocumentMediaType::CSS
1053 +                         | DocumentMediaType::CSS
     |

error[E0433]: failed to resolve: could not find `DocumentMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1054:36
     |
1054 |                         | message::DocumentMediaType::MARKDOWN
     |                                    ^^^^^^^^^^^^^^^^^ could not find `DocumentMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::DocumentMediaType;
     |
821  +     use fluent_ai_domain::DocumentMediaType;
     |
help: if you import `DocumentMediaType`, refer to it directly
     |
1054 -                         | message::DocumentMediaType::MARKDOWN
1054 +                         | DocumentMediaType::MARKDOWN
     |

error[E0433]: failed to resolve: could not find `DocumentMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1055:36
     |
1055 |                         | message::DocumentMediaType::CSV
     |                                    ^^^^^^^^^^^^^^^^^ could not find `DocumentMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::DocumentMediaType;
     |
821  +     use fluent_ai_domain::DocumentMediaType;
     |
help: if you import `DocumentMediaType`, refer to it directly
     |
1055 -                         | message::DocumentMediaType::CSV
1055 +                         | DocumentMediaType::CSV
     |

error[E0433]: failed to resolve: could not find `DocumentMediaType` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1056:36
     |
1056 |                         | message::DocumentMediaType::XML => Ok(Self::InlineData(Blob {
     |                                    ^^^^^^^^^^^^^^^^^ could not find `DocumentMediaType` in `message`
     |
help: consider importing one of these enums
     |
821  +     use crate::domain::DocumentMediaType;
     |
821  +     use fluent_ai_domain::DocumentMediaType;
     |
help: if you import `DocumentMediaType`, refer to it directly
     |
1056 -                         | message::DocumentMediaType::XML => Ok(Self::InlineData(Blob {
1056 +                         | DocumentMediaType::XML => Ok(Self::InlineData(Blob {
     |

error[E0433]: failed to resolve: could not find `UserContent` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1065:26
     |
1065 |                 message::UserContent::Audio(message::Audio {
     |                          ^^^^^^^^^^^ could not find `UserContent` in `message`
     |
help: consider importing this enum
     |
821  +     use crate::clients::mistral::completion::UserContent;
     |
help: if you import `UserContent`, refer to it directly
     |
1065 -                 message::UserContent::Audio(message::Audio {
1065 +                 UserContent::Audio(message::Audio {
     |

error[E0422]: cannot find struct, variant or union type `Audio` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1065:54
     |
1065 |                 message::UserContent::Audio(message::Audio {
     |                                                      ^^^^^ not found in `message`
     |
help: consider importing one of these items
     |
821  +     use crate::domain::Audio;
     |
821  +     use crate::domain::memory::MemoryContent::Audio;
     |
821  +     use fluent_ai_domain::Audio;
     |
821  +     use fluent_ai_domain::memory::MemoryContent::Audio;
     |
help: if you import `Audio`, refer to it directly
     |
1065 -                 message::UserContent::Audio(message::Audio {
1065 +                 message::UserContent::Audio(Audio {
     |

error[E0412]: cannot find type `AssistantContent` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1077:24
     |
1077 |     impl From<message::AssistantContent> for Part {
     |                        ^^^^^^^^^^^^^^^^ not found in `message`
     |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
    --> packages/provider/src/clients/huggingface/streaming.rs:25:1
     |
25   | enum AssistantContent {
     | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
     |
821  +     use crate::clients::mistral::completion::AssistantContent;
     |
821  +     use crate::openai::AssistantContent;
     |
help: if you import `AssistantContent`, refer to it directly
     |
1077 -     impl From<message::AssistantContent> for Part {
1077 +     impl From<AssistantContent> for Part {
     |

error[E0412]: cannot find type `AssistantContent` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1078:35
     |
1078 |         fn from(content: message::AssistantContent) -> Self {
     |                                   ^^^^^^^^^^^^^^^^ not found in `message`
     |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
    --> packages/provider/src/clients/huggingface/streaming.rs:25:1
     |
25   | enum AssistantContent {
     | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
     |
821  +     use crate::clients::mistral::completion::AssistantContent;
     |
821  +     use crate::openai::AssistantContent;
     |
help: if you import `AssistantContent`, refer to it directly
     |
1078 -         fn from(content: message::AssistantContent) -> Self {
1078 +         fn from(content: AssistantContent) -> Self {
     |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1080:26
     |
1080 |                 message::AssistantContent::Text(message::Text { text }) => text.into(),
     |                          ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
     |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
    --> packages/provider/src/clients/huggingface/streaming.rs:25:1
     |
25   | enum AssistantContent {
     | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
     |
821  +     use crate::clients::mistral::completion::AssistantContent;
     |
821  +     use crate::openai::AssistantContent;
     |
help: if you import `AssistantContent`, refer to it directly
     |
1080 -                 message::AssistantContent::Text(message::Text { text }) => text.into(),
1080 +                 AssistantContent::Text(message::Text { text }) => text.into(),
     |

error[E0599]: no method named `clone` found for struct `ConsistentCounter` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/manager.rs:70:56
   |
70 |         let operation_counter = self.operation_counter.clone();
   |                                                        ^^^^^ method not found in `ConsistentCounter`

error[E0422]: cannot find struct, variant or union type `Text` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1080:58
     |
1080 |                 message::AssistantContent::Text(message::Text { text }) => text.into(),
     |                                                          ^^^^ not found in `message`
     |
note: these variants exist but are inaccessible
    --> packages/provider/src/clients/huggingface/streaming.rs:26:5
     |
26   |     Text { text: String }}
     |     ^^^^ `crate::clients::huggingface::streaming::AssistantContent::Text`: not accessible
     |
    ::: packages/provider/src/clients/openai/messages.rs:34:5
     |
34   |     Text(String),
     |     ^^^^^^^^^^^^ `crate::openai::messages::OpenAIContent::Text`: not accessible
help: consider importing one of these variants
     |
821  +     use crate::clients::anthropic::AnthropicContent::Text;
     |
821  +     use crate::clients::anthropic::AnthropicContentBlock::Text;
     |
821  +     use crate::clients::anthropic::AnthropicResponseContent::Text;
     |
821  +     use crate::clients::anthropic::AnthropicSystemMessage::Text;
     |
       and 26 other candidates
help: if you import `Text`, refer to it directly
     |
1080 -                 message::AssistantContent::Text(message::Text { text }) => text.into(),
1080 +                 message::AssistantContent::Text(Text { text }) => text.into(),
     |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
    --> packages/provider/src/clients/gemini/completion.rs:1081:26
     |
1081 |                 message::AssistantContent::ToolCall(tool_call) => tool_call.into()}
     |                          ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
     |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
    --> packages/provider/src/clients/huggingface/streaming.rs:25:1
     |
25   | enum AssistantContent {
     | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
     |
821  +     use crate::clients::mistral::completion::AssistantContent;
     |
821  +     use crate::openai::AssistantContent;
     |
help: if you import `AssistantContent`, refer to it directly
     |
1081 -                 message::AssistantContent::ToolCall(tool_call) => tool_call.into()}
1081 +                 AssistantContent::ToolCall(tool_call) => tool_call.into()}
     |

error[E0412]: cannot find type `ToolCall` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1085:24
     |
1085 |     impl From<message::ToolCall> for Part {
     |                        ^^^^^^^^ not found in `message`
     |
note: struct `crate::clients::ollama::completion::ToolCall` exists but is inaccessible
    --> packages/provider/src/clients/ollama/completion.rs:391:1
     |
391  | pub struct ToolCall {
     | ^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs
     |
821  +     use crate::ToolCall;
     |
821  +     use crate::clients::anthropic::ToolCall;
     |
821  +     use crate::clients::mistral::completion::ToolCall;
     |
821  +     use crate::domain::http::ToolCall;
     |
       and 1 other candidate
help: if you import `ToolCall`, refer to it directly
     |
1085 -     impl From<message::ToolCall> for Part {
1085 +     impl From<ToolCall> for Part {
     |

error[E0412]: cannot find type `ToolCall` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1086:37
     |
1086 |         fn from(tool_call: message::ToolCall) -> Self {
     |                                     ^^^^^^^^ not found in `message`
     |
note: struct `crate::clients::ollama::completion::ToolCall` exists but is inaccessible
    --> packages/provider/src/clients/ollama/completion.rs:391:1
     |
391  | pub struct ToolCall {
     | ^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs
     |
821  +     use crate::ToolCall;
     |
821  +     use crate::clients::anthropic::ToolCall;
     |
821  +     use crate::clients::mistral::completion::ToolCall;
     |
821  +     use crate::domain::http::ToolCall;
     |
       and 1 other candidate
help: if you import `ToolCall`, refer to it directly
     |
1086 -         fn from(tool_call: message::ToolCall) -> Self {
1086 +         fn from(tool_call: ToolCall) -> Self {
     |

error[E0412]: cannot find type `ToolCall` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1114:42
     |
1114 |     impl From<FunctionCall> for message::ToolCall {
     |                                          ^^^^^^^^ not found in `message`
     |
note: struct `crate::clients::ollama::completion::ToolCall` exists but is inaccessible
    --> packages/provider/src/clients/ollama/completion.rs:391:1
     |
391  | pub struct ToolCall {
     | ^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs
     |
821  +     use crate::ToolCall;
     |
821  +     use crate::clients::anthropic::ToolCall;
     |
821  +     use crate::clients::mistral::completion::ToolCall;
     |
821  +     use crate::domain::http::ToolCall;
     |
       and 1 other candidate
help: if you import `ToolCall`, refer to it directly
     |
1114 -     impl From<FunctionCall> for message::ToolCall {
1114 +     impl From<FunctionCall> for ToolCall {
     |

error[E0422]: cannot find struct, variant or union type `ToolFunction` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1118:36
     |
1118 |                 function: message::ToolFunction {
     |                                    ^^^^^^^^^^^^ not found in `message`

error[E0412]: cannot find type `ToolCall` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1124:24
     |
1124 |     impl From<message::ToolCall> for FunctionCall {
     |                        ^^^^^^^^ not found in `message`
     |
note: struct `crate::clients::ollama::completion::ToolCall` exists but is inaccessible
    --> packages/provider/src/clients/ollama/completion.rs:391:1
     |
391  | pub struct ToolCall {
     | ^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs
     |
821  +     use crate::ToolCall;
     |
821  +     use crate::clients::anthropic::ToolCall;
     |
821  +     use crate::clients::mistral::completion::ToolCall;
     |
821  +     use crate::domain::http::ToolCall;
     |
       and 1 other candidate
help: if you import `ToolCall`, refer to it directly
     |
1124 -     impl From<message::ToolCall> for FunctionCall {
1124 +     impl From<ToolCall> for FunctionCall {
     |

error[E0599]: no method named `clone` found for struct `ConsistentCounter` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/manager.rs:82:56
   |
82 |         let operation_counter = self.operation_counter.clone();
   |                                                        ^^^^^ method not found in `ConsistentCounter`

error[E0560]: struct `types::candle_chat::message::SearchChatMessage` has no field named `message`
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/manager.rs:90:21
   |
90 |                     message: crate::types::candle_chat::chat::message::Message {
   |                     ^^^^^^^ `types::candle_chat::message::SearchChatMessage` does not have this field
   |
   = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 2 others

error[E0412]: cannot find type `ToolCall` in module `message`
    --> packages/provider/src/clients/gemini/completion.rs:1125:37
     |
1125 |         fn from(tool_call: message::ToolCall) -> Self {
     |                                     ^^^^^^^^ not found in `message`
     |
note: struct `crate::clients::ollama::completion::ToolCall` exists but is inaccessible
    --> packages/provider/src/clients/ollama/completion.rs:391:1
     |
391  | pub struct ToolCall {
     | ^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs
     |
821  +     use crate::ToolCall;
     |
821  +     use crate::clients::anthropic::ToolCall;
     |
821  +     use crate::clients::mistral::completion::ToolCall;
     |
821  +     use crate::domain::http::ToolCall;
     |
       and 1 other candidate
help: if you import `ToolCall`, refer to it directly
     |
1125 -         fn from(tool_call: message::ToolCall) -> Self {
1125 +         fn from(tool_call: ToolCall) -> Self {
     |

error[E0308]: mismatched types
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/manager.rs:91:29
   |
91 |                         id: Some(Uuid::new_v4().to_string()),
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Option<String>`
   |
   = note: expected struct `std::string::String`
                found enum `std::option::Option<std::string::String>`

error[E0063]: missing fields `metadata` and `name` in initializer of `CandleMessage`
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/manager.rs:90:30
   |
90 |                     message: crate::types::candle_chat::chat::message::Message {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `metadata` and `name`

error[E0560]: struct `types::candle_chat::message::SearchChatMessage` has no field named `highlights`
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/manager.rs:96:21
   |
96 |                     highlights: Vec::new()},
   |                     ^^^^^^^^^^ `types::candle_chat::message::SearchChatMessage` does not have this field
   |
   = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 2 others

error[E0412]: cannot find type `ExecutableCode` in this scope
   --> packages/provider/src/clients/gemini/embedding.rs:148:33
    |
148 |         executable_code: Option<ExecutableCode>,
    |                                 ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
109 +     use crate::clients::gemini::gemini_api_types::ExecutableCode;
    |
109 +     use crate::clients::gemini::gemini_types::ExecutableCode;
    |

error[E0412]: cannot find type `CodeExecutionResult` in this scope
   --> packages/provider/src/clients/gemini/embedding.rs:150:39
    |
150 |         code_execution_result: Option<CodeExecutionResult>}
    |                                       ^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
109 +     use crate::clients::gemini::gemini_api_types::CodeExecutionResult;
    |
109 +     use crate::clients::gemini::gemini_types::CodeExecutionResult;
    |

error[E0433]: failed to resolve: could not find `RawStreamingChoice` in `streaming`
  --> packages/provider/src/clients/gemini/streaming.rs:92:49
   |
92 | ...                   yield Ok(streaming::RawStreamingChoice::Message(text)),
   |                                           ^^^^^^^^^^^^^^^^^^ could not find `RawStreamingChoice` in `streaming`
   |
help: consider importing this enum
   |
1  + use crate::clients::openrouter::streaming::RawStreamingChoice;
   |
help: if you import `RawStreamingChoice`, refer to it directly
   |
92 -                             yield Ok(streaming::RawStreamingChoice::Message(text)),
92 +                             yield Ok(RawStreamingChoice::Message(text)),
   |

error[E0433]: failed to resolve: could not find `RawStreamingChoice` in `streaming`
  --> packages/provider/src/clients/gemini/streaming.rs:94:49
   |
94 | ...                   yield Ok(streaming::RawStreamingChoice::ToolCall {
   |                                           ^^^^^^^^^^^^^^^^^^ could not find `RawStreamingChoice` in `streaming`
   |
help: consider importing this enum
   |
1  + use crate::clients::openrouter::streaming::RawStreamingChoice;
   |
help: if you import `RawStreamingChoice`, refer to it directly
   |
94 -                             yield Ok(streaming::RawStreamingChoice::ToolCall {
94 +                             yield Ok(RawStreamingChoice::ToolCall {
   |

error[E0599]: no method named `clone` found for struct `ConsistentCounter` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/manager.rs:112:56
    |
112 |         let operation_counter = self.operation_counter.clone();
    |                                                        ^^^^^ method not found in `ConsistentCounter`

error[E0433]: failed to resolve: could not find `RawStreamingChoice` in `streaming`
   --> packages/provider/src/clients/gemini/streaming.rs:116:45
    |
116 |                         yield Ok(streaming::RawStreamingChoice::FinalResponse(StreamingCompletionResponse {
    |                                             ^^^^^^^^^^^^^^^^^^ could not find `RawStreamingChoice` in `streaming`
    |
help: consider importing this enum
    |
1   + use crate::clients::openrouter::streaming::RawStreamingChoice;
    |
help: if you import `RawStreamingChoice`, refer to it directly
    |
116 -                         yield Ok(streaming::RawStreamingChoice::FinalResponse(StreamingCompletionResponse {
116 +                         yield Ok(RawStreamingChoice::FinalResponse(StreamingCompletionResponse {
    |

error[E0412]: cannot find type `CompletionModel` in this scope
   --> packages/provider/src/clients/gemini/gemini_client.rs:52:6
    |
52  | impl CompletionModel {
    |      ^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:114:1
    |
114 | pub enum CompletionChunk {
    | ------------------------ similarly named enum `CompletionChunk` defined here
    |
help: an enum with a similar name exists
    |
52  - impl CompletionModel {
52  + impl CompletionChunk {
    |
help: consider importing one of these items
    |
6   + use crate::CompletionModel;
    |
6   + use crate::clients::groq::CompletionModel;
    |
6   + use crate::clients::mistral::CompletionModel;
    |
6   + use crate::clients::xai::CompletionModel;
    |
      and 1 other candidate

error[E0412]: cannot find type `CompletionModel` in this scope
   --> packages/provider/src/clients/gemini/gemini_client.rs:60:38
    |
60  | impl completion::CompletionModel for CompletionModel {
    |                                      ^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:114:1
    |
114 | pub enum CompletionChunk {
    | ------------------------ similarly named enum `CompletionChunk` defined here
    |
help: an enum with a similar name exists
    |
60  - impl completion::CompletionModel for CompletionModel {
60  + impl completion::CompletionModel for CompletionChunk {
    |
help: consider importing one of these items
    |
6   + use crate::CompletionModel;
    |
6   + use crate::clients::groq::CompletionModel;
    |
6   + use crate::clients::mistral::CompletionModel;
    |
6   + use crate::clients::xai::CompletionModel;
    |
      and 1 other candidate

error[E0422]: cannot find struct, variant or union type `CompletionModel` in this scope
   --> packages/provider/src/clients/gemini/gemini_client.rs:115:26
    |
115 |             let result = CompletionModel { client, model }.stream_internal(request);
    |                          ^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::clients::groq::CompletionModel;
    |
6   + use crate::clients::mistral::CompletionModel;
    |

error[E0412]: cannot find type `CompletionModel` in this scope
   --> packages/provider/src/clients/gemini/gemini_client.rs:123:6
    |
123 | impl CompletionModel {
    |      ^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:114:1
    |
114 | pub enum CompletionChunk {
    | ------------------------ similarly named enum `CompletionChunk` defined here
    |
help: an enum with a similar name exists
    |
123 - impl CompletionModel {
123 + impl CompletionChunk {
    |
help: consider importing one of these items
    |
6   + use crate::CompletionModel;
    |
6   + use crate::clients::groq::CompletionModel;
    |
6   + use crate::clients::mistral::CompletionModel;
    |
6   + use crate::clients::xai::CompletionModel;
    |
      and 1 other candidate

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/gemini/gemini_client.rs:159:19
    |
159 |     chat_history: ArrayVec<Message, MAX_MESSAGES>,
    |                   ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/gemini/gemini_client.rs:160:16
    |
160 |     documents: ArrayVec<Document, MAX_DOCUMENTS>,
    |                ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/gemini/gemini_client.rs:161:12
    |
161 |     tools: ArrayVec<ToolDefinition, MAX_TOOLS>,
    |            ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/gemini/gemini_client.rs:193:27
    |
193 |             chat_history: ArrayVec::new(),
    |                           ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/gemini/gemini_client.rs:194:24
    |
194 |             documents: ArrayVec::new(),
    |                        ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/gemini/gemini_client.rs:195:20
    |
195 |             tools: ArrayVec::new(),
    |                    ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `GeminiFinishReason` in this scope
   --> packages/provider/src/clients/gemini/gemini_types.rs:130:11
    |
130 | impl From<GeminiFinishReason> for fluent_ai_domain::chunk::FinishReason {
    |           ^^^^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:104:1
    |
104 | pub enum FinishReason {
    | --------------------- similarly named enum `FinishReason` defined here
    |
help: an enum with a similar name exists
    |
130 - impl From<GeminiFinishReason> for fluent_ai_domain::chunk::FinishReason {
130 + impl From<FinishReason> for fluent_ai_domain::chunk::FinishReason {
    |
help: you might be missing a type parameter
    |
130 | impl<GeminiFinishReason> From<GeminiFinishReason> for fluent_ai_domain::chunk::FinishReason {
    |     ++++++++++++++++++++

error[E0412]: cannot find type `GeminiFinishReason` in this scope
   --> packages/provider/src/clients/gemini/gemini_types.rs:131:21
    |
131 |     fn from(reason: GeminiFinishReason) -> Self {
    |                     ^^^^^^^^^^^^^^^^^^ help: an enum with a similar name exists: `FinishReason`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:104:1
    |
104 | pub enum FinishReason {
    | --------------------- similarly named enum `FinishReason` defined here

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/groq/client.rs:133:34
    |
133 |     ) -> Result<fluent_ai_http3::Response, HttpError> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
133 -     ) -> Result<fluent_ai_http3::Response, HttpError> {
133 +     ) -> Result<Response, HttpError> {
    |

error[E0412]: cannot find type `Document` in module `completion`
   --> packages/provider/src/clients/groq/client.rs:260:32
    |
260 |     documents: Vec<completion::Document>,
    |                                ^^^^^^^^ not found in `completion`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::Document;
    |
7   + use fluent_ai_domain::Document;
    |
7   + use yyaml::parser::Document;
    |
help: if you import `Document`, refer to it directly
    |
260 -     documents: Vec<completion::Document>,
260 +     documents: Vec<Document>,
    |

error[E0412]: cannot find type `Document` in module `completion`
   --> packages/provider/src/clients/groq/client.rs:319:54
    |
319 |     pub fn documents(mut self, docs: Vec<completion::Document>) -> Self {
    |                                                      ^^^^^^^^ not found in `completion`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::Document;
    |
7   + use fluent_ai_domain::Document;
    |
7   + use yyaml::parser::Document;
    |
help: if you import `Document`, refer to it directly
    |
319 -     pub fn documents(mut self, docs: Vec<completion::Document>) -> Self {
319 +     pub fn documents(mut self, docs: Vec<Document>) -> Self {
    |

error[E0404]: expected trait, found struct `Prompt`
   --> packages/provider/src/clients/groq/client.rs:466:10
    |
466 | impl<'a> Prompt for GroqCompletionBuilder<'a, NeedsPrompt> {
    |          ^^^^^^ not a trait

error[E0599]: no method named `clone` found for struct `ConsistentCounter` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/searcher.rs:125:50
    |
125 |         let search_counter = self.search_counter.clone();
    |                                                  ^^^^^ method not found in `ConsistentCounter`

error[E0433]: failed to resolve: could not find `UserContent` in `message`
   --> packages/provider/src/clients/groq/completion.rs:102:49
    |
102 |                         .map(|content| message::UserContent::text(&content))
    |                                                 ^^^^^^^^^^^ could not find `UserContent` in `message`
    |
help: consider importing this enum
    |
7   + use crate::clients::mistral::completion::UserContent;
    |
help: if you import `UserContent`, refer to it directly
    |
102 -                         .map(|content| message::UserContent::text(&content))
102 +                         .map(|content| UserContent::text(&content))
    |

error[E0308]: mismatched types
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/searcher.rs:163:29
    |
163 |                         id: Some(Uuid::new_v4().to_string()),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Option<String>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<std::string::String>`

error[E0063]: missing fields `metadata` and `name` in initializer of `CandleMessage`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/searcher.rs:162:30
    |
162 |                     message: CandleMessage {
    |                              ^^^^^^^^^^^^^ missing `metadata` and `name`

error[E0308]: mismatched types
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/searcher.rs:162:30
    |
162 |                       message: CandleMessage {
    |  ______________________________^
163 | |                         id: Some(Uuid::new_v4().to_string()),
164 | |                         content: format!("Sample result for term: {}", term),
165 | |                         role: CandleMessageRole::User,
...   |
170 | |                                 .as_secs(),
171 | |                         )},
    | |__________________________^ expected `SearchChatMessage`, found `CandleMessage`
    |
help: call `Into::into` on this expression to convert `CandleMessage` into `types::candle_chat::message::SearchChatMessage`
    |
171 |                         )}.into(),
    |                           +++++++

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/groq/completion.rs:111:49
    |
111 |                         .map(|content| message::AssistantContent::text(&content))
    |                                                 ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
    |
7   + use crate::clients::mistral::completion::AssistantContent;
    |
7   + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
111 -                         .map(|content| message::AssistantContent::text(&content))
111 +                         .map(|content| AssistantContent::text(&content))
    |

error[E0433]: failed to resolve: could not find `UserContent` in `message`
   --> packages/provider/src/clients/groq/completion.rs:133:30
    |
133 |                     message::UserContent::Text(text) => Some(text.text.clone()),
    |                              ^^^^^^^^^^^ could not find `UserContent` in `message`
    |
help: consider importing this enum
    |
7   + use crate::clients::mistral::completion::UserContent;
    |
help: if you import `UserContent`, refer to it directly
    |
133 -                     message::UserContent::Text(text) => Some(text.text.clone()),
133 +                     UserContent::Text(text) => Some(text.text.clone()),
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/groq/completion.rs:140:34
    |
140 |                         message::AssistantContent::Text(text) => {
    |                                  ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
    |
7   + use crate::clients::mistral::completion::AssistantContent;
    |
7   + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
140 -                         message::AssistantContent::Text(text) => {
140 +                         AssistantContent::Text(text) => {
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/groq/completion.rs:151:34
    |
151 |                         message::AssistantContent::ToolCall(_) => {
    |                                  ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
    |
7   + use crate::clients::mistral::completion::AssistantContent;
    |
7   + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
151 -                         message::AssistantContent::ToolCall(_) => {
151 +                         AssistantContent::ToolCall(_) => {
    |

error[E0425]: cannot find function `process_groq_streaming_response` in module `streaming`
   --> packages/provider/src/clients/groq/completion.rs:326:45
    |
326 |                     let result = streaming::process_groq_streaming_response(stream).await;
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `streaming`

error[E0412]: cannot find type `HttpClient` in this scope
   --> packages/provider/src/clients/groq/completion.rs:353:13
    |
353 |     client: HttpClient,
    |             ^^^^^^^^^^ not found in this scope
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpClient` exists but is inaccessible
help: consider importing this struct
    |
7   + use fluent_ai_http3::HttpClient;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/groq/completion.rs:365:15
    |
365 |     messages: ArrayVec<Message, MAX_MESSAGES>,
    |               ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/groq/completion.rs:366:16
    |
366 |     documents: ArrayVec<Document, MAX_DOCUMENTS>,
    |                ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/groq/completion.rs:367:12
    |
367 |     tools: ArrayVec<DomainToolDefinition, MAX_TOOLS>,
    |            ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpClient`
   --> packages/provider/src/clients/groq/completion.rs:375:22
    |
375 |         let client = HttpClient::with_config(HttpConfig::streaming_optimized())
    |                      ^^^^^^^^^^ use of undeclared type `HttpClient`
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpClient` exists but is inaccessible
help: consider importing this struct
    |
7   + use fluent_ai_http3::HttpClient;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpConfig`
   --> packages/provider/src/clients/groq/completion.rs:375:46
    |
375 |         let client = HttpClient::with_config(HttpConfig::streaming_optimized())
    |                                              ^^^^^^^^^^ use of undeclared type `HttpConfig`
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpConfig` exists but is inaccessible
help: consider importing this struct
    |
7   + use fluent_ai_http3::HttpConfig;
    |

error[E0308]: mismatched types
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/ranking.rs:152:32
    |
152 |                 if timestamp < date_range.start || timestamp > date_range.end {
    |                    ---------   ^^^^^^^^^^^^^^^^ expected `u64`, found `DateTime<Utc>`
    |                    |
    |                    expected because this is `u64`
    |
    = note: expected type `u64`
             found struct `DateTime<Utc>`

error[E0308]: mismatched types
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/search/ranking.rs:152:64
    |
152 |                 if timestamp < date_range.start || timestamp > date_range.end {
    |                                                    ---------   ^^^^^^^^^^^^^^ expected `u64`, found `DateTime<Utc>`
    |                                                    |
    |                                                    expected because this is `u64`
    |
    = note: expected type `u64`
             found struct `DateTime<Utc>`

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/groq/completion.rs:406:23
    |
406 |             messages: ArrayVec::new(),
    |                       ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/groq/completion.rs:407:24
    |
407 |             documents: ArrayVec::new(),
    |                        ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/groq/completion.rs:408:20
    |
408 |             tools: ArrayVec::new(),
    |                    ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/groq/completion.rs:564:35
    |
178 | pub struct CompletionModel {
    | -------------------------- similarly named struct `CompletionModel` defined here
...
564 |                 let error_chunk = CompletionChunk {
    |                                   ^^^^^^^^^^^^^^^
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: a struct with a similar name exists
    |
564 -                 let error_chunk = CompletionChunk {
564 +                 let error_chunk = CompletionModel {
    |
help: consider importing one of these structs instead
    |
7   + use crate::domain::http::CompletionChunk;
    |
7   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0433]: failed to resolve: could not find `UserContent` in `fluent_ai_domain`
   --> packages/provider/src/clients/groq/completion.rs:587:69
    |
587 |             content: cyrup_sugars::OneOrMany::One(fluent_ai_domain::UserContent::Text {
    |                                                                     ^^^^^^^^^^^ could not find `UserContent` in `fluent_ai_domain`
    |
help: consider importing this enum
    |
7   + use crate::clients::mistral::completion::UserContent;
    |
help: if you import `UserContent`, refer to it directly
    |
587 -             content: cyrup_sugars::OneOrMany::One(fluent_ai_domain::UserContent::Text {
587 +             content: cyrup_sugars::OneOrMany::One(UserContent::Text {
    |

error[E0433]: failed to resolve: could not find `UserContent` in `fluent_ai_domain`
   --> packages/provider/src/clients/groq/completion.rs:634:47
    |
634 | ...                   fluent_ai_domain::UserContent::Text { text } => Some(text.clone()),
    |                                         ^^^^^^^^^^^ could not find `UserContent` in `fluent_ai_domain`
    |
help: consider importing this enum
    |
7   + use crate::clients::mistral::completion::UserContent;
    |
help: if you import `UserContent`, refer to it directly
    |
634 -                             fluent_ai_domain::UserContent::Text { text } => Some(text.clone()),
634 +                             UserContent::Text { text } => Some(text.clone()),
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `fluent_ai_domain`
   --> packages/provider/src/clients/groq/completion.rs:647:47
    |
647 | ...                   fluent_ai_domain::AssistantContent::Text { text } => Some(text.clone()),
    |                                         ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `fluent_ai_domain`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these items
    |
7   + use crate::clients::mistral::completion::AssistantContent;
    |
7   + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
647 -                             fluent_ai_domain::AssistantContent::Text { text } => Some(text.clone()),
647 +                             AssistantContent::Text { text } => Some(text.clone()),
    |

error[E0433]: failed to resolve: use of undeclared type `HttpRequest`
   --> packages/provider/src/clients/groq/completion.rs:695:28
    |
695 |         let http_request = HttpRequest::post(&url, request_body)
    |                            ^^^^^^^^^^^ use of undeclared type `HttpRequest`
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpRequest` exists but is inaccessible
help: consider importing this struct
    |
7   + use fluent_ai_http3::HttpRequest;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/groq/completion.rs:731:53
    |
178 | pub struct CompletionModel {
    | -------------------------- similarly named struct `CompletionModel` defined here
...
731 |                                     let mut chunk = CompletionChunk {
    |                                                     ^^^^^^^^^^^^^^^
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: a struct with a similar name exists
    |
731 -                                     let mut chunk = CompletionChunk {
731 +                                     let mut chunk = CompletionModel {
    |
help: consider importing one of these structs instead
    |
7   + use crate::domain::http::CompletionChunk;
    |
7   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0425]: cannot find value `tx` in this scope
  --> packages/provider/src/clients/groq/streaming.rs:70:40
   |
70 | ...                   if tx.try_send(Ok(response)).is_err() {
   |                          ^^ help: a local variable with a similar name exists: `rx`

error[E0425]: cannot find value `tx` in this scope
  --> packages/provider/src/clients/groq/streaming.rs:78:41
   |
78 | ...                   tx.try_send(Err(CompletionError::Internal(e.to_string())));
   |                       ^^ help: a local variable with a similar name exists: `rx`

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/huggingface/completion.rs:39:12
   |
39 |     crate::model_info::get_model_config(model_name)
   |            ^^^^^^^^^^ unresolved import
   |
note: module `crate::openai::model_info` exists but is inaccessible
  --> packages/provider/src/clients/openai/mod.rs:56:1
   |
56 | mod model_info;
   | ^^^^^^^^^^^^^^^ not accessible
help: a struct with a similar name exists
   |
39 -     crate::model_info::get_model_config(model_name)
39 +     crate::ModelInfo::get_model_config(model_name)
   |
help: a similar path exists
   |
39 |     crate::openai::model_info::get_model_config(model_name)
   |            ++++++++
help: consider importing one of these modules
   |
15 + use crate::clients::gemini::model_info;
   |
15 + use crate::clients::mistral::model_info;
   |
help: if you import `model_info`, refer to it directly
   |
39 -     crate::model_info::get_model_config(model_name)
39 +     model_info::get_model_config(model_name)
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/huggingface/completion.rs:57:19
   |
57 |     chat_history: ArrayVec<Message, MAX_MESSAGES>,
   |                   ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/huggingface/completion.rs:58:16
   |
58 |     documents: ArrayVec<Document, MAX_DOCUMENTS>,
   |                ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/huggingface/completion.rs:59:12
   |
59 |     tools: ArrayVec<ToolDefinition, MAX_TOOLS>,
   |            ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/huggingface/completion.rs:69:28
   |
69 |     pub tool_calls: Option<ArrayVec<HuggingFaceToolCall<'a>, MAX_TOOLS>>}
   |                            ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/huggingface/completion.rs:89:19
   |
89 |     pub messages: ArrayVec<HuggingFaceMessage<'a>, MAX_MESSAGES>,
   |                   ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/huggingface/completion.rs:101:23
    |
101 |     pub tools: Option<ArrayVec<Value, MAX_TOOLS>>,
    |                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/huggingface/completion.rs:168:27
    |
168 |             chat_history: ArrayVec::new(),
    |                           ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/huggingface/completion.rs:169:24
    |
169 |             documents: ArrayVec::new(),
    |                        ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/huggingface/completion.rs:170:20
    |
170 |             tools: ArrayVec::new(),
    |                    ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/huggingface/completion.rs:444:28
    |
444 |         let mut messages = ArrayVec::new();
    |                            ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/huggingface/completion.rs:543:17
    |
543 |     ) -> Result<ArrayVec<HuggingFaceToolCall<'_>, MAX_TOOLS>, CompletionError> {
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/huggingface/completion.rs:544:30
    |
544 |         let mut tool_calls = ArrayVec::new();
    |                              ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/huggingface/completion.rs:563:39
    |
563 |     fn convert_tools(&self) -> Result<ArrayVec<Value, MAX_TOOLS>, CompletionError> {
    |                                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/huggingface/completion.rs:564:25
    |
564 |         let mut tools = ArrayVec::new();
    |                         ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `json_util`
  --> packages/provider/src/clients/huggingface/streaming.rs:42:36
   |
42 |         #[serde(deserialize_with = "json_util::string_or_vec")]
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `json_util`
   |
   = help: if you wanted to use a crate named `json_util`, use `cargo add json_util` to add it to your `Cargo.toml`
help: consider importing one of these modules
   |
1  + use crate::json_util;
   |
1  + use fluent_ai_domain::json_util;
   |

error[E0412]: cannot find type `TranscriptionModel` in this scope
  --> packages/provider/src/clients/huggingface/transcription.rs:41:6
   |
41 | impl TranscriptionModel {
   |      ^^^^^^^^^^^^^^^^^^
   |
  ::: packages/provider/src/transcription/mod.rs:65:1
   |
65 | pub enum TranscriptionError {
   | --------------------------- similarly named enum `TranscriptionError` defined here
   |
help: an enum with a similar name exists
   |
41 - impl TranscriptionModel {
41 + impl TranscriptionError {
   |
help: consider importing one of these items
   |
1  + use crate::TranscriptionModel;
   |
1  + use crate::clients::gemini::transcription::TranscriptionModel;
   |

error[E0412]: cannot find type `TranscriptionModel` in this scope
  --> packages/provider/src/clients/huggingface/transcription.rs:48:44
   |
48 | impl transcription::TranscriptionModel for TranscriptionModel {
   |                                            ^^^^^^^^^^^^^^^^^^
   |
  ::: packages/provider/src/transcription/mod.rs:65:1
   |
65 | pub enum TranscriptionError {
   | --------------------------- similarly named enum `TranscriptionError` defined here
   |
help: an enum with a similar name exists
   |
48 - impl transcription::TranscriptionModel for TranscriptionModel {
48 + impl transcription::TranscriptionModel for TranscriptionError {
   |
help: consider importing one of these items
   |
1  + use crate::TranscriptionModel;
   |
1  + use crate::clients::gemini::transcription::TranscriptionModel;
   |

error[E0422]: cannot find struct, variant or union type `Text` in module `message`
  --> packages/provider/src/clients/mistral/completion.rs:96:61
   |
96 |                         message::UserContent::Text(message::Text { text }) => {
   |                                                             ^^^^ not found in `message`
   |
note: these variants exist but are inaccessible
  --> packages/provider/src/clients/huggingface/streaming.rs:26:5
   |
26 |     Text { text: String }}
   |     ^^^^ `crate::clients::huggingface::streaming::AssistantContent::Text`: not accessible
   |
  ::: packages/provider/src/clients/openai/messages.rs:34:5
   |
34 |     Text(String),
   |     ^^^^^^^^^^^^ `crate::openai::messages::OpenAIContent::Text`: not accessible
help: consider importing one of these variants
   |
1  + use crate::clients::anthropic::AnthropicContent::Text;
   |
1  + use crate::clients::anthropic::AnthropicContentBlock::Text;
   |
1  + use crate::clients::anthropic::AnthropicResponseContent::Text;
   |
1  + use crate::clients::anthropic::AnthropicSystemMessage::Text;
   |
     and 26 other candidates
help: if you import `Text`, refer to it directly
   |
96 -                         message::UserContent::Text(message::Text { text }) => {
96 +                         message::UserContent::Text(Text { text }) => {
   |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/mistral/completion.rs:109:38
    |
109 | ...                   message::AssistantContent::Text(text) => texts.push(text),
    |                                ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
109 -                             message::AssistantContent::Text(text) => texts.push(text),
109 +                             AssistantContent::Text(text) => texts.push(text),
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/mistral/completion.rs:110:38
    |
110 | ...                   message::AssistantContent::ToolCall(tool_call) => tools.push(tool_call)}
    |                                ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
110 -                             message::AssistantContent::ToolCall(tool_call) => tools.push(tool_call)}
110 +                             AssistantContent::ToolCall(tool_call) => tools.push(tool_call)}
    |

error[E0412]: cannot find type `ToolCall` in module `message`
   --> packages/provider/src/clients/mistral/completion.rs:138:20
    |
138 | impl From<message::ToolCall> for ToolCall {
    |                    ^^^^^^^^ not found in `message`
    |
note: struct `crate::clients::ollama::completion::ToolCall` exists but is inaccessible
   --> packages/provider/src/clients/ollama/completion.rs:391:1
    |
391 | pub struct ToolCall {
    | ^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs
    |
1   + use crate::ToolCall;
    |
1   + use crate::clients::anthropic::ToolCall;
    |
1   + use crate::domain::http::ToolCall;
    |
1   + use fluent_ai_domain::http::ToolCall;
    |
help: if you import `ToolCall`, refer to it directly
    |
138 - impl From<message::ToolCall> for ToolCall {
138 + impl From<ToolCall> for ToolCall {
    |

error[E0412]: cannot find type `ToolCall` in module `message`
   --> packages/provider/src/clients/mistral/completion.rs:139:33
    |
139 |     fn from(tool_call: message::ToolCall) -> Self {
    |                                 ^^^^^^^^ not found in `message`
    |
note: struct `crate::clients::ollama::completion::ToolCall` exists but is inaccessible
   --> packages/provider/src/clients/ollama/completion.rs:391:1
    |
391 | pub struct ToolCall {
    | ^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs
    |
1   + use crate::ToolCall;
    |
1   + use crate::clients::anthropic::ToolCall;
    |
1   + use crate::domain::http::ToolCall;
    |
1   + use fluent_ai_domain::http::ToolCall;
    |
help: if you import `ToolCall`, refer to it directly
    |
139 -     fn from(tool_call: message::ToolCall) -> Self {
139 +     fn from(tool_call: ToolCall) -> Self {
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `completion`
   --> packages/provider/src/clients/mistral/completion.rs:320:38
    |
320 |                     vec![completion::AssistantContent::text(content.clone())]
    |                                      ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `completion`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
320 -                     vec![completion::AssistantContent::text(content.clone())]
320 +                     vec![AssistantContent::text(content.clone())]
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `completion`
   --> packages/provider/src/clients/mistral/completion.rs:327:41
    |
327 | ...                   completion::AssistantContent::tool_call(
    |                                   ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `completion`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
327 -                             completion::AssistantContent::tool_call(
327 +                             AssistantContent::tool_call(
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/mistral/completion.rs:409:30
    |
409 |                     message::AssistantContent::Text(t) => {
    |                              ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
409 -                     message::AssistantContent::Text(t) => {
409 +                     AssistantContent::Text(t) => {
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/mistral/completion.rs:412:30
    |
412 |                     message::AssistantContent::ToolCall(tc) => {
    |                              ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
412 -                     message::AssistantContent::ToolCall(tc) => {
412 +                     AssistantContent::ToolCall(tc) => {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/mistral/completion.rs:550:19
    |
550 |     chat_history: ArrayVec<DomainMessage, MAX_MESSAGES>,
    |                   ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
1   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/mistral/completion.rs:551:16
    |
551 |     documents: ArrayVec<Document, MAX_DOCUMENTS>,
    |                ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
1   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/mistral/completion.rs:552:12
    |
552 |     tools: ArrayVec<completion::ToolDefinition, MAX_TOOLS>,
    |            ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
1   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/mistral/completion.rs:562:28
    |
562 |     pub tool_calls: Option<ArrayVec<MistralToolCall<'a>, MAX_TOOLS>>}
    |                            ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
1   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/mistral/completion.rs:582:19
    |
582 |     pub messages: ArrayVec<MistralMessage<'a>, MAX_MESSAGES>,
    |                   ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
1   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/mistral/completion.rs:594:23
    |
594 |     pub tools: Option<ArrayVec<Value, MAX_TOOLS>>,
    |                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
1   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/mistral/completion.rs:674:27
    |
674 |             chat_history: ArrayVec::new(),
    |                           ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
1   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/mistral/completion.rs:675:24
    |
675 |             documents: ArrayVec::new(),
    |                        ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
1   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/mistral/completion.rs:676:20
    |
676 |             tools: ArrayVec::new(),
    |                    ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
1   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/mistral/completion.rs:948:28
    |
948 |         let mut messages = ArrayVec::new();
    |                            ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
1   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
    --> packages/provider/src/clients/mistral/completion.rs:1047:17
     |
1047 |     ) -> Result<ArrayVec<MistralToolCall<'_>, MAX_TOOLS>, ProviderError> {
     |                 ^^^^^^^^ not found in this scope
     |
help: consider importing this struct
     |
1    + use arrayvec::ArrayVec;
     |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
    --> packages/provider/src/clients/mistral/completion.rs:1048:30
     |
1048 |         let mut tool_calls = ArrayVec::new();
     |                              ^^^^^^^^ use of undeclared type `ArrayVec`
     |
help: consider importing this struct
     |
1    + use arrayvec::ArrayVec;
     |

error[E0412]: cannot find type `ArrayVec` in this scope
    --> packages/provider/src/clients/mistral/completion.rs:1067:39
     |
1067 |     fn convert_tools(&self) -> Result<ArrayVec<Value, MAX_TOOLS>, ProviderError> {
     |                                       ^^^^^^^^ not found in this scope
     |
help: consider importing this struct
     |
1    + use arrayvec::ArrayVec;
     |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
    --> packages/provider/src/clients/mistral/completion.rs:1068:25
     |
1068 |         let mut tools = ArrayVec::new();
     |                         ^^^^^^^^ use of undeclared type `ArrayVec`
     |
help: consider importing this struct
     |
1    + use arrayvec::ArrayVec;
     |

error[E0412]: cannot find type `EmbeddingModel` in this scope
  --> packages/provider/src/clients/mistral/embedding.rs:18:6
   |
18 | impl EmbeddingModel {
   |      ^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
1  + use crate::EmbeddingModel;
   |
1  + use crate::clients::gemini::embedding::EmbeddingModel;
   |
1  + use crate::domain::context::EmbeddingModel;
   |
1  + use crate::domain::embedding::EmbeddingModel;
   |
     and 4 other candidates

error[E0412]: cannot find type `EmbeddingModel` in this scope
  --> packages/provider/src/clients/mistral/embedding.rs:27:37
   |
27 | impl embeddings::EmbeddingModel for EmbeddingModel {
   |                                     ^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
1  + use crate::EmbeddingModel;
   |
1  + use crate::clients::gemini::embedding::EmbeddingModel;
   |
1  + use crate::domain::context::EmbeddingModel;
   |
1  + use crate::domain::embedding::EmbeddingModel;
   |
     and 4 other candidates

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/mistral/model_info.rs:290:12
    |
290 |     crate::model_info::get_model_config(model_name)
    |            ^^^^^^^^^^ unresolved import
    |
note: module `crate::openai::model_info` exists but is inaccessible
   --> packages/provider/src/clients/openai/mod.rs:56:1
    |
56  | mod model_info;
    | ^^^^^^^^^^^^^^^ not accessible
help: a struct with a similar name exists
    |
290 -     crate::model_info::get_model_config(model_name)
290 +     crate::ModelInfo::get_model_config(model_name)
    |
help: a similar path exists
    |
290 |     crate::openai::model_info::get_model_config(model_name)
    |            ++++++++
help: consider importing this module
    |
8   + use crate::clients::gemini::model_info;
    |
help: if you import `model_info`, refer to it directly
    |
290 -     crate::model_info::get_model_config(model_name)
290 +     model_info::get_model_config(model_name)
    |

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/ollama/client.rs:136:34
    |
136 |     ) -> Result<fluent_ai_http3::Response> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
136 -     ) -> Result<fluent_ai_http3::Response> {
136 +     ) -> Result<Response> {
    |

error[E0412]: cannot find type `CompletionModel` in this scope
   --> packages/provider/src/clients/ollama/completion.rs:129:6
    |
129 | impl CompletionModel {
    |      ^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::CompletionModel;
    |
7   + use crate::clients::groq::CompletionModel;
    |
7   + use crate::clients::mistral::CompletionModel;
    |
7   + use crate::clients::xai::CompletionModel;
    |
      and 1 other candidate

error[E0412]: cannot find type `CompletionModel` in this scope
   --> packages/provider/src/clients/ollama/completion.rs:193:38
    |
193 | impl completion::CompletionModel for CompletionModel {
    |                                      ^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::CompletionModel;
    |
7   + use crate::clients::groq::CompletionModel;
    |
7   + use crate::clients::mistral::CompletionModel;
    |
7   + use crate::clients::xai::CompletionModel;
    |
      and 1 other candidate

error[E0412]: cannot find type `EmbeddingModel` in this scope
   --> packages/provider/src/clients/ollama/completion.rs:276:6
    |
276 | impl EmbeddingModel {
    |      ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::EmbeddingModel;
    |
7   + use crate::clients::gemini::embedding::EmbeddingModel;
    |
7   + use crate::domain::context::EmbeddingModel;
    |
7   + use crate::domain::embedding::EmbeddingModel;
    |
      and 4 other candidates

error[E0412]: cannot find type `EmbeddingModel` in this scope
   --> packages/provider/src/clients/ollama/completion.rs:310:30
    |
310 | impl EmbeddingModelTrait for EmbeddingModel {
    |                              ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::EmbeddingModel;
    |
7   + use crate::clients::gemini::embedding::EmbeddingModel;
    |
7   + use crate::domain::context::EmbeddingModel;
    |
7   + use crate::domain::embedding::EmbeddingModel;
    |
      and 4 other candidates

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/ollama/streaming.rs:40:12
   |
40 |     crate::runtime::spawn_async(async move {
   |            ^^^^^^^ unresolved import
   |
help: a similar path exists
   |
40 |     crate::tokio::runtime::spawn_async(async move {
   |            +++++++
help: consider importing this module
   |
7  + use tokio::runtime;
   |
help: if you import `runtime`, refer to it directly
   |
40 -     crate::runtime::spawn_async(async move {
40 +     runtime::spawn_async(async move {
   |

error[E0574]: expected struct, variant or union type, found enum `ProviderMessage`
   --> packages/provider/src/clients/ollama/streaming.rs:126:16
    |
126 |         delta: ProviderMessage {
    |                ^^^^^^^^^^^^^^^ not a struct, variant or union type

error[E0412]: cannot find type `UsageInfo` in module `crate::streaming`
   --> packages/provider/src/clients/ollama/streaming.rs:146:78
    |
146 | fn extract_usage_info(chunk: &serde_json::Value) -> Option<crate::streaming::UsageInfo> {
    |                                                                              ^^^^^^^^^ not found in `crate::streaming`

error[E0422]: cannot find struct, variant or union type `UsageInfo` in module `crate::streaming`
   --> packages/provider/src/clients/ollama/streaming.rs:179:32
    |
179 |         Some(crate::streaming::UsageInfo {
    |                                ^^^^^^^^^ not found in `crate::streaming`

error[E0425]: cannot find function `is_chat_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:410:29
    |
410 |                 if !models::is_chat_model(model) {
    |                             ^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find value `CHAT_MODELS` in module `models`
   --> packages/provider/src/clients/openai/client.rs:414:33
    |
414 |                         models::CHAT_MODELS,
    |                                 ^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `is_embedding_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:421:29
    |
421 |                 if !models::is_embedding_model(model) {
    |                             ^^^^^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `is_audio_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:432:29
    |
432 |                 if !models::is_audio_model(model) {
    |                             ^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use crate::openai::messages::is_audio_model;
    |
help: if you import `is_audio_model`, refer to it directly
    |
432 -                 if !models::is_audio_model(model) {
432 +                 if !is_audio_model(model) {
    |

error[E0425]: cannot find value `AUDIO_MODELS` in module `models`
   --> packages/provider/src/clients/openai/client.rs:436:33
    |
436 |                           models::AUDIO_MODELS,
    |                                   ^^^^^^^^^^^^ help: a constant with a similar name exists: `ALL_MODELS`
    |
   ::: packages/provider/src/clients/openai/mod.rs:123:5
    |
123 | /     pub const ALL_MODELS: &[&str] = &[
124 | |         GPT_4_1,
125 | |         GPT_4_1_MINI,
126 | |         GPT_4_1_NANO,
...   |
141 | |         TEXT_EMBEDDING_3_SMALL,
142 | |     ];
    | |______- similarly named constant `ALL_MODELS` defined here

error[E0425]: cannot find value `WHISPER_1` in module `models`
   --> packages/provider/src/clients/openai/client.rs:437:33
    |
437 |                         models::WHISPER_1,
    |                                 ^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `is_tts_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:443:29
    |
443 |                 if !models::is_tts_model(model) {
    |                             ^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find value `TTS_MODELS` in module `models`
   --> packages/provider/src/clients/openai/client.rs:447:33
    |
447 |                           models::TTS_MODELS,
    |                                   ^^^^^^^^^^ help: a constant with a similar name exists: `ALL_MODELS`
    |
   ::: packages/provider/src/clients/openai/mod.rs:123:5
    |
123 | /     pub const ALL_MODELS: &[&str] = &[
124 | |         GPT_4_1,
125 | |         GPT_4_1_MINI,
126 | |         GPT_4_1_NANO,
...   |
141 | |         TEXT_EMBEDDING_3_SMALL,
142 | |     ];
    | |______- similarly named constant `ALL_MODELS` defined here

error[E0425]: cannot find value `TTS_1` in module `models`
   --> packages/provider/src/clients/openai/client.rs:448:33
    |
448 |                         models::TTS_1,
    |                                 ^^^^^ not found in `models`

error[E0425]: cannot find function `is_vision_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:454:29
    |
454 |                 if !models::is_vision_model(model) {
    |                             ^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use crate::openai::messages::is_vision_model;
    |
help: if you import `is_vision_model`, refer to it directly
    |
454 -                 if !models::is_vision_model(model) {
454 +                 if !is_vision_model(model) {
    |

error[E0425]: cannot find function `is_supported_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:465:29
    |
465 |                 if !models::is_supported_model(model) {
    |                             ^^^^^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `is_supported_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:482:21
    |
482 |         if !models::is_supported_model(model) {
    |                     ^^^^^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `model_family` in module `models`
   --> packages/provider/src/clients/openai/client.rs:494:29
    |
494 |             family: models::model_family(model).unwrap_or("unknown"),
    |                             ^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `model_generation` in module `models`
   --> packages/provider/src/clients/openai/client.rs:495:33
    |
495 |             generation: models::model_generation(model).unwrap_or("unknown"),
    |                                 ^^^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `context_length` in module `models`
   --> packages/provider/src/clients/openai/client.rs:496:34
    |
496 |             max_context: models::context_length(model),
    |                                  ^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `supports_streaming` in module `models`
   --> packages/provider/src/clients/openai/client.rs:497:41
    |
497 |             supports_streaming: models::supports_streaming(model),
    |                                         ^^^^^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `supports_tools` in module `models`
   --> packages/provider/src/clients/openai/client.rs:498:37
    |
498 |             supports_tools: models::supports_tools(model),
    |                                     ^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `supports_vision` in module `models`
   --> packages/provider/src/clients/openai/client.rs:499:38
    |
499 |             supports_vision: models::supports_vision(model),
    |                                      ^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use crate::openai::vision::supports_vision;
    |
help: if you import `supports_vision`, refer to it directly
    |
499 -             supports_vision: models::supports_vision(model),
499 +             supports_vision: supports_vision(model),
    |

error[E0425]: cannot find function `supports_audio` in module `models`
   --> packages/provider/src/clients/openai/client.rs:500:37
    |
500 |             supports_audio: models::supports_audio(model),
    |                                     ^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `temperature_range` in module `models`
   --> packages/provider/src/clients/openai/client.rs:501:40
    |
501 |             temperature_range: models::temperature_range(model),
    |                                        ^^^^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find value `CHAT_COMPLETIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:538:57
    |
538 |             EndpointType::ChatCompletions => endpoints::CHAT_COMPLETIONS,
    |                                                         ^^^^^^^^^^^^^^^^ not found in `endpoints`

error[E0425]: cannot find value `EMBEDDINGS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:539:52
    |
539 |             EndpointType::Embeddings => endpoints::EMBEDDINGS,
    |                                                    ^^^^^^^^^^ not found in `endpoints`

error[E0425]: cannot find value `AUDIO_TRANSCRIPTIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:540:60
    |
540 |             EndpointType::AudioTranscription => endpoints::AUDIO_TRANSCRIPTIONS,
    |                                                            ^^^^^^^^^^^^^^^^^^^^ not found in `endpoints`

error[E0425]: cannot find value `AUDIO_TRANSLATIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:541:58
    |
541 |             EndpointType::AudioTranslation => endpoints::AUDIO_TRANSLATIONS,
    |                                                          ^^^^^^^^^^^^^^^^^^ not found in `endpoints`

error[E0425]: cannot find value `AUDIO_SPEECH` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:542:54
    |
542 |             EndpointType::TextToSpeech => endpoints::AUDIO_SPEECH,
    |                                                      ^^^^^^^^^^^^ not found in `endpoints`

error[E0425]: cannot find value `CHAT_COMPLETIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:543:56
    |
543 |             EndpointType::VisionAnalysis => endpoints::CHAT_COMPLETIONS, /* Vision uses chat completions */
    |                                                        ^^^^^^^^^^^^^^^^ not found in `endpoints`

error[E0425]: cannot find value `MODELS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:544:48
    |
544 |             EndpointType::Models => endpoints::MODELS,
    |                                                ^^^^^^ not found in `endpoints`

error[E0425]: cannot find value `FILES` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:545:47
    |
545 |             EndpointType::Files => endpoints::FILES,
    |                                               ^^^^^ not found in `endpoints`

error[E0425]: cannot find value `FINE_TUNING` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:546:52
    |
546 |             EndpointType::FineTuning => endpoints::FINE_TUNING,
    |                                                    ^^^^^^^^^^^ not found in `endpoints`

error[E0425]: cannot find value `MODERATIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:547:53
    |
547 |             EndpointType::Moderations => endpoints::MODERATIONS}
    |                                                     ^^^^^^^^^^^ not found in `endpoints`

error[E0425]: cannot find value `CHAT_COMPLETIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:681:24
    |
681 |             endpoints::CHAT_COMPLETIONS,
    |                        ^^^^^^^^^^^^^^^^ not found in `endpoints`

error[E0433]: failed to resolve: could not find `CredentialSource` in `security`
   --> packages/provider/src/clients/openai/client.rs:856:34
    |
856 |                 crate::security::CredentialSource::Runtime {
    |                                  ^^^^^^^^^^^^^^^^ could not find `CredentialSource` in `security`
    |
help: a struct with a similar name exists
    |
856 -                 crate::security::CredentialSource::Runtime {
856 +                 crate::security::CredentialConfig::Runtime {
    |
help: consider importing this enum
    |
15  + use crate::security::credentials::CredentialSource;
    |
help: if you import `CredentialSource`, refer to it directly
    |
856 -                 crate::security::CredentialSource::Runtime {
856 +                 CredentialSource::Runtime {
    |

error[E0412]: cannot find type `CredentialStatistics` in module `crate::security`
   --> packages/provider/src/clients/openai/client.rs:877:73
    |
877 |     pub async fn get_credential_statistics() -> Result<crate::security::CredentialStatistics> {
    |                                                                         ^^^^^^^^^^^^^^^^^^^^ not found in `crate::security`
    |
help: consider importing this struct
    |
15  + use crate::security::credentials::CredentialStatistics;
    |
help: if you import `CredentialStatistics`, refer to it directly
    |
877 -     pub async fn get_credential_statistics() -> Result<crate::security::CredentialStatistics> {
877 +     pub async fn get_credential_statistics() -> Result<CredentialStatistics> {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/openai/completion.rs:61:19
   |
61 |     chat_history: ArrayVec<Message, MAX_MESSAGES>,
   |                   ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/openai/completion.rs:62:16
   |
62 |     documents: ArrayVec<Document, MAX_DOCUMENTS>,
   |                ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/openai/completion.rs:63:12
   |
63 |     tools: ArrayVec<ToolDefinition, MAX_TOOLS>,
   |            ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
  --> packages/provider/src/clients/openai/completion.rs:90:27
   |
90 |             chat_history: ArrayVec::new(),
   |                           ^^^^^^^^ use of undeclared type `ArrayVec`
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
  --> packages/provider/src/clients/openai/completion.rs:91:24
   |
91 |             documents: ArrayVec::new(),
   |                        ^^^^^^^^ use of undeclared type `ArrayVec`
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
  --> packages/provider/src/clients/openai/completion.rs:92:20
   |
92 |             tools: ArrayVec::new(),
   |                    ^^^^^^^^ use of undeclared type `ArrayVec`
   |
help: consider importing this struct
   |
15 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/openai/completion.rs:516:39
    |
516 |     fn convert_tools(&self) -> Result<ArrayVec<OpenAITool<'_>, MAX_TOOLS>, CompletionError> {
    |                                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/openai/completion.rs:517:25
    |
517 |         let mut tools = ArrayVec::new();
    |                         ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
15  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/model_info.rs:112:12
    |
112 |     crate::model_info::get_model_config(model_name)
    |            ^^^^^^^^^^ unresolved import
    |
help: a struct with a similar name exists
    |
112 -     crate::model_info::get_model_config(model_name)
112 +     crate::ModelInfo::get_model_config(model_name)
    |
help: a similar path exists
    |
112 |     crate::openai::model_info::get_model_config(model_name)
    |            ++++++++
help: consider importing one of these modules
    |
6   + use crate::clients::gemini::model_info;
    |
6   + use crate::clients::mistral::model_info;
    |
help: if you import `model_info`, refer to it directly
    |
112 -     crate::model_info::get_model_config(model_name)
112 +     model_info::get_model_config(model_name)
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/clients/openai/moderation.rs:43:46
   |
43 |     pub category_applied_input_types: Option<HashMap<String, ZeroOneOrMany<String>>>}
   |                                              ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/clients/openai/streaming.rs:142:21
    |
142 |     pub tool_calls: HashMap<u32, PartialToolCall>,
    |                     ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/clients/openai/streaming.rs:253:25
    |
253 |             tool_calls: HashMap::with_capacity(8),
    |                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:456:44
    |
456 |                 let messages_call = crate::providers::openai::messages::OpenAIToolCall {
    |                                            ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
456 |                 let messages_call = crate::fluent_ai_domain::model::providers::openai::messages::OpenAIToolCall {
    |                                            +++++++++++++++++++++++++
help: consider importing this module
    |
6   + use crate::openai::messages;
    |
help: if you import `messages`, refer to it directly
    |
456 -                 let messages_call = crate::providers::openai::messages::OpenAIToolCall {
456 +                 let messages_call = messages::OpenAIToolCall {
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:459:38
    |
459 |                     function: crate::providers::openai::messages::OpenAIFunctionCall {
    |                                      ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
459 |                     function: crate::fluent_ai_domain::model::providers::openai::messages::OpenAIFunctionCall {
    |                                      +++++++++++++++++++++++++
help: consider importing this module
    |
6   + use crate::openai::messages;
    |
help: if you import `messages`, refer to it directly
    |
459 -                     function: crate::providers::openai::messages::OpenAIFunctionCall {
459 +                     function: messages::OpenAIFunctionCall {
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:468:40
    |
468 |                     .map(|call| crate::providers::openai::messages::OpenAIToolCall {
    |                                        ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
468 |                     .map(|call| crate::fluent_ai_domain::model::providers::openai::messages::OpenAIToolCall {
    |                                        +++++++++++++++++++++++++
help: consider importing this module
    |
6   + use crate::openai::messages;
    |
help: if you import `messages`, refer to it directly
    |
468 -                     .map(|call| crate::providers::openai::messages::OpenAIToolCall {
468 +                     .map(|call| messages::OpenAIToolCall {
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:471:42
    |
471 |                         function: crate::providers::openai::messages::OpenAIFunctionCall {
    |                                          ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
471 |                         function: crate::fluent_ai_domain::model::providers::openai::messages::OpenAIFunctionCall {
    |                                          +++++++++++++++++++++++++
help: consider importing this module
    |
6   + use crate::openai::messages;
    |
help: if you import `messages`, refer to it directly
    |
471 -                         function: crate::providers::openai::messages::OpenAIFunctionCall {
471 +                         function: messages::OpenAIFunctionCall {
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:484:29
    |
484 |                 Some(crate::providers::openai::OpenAIContent::Text(
    |                             ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
484 |                 Some(crate::fluent_ai_domain::model::providers::openai::OpenAIContent::Text(
    |                             +++++++++++++++++++++++++
help: consider importing this enum
    |
6   + use crate::openai::messages::OpenAIContent;
    |
help: if you import `OpenAIContent`, refer to it directly
    |
484 -                 Some(crate::providers::openai::OpenAIContent::Text(
484 +                 Some(OpenAIContent::Text(
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:492:24
    |
492 |                 crate::providers::openai::messages::OpenAIFunctionCall {
    |                        ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
492 |                 crate::fluent_ai_domain::model::providers::openai::messages::OpenAIFunctionCall {
    |                        +++++++++++++++++++++++++
help: consider importing this module
    |
6   + use crate::openai::messages;
    |
help: if you import `messages`, refer to it directly
    |
492 -                 crate::providers::openai::messages::OpenAIFunctionCall {
492 +                 messages::OpenAIFunctionCall {
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/clients/openai/vision.rs:161:21
    |
161 |     pub attributes: HashMap<String, String>}
    |                     ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0573]: expected type, found module `models`
   --> packages/provider/src/clients/openai/mod.rs:299:6
    |
299 | impl models {
    |      ^^^^^^ not a type

error[E0425]: cannot find function `is_embedding_model` in module `models`
   --> packages/provider/src/clients/openai/mod.rs:499:20
    |
499 |         if models::is_embedding_model(model) {
    |                    ^^^^^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `cost_tier` in module `models`
   --> packages/provider/src/clients/openai/mod.rs:617:17
    |
617 |         models::cost_tier(model)
    |                 ^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `supports_vision` in module `models`
   --> packages/provider/src/clients/openai/mod.rs:641:33
    |
641 |             "vision" => models::supports_vision(model),
    |                                 ^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
560 +     use crate::openai::vision::supports_vision;
    |
help: if you import `supports_vision`, refer to it directly
    |
641 -             "vision" => models::supports_vision(model),
641 +             "vision" => supports_vision(model),
    |

error[E0425]: cannot find function `supports_function_calling` in module `models`
   --> packages/provider/src/clients/openai/mod.rs:642:43
    |
642 |             "function_calling" => models::supports_function_calling(model),
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `supports_streaming` in module `models`
   --> packages/provider/src/clients/openai/mod.rs:643:36
    |
643 |             "streaming" => models::supports_streaming(model),
    |                                    ^^^^^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `is_embedding_model` in module `models`
   --> packages/provider/src/clients/openai/mod.rs:644:36
    |
644 |             "embedding" => models::is_embedding_model(model),
    |                                    ^^^^^^^^^^^^^^^^^^ not found in `models`

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/openrouter/client.rs:146:34
    |
146 |     ) -> Result<fluent_ai_http3::Response> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
146 -     ) -> Result<fluent_ai_http3::Response> {
146 +     ) -> Result<Response> {
    |

error[E0433]: failed to resolve: use of undeclared type `HttpUtils`
   --> packages/provider/src/clients/openrouter/completion.rs:159:17
    |
159 |                 HttpUtils::validate_temperature(temp as f32, Provider::OpenRouter).map_err(|e| {
    |                 ^^^^^^^^^ use of undeclared type `HttpUtils`
    |
help: consider importing this struct
    |
2   + use crate::utils::HttpUtils;
    |

error[E0433]: failed to resolve: use of undeclared type `Provider`
   --> packages/provider/src/clients/openrouter/completion.rs:159:62
    |
159 |                 HttpUtils::validate_temperature(temp as f32, Provider::OpenRouter).map_err(|e| {
    |                                                              ^^^^^^^^ use of undeclared type `Provider`
    |
help: consider importing one of these enums
    |
2   + use crate::domain::Provider;
    |
2   + use crate::utils::Provider;
    |
2   + use fluent_ai_domain::Provider;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpUtils`
   --> packages/provider/src/clients/openrouter/completion.rs:167:17
    |
167 |                 HttpUtils::validate_max_tokens(max_tokens, Provider::OpenRouter).map_err(|e| {
    |                 ^^^^^^^^^ use of undeclared type `HttpUtils`
    |
help: consider importing this struct
    |
2   + use crate::utils::HttpUtils;
    |

error[E0433]: failed to resolve: use of undeclared type `Provider`
   --> packages/provider/src/clients/openrouter/completion.rs:167:60
    |
167 |                 HttpUtils::validate_max_tokens(max_tokens, Provider::OpenRouter).map_err(|e| {
    |                                                            ^^^^^^^^ use of undeclared type `Provider`
    |
help: consider importing one of these enums
    |
2   + use crate::domain::Provider;
    |
2   + use crate::utils::Provider;
    |
2   + use fluent_ai_domain::Provider;
    |

error[E0433]: failed to resolve: could not find `types` in `super`
   --> packages/provider/src/clients/openrouter/completion.rs:177:52
    |
177 |                 if openrouter_tools.len() < super::types::MAX_TOOLS {
    |                                                    ^^^^^ could not find `types` in `super`
    |
help: consider importing one of these modules
    |
2   + use crate::clients::anthropic::types;
    |
2   + use crate::clients::xai::types;
    |
help: if you import `types`, refer to it directly
    |
177 -                 if openrouter_tools.len() < super::types::MAX_TOOLS {
177 +                 if openrouter_tools.len() < types::MAX_TOOLS {
    |

error[E0425]: cannot find function `send_openrouter_streaming_request` in module `super::streaming`
   --> packages/provider/src/clients/openrouter/completion.rs:222:27
    |
222 |         super::streaming::send_openrouter_streaming_request(builder).await
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `super::streaming`

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/openrouter/streaming.rs:132:19
    |
132 |     active_calls: ArrayVec<ToolCallState, 16>, // Support 16 concurrent calls
    |                   ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/openrouter/streaming.rs:147:14
    |
147 |     buffers: ArrayVec<[u8; SIZE], 32>,
    |              ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/openrouter/streaming.rs:285:23
    |
285 |     validation_cache: ArrayVec<JsonValidationCheckpoint, 64>,
    |                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/openrouter/streaming.rs:315:23
    |
315 |     historical_sizes: ArrayVec<u16, 32>,
    |                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/openrouter/streaming.rs:328:23
    |
328 |     prediction_cache: ArrayVec<PredictionEntry, 128>,
    |                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/openrouter/streaming.rs:365:31
    |
365 |             validation_cache: ArrayVec::new(),
    |                               ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/openrouter/streaming.rs:589:31
    |
589 |             historical_sizes: ArrayVec::new(),
    |                               ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/openrouter/streaming.rs:608:31
    |
608 |             prediction_cache: ArrayVec::new(),
    |                               ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/openrouter/streaming.rs:693:26
    |
693 |     measurement_windows: ArrayVec<MeasurementWindow, 64>,
    |                          ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `AtomicUsize` in this scope
   --> packages/provider/src/clients/openrouter/streaming.rs:694:21
    |
694 |     current_window: AtomicUsize,
    |                     ^^^^^^^^^^^ not found in this scope
    |
    = note: struct `crate::image_processing::factory::batch_processing::AtomicUsize` exists but is inaccessible
help: consider importing this struct
    |
14  + use std::sync::atomic::AtomicUsize;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/openrouter/streaming.rs:695:26
    |
695 |     bottleneck_patterns: ArrayVec<BottleneckPattern, 16>,
    |                          ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/openrouter/streaming.rs:738:28
    |
738 |     current_optimizations: ArrayVec<ActiveOptimization, 8>,
    |                            ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/openrouter/streaming.rs:772:27
    |
772 |     optimization_history: ArrayVec<OptimizationResult, 32>,
    |                           ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/openrouter/streaming.rs:773:20
    |
773 |     success_rates: ArrayVec<f32, 16>,
    |                    ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
14  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
    --> packages/provider/src/clients/openrouter/streaming.rs:1139:34
     |
1139 |             measurement_windows: ArrayVec::new_const(),
     |                                  ^^^^^^^^ use of undeclared type `ArrayVec`
     |
help: consider importing this struct
     |
14   + use arrayvec::ArrayVec;
     |

error[E0433]: failed to resolve: use of undeclared type `AtomicUsize`
    --> packages/provider/src/clients/openrouter/streaming.rs:1140:29
     |
1140 |             current_window: AtomicUsize::new(0),
     |                             ^^^^^^^^^^^ use of undeclared type `AtomicUsize`
     |
     = note: struct `crate::image_processing::factory::batch_processing::AtomicUsize` exists but is inaccessible
help: consider importing this struct
     |
14   + use std::sync::atomic::AtomicUsize;
     |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
    --> packages/provider/src/clients/openrouter/streaming.rs:1141:34
     |
1141 |             bottleneck_patterns: ArrayVec::new_const(),
     |                                  ^^^^^^^^ use of undeclared type `ArrayVec`
     |
help: consider importing this struct
     |
14   + use arrayvec::ArrayVec;
     |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
    --> packages/provider/src/clients/openrouter/streaming.rs:1162:36
     |
1162 |             current_optimizations: ArrayVec::new_const(),
     |                                    ^^^^^^^^ use of undeclared type `ArrayVec`
     |
help: consider importing this struct
     |
14   + use arrayvec::ArrayVec;
     |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
    --> packages/provider/src/clients/openrouter/streaming.rs:1180:35
     |
1180 |             optimization_history: ArrayVec::new_const(),
     |                                   ^^^^^^^^ use of undeclared type `ArrayVec`
     |
help: consider importing this struct
     |
14   + use arrayvec::ArrayVec;
     |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
    --> packages/provider/src/clients/openrouter/streaming.rs:1181:28
     |
1181 |             success_rates: ArrayVec::new_const(),
     |                            ^^^^^^^^ use of undeclared type `ArrayVec`
     |
help: consider importing this struct
     |
14   + use arrayvec::ArrayVec;
     |

error[E0412]: cannot find type `ArrayVec` in this scope
    --> packages/provider/src/clients/openrouter/streaming.rs:1273:24
     |
1273 |     active_tool_calls: ArrayVec<ActiveToolCall, 16>,
     |                        ^^^^^^^^ not found in this scope
     |
help: consider importing this struct
     |
14   + use arrayvec::ArrayVec;
     |

error[E0277]: the trait bound `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>: Clone` is not satisfied
  --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:23:5
   |
20 | #[derive(Clone)]
   |          ----- in this derive macro expansion
...
23 |     recording_sessions: SkipMap<Uuid, MacroRecordingSession>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>`

error[E0412]: cannot find type `ArrayVec` in this scope
    --> packages/provider/src/clients/openrouter/streaming.rs:1287:23
     |
1287 |     tool_call_buffer: ArrayVec<ToolCall, 16>,
     |                       ^^^^^^^^ not found in this scope
     |
help: consider importing this struct
     |
14   + use arrayvec::ArrayVec;
     |

error[E0277]: the trait bound `ConsistentCounter: Clone` is not satisfied
  --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:27:5
   |
20 | #[derive(Clone)]
   |          ----- in this derive macro expansion
...
27 |     macro_counter: ConsistentCounter}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `ConsistentCounter`

error[E0412]: cannot find type `AtomicUsize` in this scope
    --> packages/provider/src/clients/openrouter/streaming.rs:1293:17
     |
1293 |     cache_size: AtomicUsize,
     |                 ^^^^^^^^^^^ not found in this scope
     |
     = note: struct `crate::image_processing::factory::batch_processing::AtomicUsize` exists but is inaccessible
help: consider importing this struct
     |
14   + use std::sync::atomic::AtomicUsize;
     |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
    --> packages/provider/src/clients/openrouter/streaming.rs:1302:32
     |
1302 |             active_tool_calls: ArrayVec::new(),
     |                                ^^^^^^^^ use of undeclared type `ArrayVec`
     |
help: consider importing this struct
     |
14   + use arrayvec::ArrayVec;
     |

error[E0412]: cannot find type `ArrayVec` in this scope
    --> packages/provider/src/clients/openrouter/streaming.rs:1309:17
     |
1309 |     ) -> Result<ArrayVec<RawStreamingChoice, 16>, ToolCallError> {
     |                 ^^^^^^^^ not found in this scope
     |
help: consider importing this struct
     |
14   + use arrayvec::ArrayVec;
     |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
    --> packages/provider/src/clients/openrouter/streaming.rs:1310:27
     |
1310 |         let mut results = ArrayVec::new();
     |                           ^^^^^^^^ use of undeclared type `ArrayVec`
     |
help: consider importing this struct
     |
14   + use arrayvec::ArrayVec;
     |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
    --> packages/provider/src/clients/openrouter/streaming.rs:1634:31
     |
1634 |             tool_call_buffer: ArrayVec::new(),
     |                               ^^^^^^^^ use of undeclared type `ArrayVec`
     |
help: consider importing this struct
     |
14   + use arrayvec::ArrayVec;
     |

error[E0433]: failed to resolve: use of undeclared type `AtomicUsize`
    --> packages/provider/src/clients/openrouter/streaming.rs:1643:25
     |
1643 |             cache_size: AtomicUsize::new(0),
     |                         ^^^^^^^^^^^ use of undeclared type `AtomicUsize`
     |
     = note: struct `crate::image_processing::factory::batch_processing::AtomicUsize` exists but is inaccessible
help: consider importing this struct
     |
14   + use std::sync::atomic::AtomicUsize;
     |

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/perplexity/client.rs:138:34
    |
138 |     ) -> Result<fluent_ai_http3::Response, HttpError> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
138 -     ) -> Result<fluent_ai_http3::Response, HttpError> {
138 +     ) -> Result<Response, HttpError> {
    |

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:45:66
   |
45 |                 let recording_sessions = self.recording_sessions.clone();
   |                                                                  ^^^^^ method not found in `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>`

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/perplexity/client.rs:485:24
    |
485 |                 crate::providers::openai::StreamingCompletionResponse,
    |                        ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
485 |                 crate::fluent_ai_domain::model::providers::openai::StreamingCompletionResponse,
    |                        +++++++++++++++++++++++++
help: consider importing this module through its public re-export
    |
7   + use crate::openai;
    |
help: if you import `openai`, refer to it directly
    |
485 -                 crate::providers::openai::StreamingCompletionResponse,
485 +                 openai::StreamingCompletionResponse,
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/perplexity/completion.rs:221:37
    |
221 |     type StreamingResponse = crate::providers::openai::StreamingCompletionResponse;
    |                                     ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
221 |     type StreamingResponse = crate::fluent_ai_domain::model::providers::openai::StreamingCompletionResponse;
    |                                     +++++++++++++++++++++++++
help: consider importing this module through its public re-export
    |
8   + use crate::openai;
    |
help: if you import `openai`, refer to it directly
    |
221 -     type StreamingResponse = crate::providers::openai::StreamingCompletionResponse;
221 +     type StreamingResponse = openai::StreamingCompletionResponse;
    |

error[E0599]: no function or associated item named `custom` found for struct `serde_json::Error` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:56:48
    |
56  | ...                   serde_json::Error::custom("System time error")
    |                                          ^^^^^^ function or associated item not found in `serde_json::Error`
    |
note: if you're trying to build a new `serde_json::Error`, consider using `serde_json::Error::io` which returns `serde_json::Error`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.141/src/error.rs:326:5
    |
326 |     pub fn io(error: io::Error) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
help: the following traits which provide `custom` are implemented but not in scope; perhaps you want to import one of them
    |
6   + use crate::streaming::constants::_::_serde::de::Error;
    |
6   + use crate::streaming::constants::_::_serde::ser::Error;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/perplexity/completion.rs:300:16
    |
300 |         crate::providers::openai::send_compatible_streaming_request(builder).await
    |                ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
300 |         crate::fluent_ai_domain::model::providers::openai::send_compatible_streaming_request(builder).await
    |                +++++++++++++++++++++++++
help: consider importing this module through its public re-export
    |
8   + use crate::openai;
    |
help: if you import `openai`, refer to it directly
    |
300 -         crate::providers::openai::send_compatible_streaming_request(builder).await
300 +         openai::send_compatible_streaming_request(builder).await
    |

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/together/client.rs:149:34
    |
149 |     ) -> Result<fluent_ai_http3::Response, HttpError> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
149 -     ) -> Result<fluent_ai_http3::Response, HttpError> {
149 +     ) -> Result<Response, HttpError> {
    |

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/together/client.rs:164:34
    |
164 |     ) -> Result<fluent_ai_http3::Response, HttpError> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
164 -     ) -> Result<fluent_ai_http3::Response, HttpError> {
164 +     ) -> Result<Response, HttpError> {
    |

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/together/client.rs:181:34
    |
181 |     ) -> Result<fluent_ai_http3::Response, HttpError> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
181 -     ) -> Result<fluent_ai_http3::Response, HttpError> {
181 +     ) -> Result<Response, HttpError> {
    |

error[E0412]: cannot find type `CompletionResponse` in module `super::completion`
   --> packages/provider/src/clients/together/client.rs:551:63
    |
551 |             completion::CompletionResponse<super::completion::CompletionResponse>,
    |                                                               ^^^^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/request.rs:20:1
    |
20  | pub struct CompletionRequest {
    | ---------------------------- similarly named struct `CompletionRequest` defined here
    |
note: struct `crate::clients::ollama::completion::CompletionResponse` exists but is inaccessible
   --> packages/provider/src/clients/ollama/completion.rs:51:1
    |
51  | pub struct CompletionResponse {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: a struct with a similar name exists
    |
551 -             completion::CompletionResponse<super::completion::CompletionResponse>,
551 +             completion::CompletionResponse<super::completion::CompletionRequest>,
    |
help: consider importing one of these items
    |
7   + use crate::CompletionResponse;
    |
7   + use crate::clients::mistral::completion::CompletionResponse;
    |
7   + use crate::clients::openrouter::completion::CompletionResponse;
    |
7   + use crate::clients::perplexity::completion::CompletionResponse;
    |
      and 5 other candidates
help: if you import `CompletionResponse`, refer to it directly
    |
551 -             completion::CompletionResponse<super::completion::CompletionResponse>,
551 +             completion::CompletionResponse<CompletionResponse>,
    |

error[E0412]: cannot find type `CompletionResponse` in module `super::completion`
   --> packages/provider/src/clients/together/client.rs:578:78
    |
578 |             crate::streaming::StreamingCompletionResponse<super::completion::CompletionResponse>,
    |                                                                              ^^^^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/request.rs:20:1
    |
20  | pub struct CompletionRequest {
    | ---------------------------- similarly named struct `CompletionRequest` defined here
    |
note: struct `crate::clients::ollama::completion::CompletionResponse` exists but is inaccessible
   --> packages/provider/src/clients/ollama/completion.rs:51:1
    |
51  | pub struct CompletionResponse {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: a struct with a similar name exists
    |
578 -             crate::streaming::StreamingCompletionResponse<super::completion::CompletionResponse>,
578 +             crate::streaming::StreamingCompletionResponse<super::completion::CompletionRequest>,
    |
help: consider importing one of these items
    |
7   + use crate::CompletionResponse;
    |
7   + use crate::clients::mistral::completion::CompletionResponse;
    |
7   + use crate::clients::openrouter::completion::CompletionResponse;
    |
7   + use crate::clients::perplexity::completion::CompletionResponse;
    |
      and 5 other candidates
help: if you import `CompletionResponse`, refer to it directly
    |
578 -             crate::streaming::StreamingCompletionResponse<super::completion::CompletionResponse>,
578 +             crate::streaming::StreamingCompletionResponse<CompletionResponse>,
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `completion`
   --> packages/provider/src/clients/together/completion.rs:150:29
    |
150 |         completion_request: completion::CompletionRequest,
    |                             ^^^^^^^^^^ use of unresolved module or unlinked crate `completion`
    |
note: these modules exist but are inaccessible
   --> packages/provider/src/clients/bedrock/mod.rs:45:1
    |
45  | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::clients::bedrock::completion`: not accessible
    |
   ::: packages/provider/src/clients/groq/mod.rs:8:1
    |
8   | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
    |
   ::: packages/provider/src/clients/ollama/mod.rs:8:1
    |
8   | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::clients::ollama::completion`: not accessible
help: to make use of source file packages/provider/src/clients/together/completion.rs, use `mod completion` in this file to declare the module
   --> packages/provider/src/lib.rs:7:1
    |
7   + mod completion;
    |
help: consider importing one of these modules
    |
12  + use crate::clients::azure::completion;
    |
12  + use crate::clients::gemini::completion;
    |
12  + use crate::clients::mistral::completion;
    |
12  + use crate::clients::openrouter::completion;
    |
      and 6 other candidates

error[E0433]: failed to resolve: use of undeclared type `HttpUtils`
   --> packages/provider/src/clients/together/completion.rs:193:17
    |
193 |                 HttpUtils::validate_temperature(temp as f32, Provider::Together).map_err(|e| {
    |                 ^^^^^^^^^ use of undeclared type `HttpUtils`
    |
help: consider importing this struct
    |
12  + use crate::utils::HttpUtils;
    |

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:103:58
    |
103 |         let recording_sessions = self.recording_sessions.clone();
    |                                                          ^^^^^ method not found in `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>`

error[E0433]: failed to resolve: use of undeclared type `Provider`
   --> packages/provider/src/clients/together/completion.rs:193:62
    |
193 |                 HttpUtils::validate_temperature(temp as f32, Provider::Together).map_err(|e| {
    |                                                              ^^^^^^^^ use of undeclared type `Provider`
    |
help: consider importing one of these enums
    |
12  + use crate::domain::Provider;
    |
12  + use crate::utils::Provider;
    |
12  + use fluent_ai_domain::Provider;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpUtils`
   --> packages/provider/src/clients/together/completion.rs:201:17
    |
201 |                 HttpUtils::validate_max_tokens(max_tokens, Provider::Together).map_err(|e| {
    |                 ^^^^^^^^^ use of undeclared type `HttpUtils`
    |
help: consider importing this struct
    |
12  + use crate::utils::HttpUtils;
    |

error[E0433]: failed to resolve: use of undeclared type `Provider`
   --> packages/provider/src/clients/together/completion.rs:201:60
    |
201 |                 HttpUtils::validate_max_tokens(max_tokens, Provider::Together).map_err(|e| {
    |                                                            ^^^^^^^^ use of undeclared type `Provider`
    |
help: consider importing one of these enums
    |
12  + use crate::domain::Provider;
    |
12  + use crate::utils::Provider;
    |
12  + use fluent_ai_domain::Provider;
    |

error[E0433]: failed to resolve: could not find `types` in `super`
   --> packages/provider/src/clients/together/completion.rs:211:50
    |
211 |                 if together_tools.len() < super::types::MAX_TOOLS {
    |                                                  ^^^^^ could not find `types` in `super`
    |
help: consider importing one of these modules
    |
12  + use crate::clients::anthropic::types;
    |
12  + use crate::clients::xai::types;
    |
help: if you import `types`, refer to it directly
    |
211 -                 if together_tools.len() < super::types::MAX_TOOLS {
211 +                 if together_tools.len() < types::MAX_TOOLS {
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `completion`
   --> packages/provider/src/clients/together/completion.rs:234:6
    |
234 | impl completion::CompletionModel for TogetherCompletionModel {
    |      ^^^^^^^^^^ use of unresolved module or unlinked crate `completion`
    |
note: these modules exist but are inaccessible
   --> packages/provider/src/clients/groq/mod.rs:8:1
    |
8   | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
    |
   ::: packages/provider/src/clients/ollama/mod.rs:8:1
    |
8   | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::clients::ollama::completion`: not accessible
help: to make use of source file packages/provider/src/clients/together/completion.rs, use `mod completion` in this file to declare the module
   --> packages/provider/src/lib.rs:7:1
    |
7   + mod completion;
    |
help: consider importing one of these modules
    |
12  + use crate::clients::azure::completion;
    |
12  + use crate::clients::gemini::completion;
    |
12  + use crate::clients::huggingface::completion;
    |
12  + use crate::clients::mistral::completion;
    |
      and 5 other candidates

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:132:58
    |
132 |         let recording_sessions = self.recording_sessions.clone();
    |                                                          ^^^^^ method not found in `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `completion`
   --> packages/provider/src/clients/together/completion.rs:241:29
    |
241 |         completion_request: completion::CompletionRequest,
    |                             ^^^^^^^^^^ use of unresolved module or unlinked crate `completion`
    |
note: these modules exist but are inaccessible
   --> packages/provider/src/clients/bedrock/mod.rs:45:1
    |
45  | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::clients::bedrock::completion`: not accessible
    |
   ::: packages/provider/src/clients/groq/mod.rs:8:1
    |
8   | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
    |
   ::: packages/provider/src/clients/ollama/mod.rs:8:1
    |
8   | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::clients::ollama::completion`: not accessible
help: to make use of source file packages/provider/src/clients/together/completion.rs, use `mod completion` in this file to declare the module
   --> packages/provider/src/lib.rs:7:1
    |
7   + mod completion;
    |
help: consider importing one of these modules
    |
12  + use crate::clients::azure::completion;
    |
12  + use crate::clients::gemini::completion;
    |
12  + use crate::clients::mistral::completion;
    |
12  + use crate::clients::openrouter::completion;
    |
      and 6 other candidates

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `completion`
   --> packages/provider/src/clients/together/completion.rs:242:17
    |
242 |     ) -> Result<completion::CompletionResponse<TogetherChatResponse>, CompletionError> {
    |                 ^^^^^^^^^^ use of unresolved module or unlinked crate `completion`
    |
note: these modules exist but are inaccessible
   --> packages/provider/src/clients/bedrock/mod.rs:45:1
    |
45  | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::clients::bedrock::completion`: not accessible
    |
   ::: packages/provider/src/clients/groq/mod.rs:8:1
    |
8   | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::clients::groq::completion`: not accessible
    |
   ::: packages/provider/src/clients/ollama/mod.rs:8:1
    |
8   | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::clients::ollama::completion`: not accessible
    |
   ::: packages/provider/src/clients/openai/mod.rs:51:1
    |
51  | mod completion;
    | ^^^^^^^^^^^^^^^ `crate::openai::completion`: not accessible
help: to make use of source file packages/provider/src/clients/together/completion.rs, use `mod completion` in this file to declare the module
   --> packages/provider/src/lib.rs:7:1
    |
7   + mod completion;
    |
help: consider importing one of these modules
    |
12  + use crate::clients::azure::completion;
    |
12  + use crate::clients::gemini::completion;
    |
12  + use crate::clients::mistral::completion;
    |
12  + use crate::clients::openrouter::completion;
    |
      and 6 other candidates

error[E0425]: cannot find function `send_openai_streaming_request` in module `openai`
   --> packages/provider/src/clients/together/completion.rs:318:17
    |
318 |           openai::send_openai_streaming_request(self.client.http_client.clone(), http_request).await
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `send_compatible_streaming_request`
    |
   ::: packages/provider/src/clients/openai/streaming.rs:748:1
    |
748 | / pub async fn send_compatible_streaming_request(
749 | |     client: &fluent_ai_http3::HttpClient,
750 | |     url: &str,
751 | |     headers: std::collections::HashMap<String, String>,
...   |
796 | |     Ok(stream)
797 | | }
    | |_- similarly named function `send_compatible_streaming_request` defined here

error[E0412]: cannot find type `EmbeddingModel` in this scope
  --> packages/provider/src/clients/together/embedding.rs:59:37
   |
59 | impl embeddings::EmbeddingModel for EmbeddingModel {
   |                                     ^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::EmbeddingModel;
   |
6  + use crate::clients::gemini::embedding::EmbeddingModel;
   |
6  + use crate::domain::context::EmbeddingModel;
   |
6  + use crate::domain::embedding::EmbeddingModel;
   |
     and 4 other candidates

error[E0412]: cannot find type `EmbeddingModel` in this scope
   --> packages/provider/src/clients/together/embedding.rs:120:6
    |
120 | impl EmbeddingModel {
    |      ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::EmbeddingModel;
    |
6   + use crate::clients::gemini::embedding::EmbeddingModel;
    |
6   + use crate::domain::context::EmbeddingModel;
    |
6   + use crate::domain::embedding::EmbeddingModel;
    |
      and 4 other candidates

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/xai/client.rs:164:34
    |
164 |     ) -> Result<fluent_ai_http3::Response> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
164 -     ) -> Result<fluent_ai_http3::Response> {
164 +     ) -> Result<Response> {
    |

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:166:58
    |
166 |         let recording_sessions = self.recording_sessions.clone();
    |                                                          ^^^^^ method not found in `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>`

error[E0412]: cannot find type `Document` in module `completion`
   --> packages/provider/src/clients/xai/client.rs:275:32
    |
275 |     documents: Vec<completion::Document>,
    |                                ^^^^^^^^ not found in `completion`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::Document;
    |
7   + use fluent_ai_domain::Document;
    |
7   + use yyaml::parser::Document;
    |
help: if you import `Document`, refer to it directly
    |
275 -     documents: Vec<completion::Document>,
275 +     documents: Vec<Document>,
    |

error[E0412]: cannot find type `Document` in module `completion`
   --> packages/provider/src/clients/xai/client.rs:368:54
    |
368 |     pub fn documents(mut self, docs: Vec<completion::Document>) -> Self {
    |                                                      ^^^^^^^^ not found in `completion`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::Document;
    |
7   + use fluent_ai_domain::Document;
    |
7   + use yyaml::parser::Document;
    |
help: if you import `Document`, refer to it directly
    |
368 -     pub fn documents(mut self, docs: Vec<completion::Document>) -> Self {
368 +     pub fn documents(mut self, docs: Vec<Document>) -> Self {
    |

error[E0404]: expected trait, found struct `Prompt`
   --> packages/provider/src/clients/xai/client.rs:539:10
    |
539 | impl<'a> Prompt for XAICompletionBuilder<'a, NeedsPrompt> {
    |          ^^^^^^ not a trait

error[E0412]: cannot find type `XaiCompletionModel` in module `completion`
   --> packages/provider/src/clients/xai/client.rs:579:30
    |
579 |     type Model = completion::XaiCompletionModel;
    |                              ^^^^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/core.rs:14:1
    |
14  | pub trait CompletionModel: Send + Sync + 'static {
    | ------------------------------------------------ similarly named trait `CompletionModel` defined here
    |
help: a trait with a similar name exists
    |
579 -     type Model = completion::XaiCompletionModel;
579 +     type Model = completion::CompletionModel;
    |
help: consider importing this struct
    |
7   + use crate::clients::xai::completion::XaiCompletionModel;
    |
help: if you import `XaiCompletionModel`, refer to it directly
    |
579 -     type Model = completion::XaiCompletionModel;
579 +     type Model = XaiCompletionModel;
    |

error[E0433]: failed to resolve: could not find `XaiCompletionModel` in `completion`
   --> packages/provider/src/clients/xai/client.rs:582:21
    |
582 |         completion::XaiCompletionModel::new(self.clone(), model)
    |                     ^^^^^^^^^^^^^^^^^^ could not find `XaiCompletionModel` in `completion`
    |
help: a trait with a similar name exists
    |
582 -         completion::XaiCompletionModel::new(self.clone(), model)
582 +         completion::CompletionModel::new(self.clone(), model)
    |
help: consider importing this struct
    |
7   + use crate::clients::xai::completion::XaiCompletionModel;
    |
help: if you import `XaiCompletionModel`, refer to it directly
    |
582 -         completion::XaiCompletionModel::new(self.clone(), model)
582 +         XaiCompletionModel::new(self.clone(), model)
    |

error[E0412]: cannot find type `StreamingResponse` in module `crate::streaming`
   --> packages/provider/src/clients/xai/completion.rs:188:35
    |
188 |     ) -> Result<crate::streaming::StreamingResponse<Self::StreamingResponse>, CompletionError> {
    |                                   ^^^^^^^^^^^^^^^^^ not found in `crate::streaming`
    |
help: consider importing one of these items
    |
8   + use crate::StreamingResponse;
    |
8   + use crate::clients::gemini::StreamingResponse;
    |
8   + use crate::clients::xai::completion::completion::StreamingResponse;
    |
8   + use crate::domain::http::StreamingResponse;
    |
      and 2 other candidates
help: if you import `StreamingResponse`, refer to it directly
    |
188 -     ) -> Result<crate::streaming::StreamingResponse<Self::StreamingResponse>, CompletionError> {
188 +     ) -> Result<StreamingResponse<Self::StreamingResponse>, CompletionError> {
    |

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:200:58
    |
200 |         let recording_sessions = self.recording_sessions.clone();
    |                                                          ^^^^^ method not found in `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>`

error[E0433]: failed to resolve: could not find `StreamingResponse` in `streaming`
   --> packages/provider/src/clients/xai/completion.rs:218:30
    |
218 |         Ok(crate::streaming::StreamingResponse::from_sse_stream(
    |                              ^^^^^^^^^^^^^^^^^ could not find `StreamingResponse` in `streaming`
    |
help: consider importing one of these items
    |
8   + use crate::StreamingResponse;
    |
8   + use crate::clients::gemini::StreamingResponse;
    |
8   + use crate::clients::xai::completion::completion::StreamingResponse;
    |
8   + use crate::domain::http::StreamingResponse;
    |
      and 2 other candidates
help: if you import `StreamingResponse`, refer to it directly
    |
218 -         Ok(crate::streaming::StreamingResponse::from_sse_stream(
218 +         Ok(StreamingResponse::from_sse_stream(
    |

error[E0425]: cannot find function `process_openai_compatible_streaming_response` in module `openai`
  --> packages/provider/src/clients/xai/streaming.rs:38:17
   |
38 |         openai::process_openai_compatible_streaming_response(stream).await
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `openai`

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/xai/types.rs:48:19
   |
48 |     pub messages: ArrayVec<XAIMessage, MAX_MESSAGES>,
   |                   ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
7  + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/xai/types.rs:58:22
   |
58 |     pub stop: Option<ArrayVec<&'a str, 4>>,
   |                      ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
7  + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/xai/types.rs:66:23
   |
66 |     pub tools: Option<ArrayVec<XAITool, MAX_TOOLS>>,
   |                       ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
7  + use arrayvec::ArrayVec;
   |

error[E0599]: no method named `clone` found for struct `ConsistentCounter` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:202:48
    |
202 |         let macro_counter = self.macro_counter.clone();
    |                                                ^^^^^ method not found in `ConsistentCounter`

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:244:58
    |
244 |         let recording_sessions = self.recording_sessions.clone();
    |                                                          ^^^^^ method not found in `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>`

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/xai/types.rs:86:33
   |
86 |     pub context_sources: Option<ArrayVec<&'a str, 8>>}
   |                                 ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
7  + use arrayvec::ArrayVec;
   |

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:263:58
    |
263 |         let recording_sessions = self.recording_sessions.clone();
    |                                                          ^^^^^ method not found in `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>`

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/provider/src/clients/xai/types.rs:94:18
   |
94 |     pub choices: ArrayVec<XAIChoice, 8>,
   |                  ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
7  + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:113:30
    |
113 |     pub context_used: Option<ArrayVec<String, 8>>,
    |                              ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:279:58
    |
279 |         let recording_sessions = self.recording_sessions.clone();
    |                                                          ^^^^^ method not found in `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>`

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:117:36
    |
117 |     pub x_posts_referenced: Option<ArrayVec<String, 16>>}
    |                                    ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:297:58
    |
297 |         let recording_sessions = self.recording_sessions.clone();
    |                                                          ^^^^^ method not found in `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>`

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:126:15
    |
126 |     pub data: ArrayVec<XAIModel, 32>}
    |               ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:138:30
    |
138 |     pub capabilities: Option<ArrayVec<String, 8>>}
    |                              ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:328:58
    |
328 |         let recording_sessions = self.recording_sessions.clone();
    |                                                          ^^^^^ method not found in `SkipMap<Uuid, types::candle_chat::macros::types::MacroRecordingSession>`

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:161:14
    |
161 |     Multiple(ArrayVec<&'a str, MAX_DOCUMENTS>)}
    |              ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:166:15
    |
166 |     pub data: ArrayVec<XAIEmbeddingData, MAX_DOCUMENTS>,
    |               ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0599]: no method named `clone` found for struct `RwLock` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/macros/playback.rs:43:56
   |
43 |         let playback_sessions = self.playback_sessions.clone();
   |                                                        ^^^^^ method not found in `RwLock<HashMap<Uuid, MacroPlaybackSession>>`

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:173:20
    |
173 |     pub embedding: ArrayVec<f32, 1536>,
    |                    ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:206:22
    |
206 |     pub stop: Option<ArrayVec<&'a str, 4>>,
    |                      ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0599]: no method named `clone` found for struct `RwLock` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/macros/playback.rs:88:56
   |
88 |         let playback_sessions = self.playback_sessions.clone();
   |                                                        ^^^^^ method not found in `RwLock<HashMap<Uuid, MacroPlaybackSession>>`

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:224:18
    |
224 |     pub choices: ArrayVec<XAICompletionChoice, 8>,
    |                  ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:236:17
    |
236 |     pub tokens: ArrayVec<String, 1024>,
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:237:25
    |
237 |     pub token_logprobs: ArrayVec<f32, 1024>,
    |                         ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:238:23
    |
238 |     pub top_logprobs: ArrayVec<serde_json::Value, 1024>,
    |                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:239:22
    |
239 |     pub text_offset: ArrayVec<u32, 1024>}
    |                      ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0599]: no method named `dec` found for struct `ConsistentCounter` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/macros/storage.rs:64:32
   |
64 |             self.macro_counter.dec();
   |                                ^^^ method not found in `ConsistentCounter`

error[E0599]: no method named `set` found for struct `ConsistentCounter` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/storage.rs:174:28
    |
174 |         self.macro_counter.set(0);
    |                            ^^^
    |
help: there is a method `get` with a similar name, but with different arguments
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/atomic-counter-1.0.1/src/lib.rs:98:5
    |
98  |     fn get(&self) -> Self::PrimitiveType;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider pinning the expression
    |
174 ~         let mut pinned = std::pin::pin!(self.macro_counter);
175 ~         pinned.as_mut().set(0);
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:261:18
    |
261 |     pub choices: ArrayVec<XAIStreamingChoiceExtended, 8>,
    |                  ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/provider/src/clients/xai/types.rs:282:23
    |
282 |             messages: ArrayVec::new(),
    |                       ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:348:40
    |
348 |     pub fn with_tools(mut self, tools: ArrayVec<XAITool, MAX_TOOLS>) -> Self {
    |                                        ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:380:43
    |
380 |     pub fn stop_sequences(mut self, stop: ArrayVec<&'a str, 4>) -> Self {
    |                                           ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:423:52
    |
423 |     pub fn with_context_sources(mut self, sources: ArrayVec<&'a str, 8>) -> Self {
    |                                                    ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/provider/src/clients/xai/types.rs:450:49
    |
450 |     pub fn new_multiple(model: &'a str, inputs: ArrayVec<&'a str, MAX_DOCUMENTS>) -> Self {
    |                                                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/candle_backend.rs:731:18
    |
731 |         config: &HashMap<String, serde_json::Value>,
    |                  ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/candle_backend.rs:839:40
    |
839 |                     let mut metadata = HashMap::new();
    |                                        ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0599]: no method named `start_recording_sync` found for struct `MacroRecorder` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/macros/mod.rs:86:28
   |
86 |             match recorder.start_recording_sync(name, description) {
   |                            ^^^^^^^^^^^^^^^^^^^^
   |
  ::: packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:21:1
   |
21 | pub struct MacroRecorder {
   | ------------------------ method `start_recording_sync` not found for this struct
   |
help: there is a method `start_recording` with a similar name
   |
86 -             match recorder.start_recording_sync(name, description) {
86 +             match recorder.start_recording(name, description) {
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/candle_backend.rs:887:36
    |
887 |                 let mut metadata = HashMap::new();
    |                                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/image_processing/factory.rs:16:25
   |
16 |         config: Option<&HashMap<String, serde_json::Value>>,
   |                         ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/image_processing/factory.rs:28:25
   |
28 |         config: Option<&HashMap<String, serde_json::Value>>,
   |                         ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/image_processing/factory.rs:70:25
   |
70 |         config: Option<&HashMap<String, serde_json::Value>>,
   |                         ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/image_processing/factory.rs:83:25
   |
83 |         config: Option<&HashMap<String, serde_json::Value>>,
   |                         ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
6  + use crate::domain::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
6  + use hashbrown::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:110:25
    |
110 |         config: Option<&HashMap<String, serde_json::Value>>,
    |                         ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:118:25
    |
118 |         config: Option<&HashMap<String, serde_json::Value>>,
    |                         ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0599]: no method named `record_action_sync` found for struct `MacroRecorder` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/macros/mod.rs:98:28
   |
98 |             match recorder.record_action_sync(session_id, action) {
   |                            ^^^^^^^^^^^^^^^^^^
   |
  ::: packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:21:1
   |
21 | pub struct MacroRecorder {
   | ------------------------ method `record_action_sync` not found for this struct
   |
help: there is a method `record_action` with a similar name
   |
98 -             match recorder.record_action_sync(session_id, action) {
98 +             match recorder.record_action(session_id, action) {
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:218:26
    |
218 |     embedding_providers: HashMap<String, Box<dyn ImageEmbeddingProvider>>,
    |                          ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/factory.rs:226:34
    |
226 |             embedding_providers: HashMap::new(),
    |                                  ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:303:13
    |
303 |     config: HashMap<String, serde_json::Value>}
    |             ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/factory.rs:309:21
    |
309 |             config: HashMap::new()}
    |                     ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:355:27
    |
355 |     pub fn build(self) -> HashMap<String, serde_json::Value> {
    |                           ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use crate::domain::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
6   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:371:39
    |
371 |     pub fn create_optimal_config() -> HashMap<String, serde_json::Value> {
    |                                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
368 +     use crate::domain::HashMap;
    |
368 +     use std::collections::HashMap;
    |
368 +     use fluent_ai_domain::HashMap;
    |
368 +     use hashbrown::HashMap;
    |

error[E0599]: no method named `stop_recording_sync` found for struct `MacroRecorder` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/mod.rs:110:28
    |
110 |             match recorder.stop_recording_sync(session_id) {
    |                            ^^^^^^^^^^^^^^^^^^^
    |
   ::: packages/fluent-ai-candle/src/types/candle_chat/macros/recording.rs:21:1
    |
21  | pub struct MacroRecorder {
    | ------------------------ method `stop_recording_sync` not found for this struct
    |
help: there is a method `stop_recording` with a similar name
    |
110 -             match recorder.stop_recording_sync(session_id) {
110 +             match recorder.stop_recording(session_id) {
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:379:61
    |
379 |     pub fn create_device_config(device_type: DeviceType) -> HashMap<String, serde_json::Value> {
    |                                                             ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
368 +     use crate::domain::HashMap;
    |
368 +     use std::collections::HashMap;
    |
368 +     use fluent_ai_domain::HashMap;
    |
368 +     use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:392:42
    |
392 |     pub fn create_low_memory_config() -> HashMap<String, serde_json::Value> {
    |                                          ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
368 +     use crate::domain::HashMap;
    |
368 +     use std::collections::HashMap;
    |
368 +     use fluent_ai_domain::HashMap;
    |
368 +     use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:404:48
    |
404 |     pub fn create_high_performance_config() -> HashMap<String, serde_json::Value> {
    |                                                ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
368 +     use crate::domain::HashMap;
    |
368 +     use std::collections::HashMap;
    |
368 +     use fluent_ai_domain::HashMap;
    |
368 +     use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/image_processing/mod.rs:82:19
   |
82 |     pub metadata: HashMap<String, String>}
   |                   ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
7  + use crate::domain::HashMap;
   |
7  + use std::collections::HashMap;
   |
7  + use fluent_ai_domain::HashMap;
   |
7  + use hashbrown::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:129:23
    |
129 |     pub model_params: HashMap<String, serde_json::Value>}
    |                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0599]: no method named `clone` found for struct `MacroPlayer` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/mod.rs:121:34
    |
121 |         let player = self.player.clone();
    |                                  ^^^^^ method not found in `MacroPlayer`
    |
   ::: packages/fluent-ai-candle/src/types/candle_chat/macros/playback.rs:20:1
    |
20  | pub struct MacroPlayer {
    | ---------------------- method `clone` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `clone`, perhaps you need to implement it:
            candidate #1: `Clone`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/mod.rs:136:27
    |
136 |             model_params: HashMap::new()}
    |                           ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:154:23
    |
154 |     pub model_params: HashMap<String, serde_json::Value>}
    |                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/mod.rs:164:27
    |
164 |             model_params: HashMap::new()}
    |                           ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:192:27
    |
192 |     pub backend_metadata: HashMap<String, serde_json::Value>}
    |                           ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:216:27
    |
216 |     pub backend_metadata: HashMap<String, serde_json::Value>}
    |                           ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0599]: no method named `clone` found for struct `MacroPlayer` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/mod.rs:133:34
    |
133 |         let player = self.player.clone();
    |                                  ^^^^^ method not found in `MacroPlayer`
    |
   ::: packages/fluent-ai-candle/src/types/candle_chat/macros/playback.rs:20:1
    |
20  | pub struct MacroPlayer {
    | ---------------------- method `clone` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `clone`, perhaps you need to implement it:
            candidate #1: `Clone`

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:229:18
    |
229 |         config: &HashMap<String, serde_json::Value>,
    |                  ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:331:19
    |
331 |     pub metadata: HashMap<String, serde_json::Value>}
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/mod.rs:434:32
    |
434 |             let mut metadata = HashMap::new();
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
369 +     use crate::domain::HashMap;
    |
369 +     use std::collections::HashMap;
    |
369 +     use fluent_ai_domain::HashMap;
    |
369 +     use hashbrown::HashMap;
    |

error[E0412]: cannot find type `OpenAIEmbeddingRequest` in module `openai`
   --> packages/provider/src/client_factory.rs:225:44
    |
225 |             let embedding_request: openai::OpenAIEmbeddingRequest =
    |                                            ^^^^^^^^^^^^^^^^^^^^^^ not found in `openai`
    |
note: struct `crate::openai::embeddings::OpenAIEmbeddingRequest` exists but is inaccessible
   --> packages/provider/src/clients/openai/embeddings.rs:13:1
    |
13  | pub struct OpenAIEmbeddingRequest {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/security/audit.rs:155:19
    |
155 |     pub metadata: HashMap<String, String>}
    |                   ^^^^^^^
    |
   ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lib.rs:89:1
    |
89  | pub struct DashMap<K, V, S = RandomState> {
    | ----------------------------------------- similarly named struct `DashMap` defined here
    |
help: a struct with a similar name exists
    |
155 -     pub metadata: HashMap<String, String>}
155 +     pub metadata: DashMap<String, String>}
    |
help: consider importing one of these structs
    |
10  + use crate::domain::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
10  + use hashbrown::HashMap;
    |

error[E0599]: no method named `clone` found for struct `std::sync::RwLock` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/mod.rs:170:40
    |
170 |         let variables = self.variables.clone();
    |                                        ^^^^^ method not found in `std::sync::RwLock<VariableManager>`
    |
note: the method `clone` exists on the type `VariableManager`
   --> /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs:204:5
    |
204 |     fn clone(&self) -> Self;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
help: use `.read().unwrap()` to borrow the `VariableManager`, blocking the current thread until it can be acquired
    |
170 |         let variables = self.variables.read().unwrap().clone();
    |                                       ++++++++++++++++

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/security/audit.rs:369:60
    |
369 |     async fn create_metadata(&self, event: &AuditEvent) -> HashMap<String, String> {
    |                                                            ^^^^^^^
    |
   ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lib.rs:89:1
    |
89  | pub struct DashMap<K, V, S = RandomState> {
    | ----------------------------------------- similarly named struct `DashMap` defined here
    |
help: a struct with a similar name exists
    |
369 -     async fn create_metadata(&self, event: &AuditEvent) -> HashMap<String, String> {
369 +     async fn create_metadata(&self, event: &AuditEvent) -> DashMap<String, String> {
    |
help: consider importing one of these structs
    |
10  + use crate::domain::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
10  + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/security/audit.rs:370:28
    |
370 |         let mut metadata = HashMap::new();
    |                            ^^^^^^^ use of undeclared type `HashMap`
    |
help: a struct with a similar name exists
    |
370 -         let mut metadata = HashMap::new();
370 +         let mut metadata = DashMap::new();
    |
help: consider importing one of these structs
    |
10  + use crate::domain::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
10  + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/security/audit.rs:549:27
    |
549 |                 metadata: HashMap::new()}) {
    |                           ^^^^^^^ use of undeclared type `HashMap`
    |
help: a struct with a similar name exists
    |
549 -                 metadata: HashMap::new()}) {
549 +                 metadata: DashMap::new()}) {
    |
help: consider importing one of these structs
    |
10  + use crate::domain::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
10  + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/security/credentials.rs:95:31
   |
95 |     pub environment_mappings: HashMap<String, Vec<String>>,
   |                               ^^^^^^^
   |
  ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lib.rs:89:1
   |
89 | pub struct DashMap<K, V, S = RandomState> {
   | ----------------------------------------- similarly named struct `DashMap` defined here
   |
help: a struct with a similar name exists
   |
95 -     pub environment_mappings: HashMap<String, Vec<String>>,
95 +     pub environment_mappings: DashMap<String, Vec<String>>,
   |
help: consider importing one of these structs
   |
10 + use crate::domain::HashMap;
   |
10 + use std::collections::HashMap;
   |
10 + use fluent_ai_domain::HashMap;
   |
10 + use hashbrown::HashMap;
   |

error[E0599]: no method named `clone` found for struct `std::sync::RwLock` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/mod.rs:189:40
    |
189 |         let variables = self.variables.clone();
    |                                        ^^^^^ method not found in `std::sync::RwLock<VariableManager>`
    |
note: the method `clone` exists on the type `VariableManager`
   --> /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs:204:5
    |
204 |     fn clone(&self) -> Self;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
help: use `.read().unwrap()` to borrow the `VariableManager`, blocking the current thread until it can be acquired
    |
189 |         let variables = self.variables.read().unwrap().clone();
    |                                       ++++++++++++++++

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/security/credentials.rs:138:40
    |
138 |         let mut environment_mappings = HashMap::new();
    |                                        ^^^^^^^ use of undeclared type `HashMap`
    |
help: a struct with a similar name exists
    |
138 -         let mut environment_mappings = HashMap::new();
138 +         let mut environment_mappings = DashMap::new();
    |
help: consider importing one of these structs
    |
10  + use crate::domain::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
10  + use hashbrown::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/security/credentials.rs:216:34
    |
216 |     validation_cache: Arc<RwLock<HashMap<String, (bool, SystemTime)>>>}
    |                                  ^^^^^^^
    |
   ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lib.rs:89:1
    |
89  | pub struct DashMap<K, V, S = RandomState> {
    | ----------------------------------------- similarly named struct `DashMap` defined here
    |
help: a struct with a similar name exists
    |
216 -     validation_cache: Arc<RwLock<HashMap<String, (bool, SystemTime)>>>}
216 +     validation_cache: Arc<RwLock<DashMap<String, (bool, SystemTime)>>>}
    |
help: consider importing one of these structs
    |
10  + use crate::domain::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
10  + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/security/credentials.rs:251:52
    |
251 |             validation_cache: Arc::new(RwLock::new(HashMap::new()))})
    |                                                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: a struct with a similar name exists
    |
251 -             validation_cache: Arc::new(RwLock::new(HashMap::new()))})
251 +             validation_cache: Arc::new(RwLock::new(DashMap::new()))})
    |
help: consider importing one of these structs
    |
10  + use crate::domain::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
10  + use hashbrown::HashMap;
    |

error[E0425]: cannot find function `serialize` in crate `bincode`
   --> packages/provider/src/security/encryption.rs:196:22
    |
196 |             bincode::serialize(&encrypted_data).map_err(|e| SecurityError::EncryptionError {
    |                      ^^^^^^^^^ not found in `bincode`
    |
help: consider importing one of these functions
    |
9   + use crate::json_util::stringified_json::serialize;
    |
9   + use fluent_ai_domain::json_util::stringified_json::serialize;
    |
help: if you import `serialize`, refer to it directly
    |
196 -             bincode::serialize(&encrypted_data).map_err(|e| SecurityError::EncryptionError {
196 +             serialize(&encrypted_data).map_err(|e| SecurityError::EncryptionError {
    |

error[E0425]: cannot find function `deserialize` in crate `bincode`
   --> packages/provider/src/security/encryption.rs:215:22
    |
215 |             bincode::deserialize(&serialized).map_err(|e| SecurityError::EncryptionError {
    |                      ^^^^^^^^^^^ not found in `bincode`
    |
help: consider importing one of these functions
    |
9   + use crate::json_util::stringified_json::deserialize;
    |
9   + use fluent_ai_domain::json_util::stringified_json::deserialize;
    |
help: if you import `deserialize`, refer to it directly
    |
215 -             bincode::deserialize(&serialized).map_err(|e| SecurityError::EncryptionError {
215 +             deserialize(&serialized).map_err(|e| SecurityError::EncryptionError {
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/security/rotation.rs:27:29
   |
27 |     pub provider_intervals: HashMap<String, Duration>,
   |                             ^^^^^^^
   |
  ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lib.rs:89:1
   |
89 | pub struct DashMap<K, V, S = RandomState> {
   | ----------------------------------------- similarly named struct `DashMap` defined here
   |
help: a struct with a similar name exists
   |
27 -     pub provider_intervals: HashMap<String, Duration>,
27 +     pub provider_intervals: DashMap<String, Duration>,
   |
help: consider importing one of these structs
   |
10 + use crate::domain::HashMap;
   |
10 + use std::collections::HashMap;
   |
10 + use fluent_ai_domain::HashMap;
   |
10 + use hashbrown::HashMap;
   |

error[E0599]: no method named `clone` found for struct `std::sync::RwLock` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/macros/mod.rs:207:40
    |
207 |         let variables = self.variables.clone();
    |                                        ^^^^^ method not found in `std::sync::RwLock<VariableManager>`
    |
note: the method `clone` exists on the type `VariableManager`
   --> /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs:204:5
    |
204 |     fn clone(&self) -> Self;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
help: use `.read().unwrap()` to borrow the `VariableManager`, blocking the current thread until it can be acquired
    |
207 |         let variables = self.variables.read().unwrap().clone();
    |                                       ++++++++++++++++

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/security/rotation.rs:149:38
    |
149 |         let mut provider_intervals = HashMap::new();
    |                                      ^^^^^^^ use of undeclared type `HashMap`
    |
help: a struct with a similar name exists
    |
149 -         let mut provider_intervals = HashMap::new();
149 +         let mut provider_intervals = DashMap::new();
    |
help: consider importing one of these structs
    |
10  + use crate::domain::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
10  + use hashbrown::HashMap;
    |

error[E0404]: expected trait, found struct `AsyncStream`
  --> packages/provider/src/client.rs:62:18
   |
62 |     ) -> Box<dyn AsyncStream<CompletionChunk>>;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a trait

error[E0404]: expected trait, found struct `AsyncTask`
  --> packages/provider/src/client.rs:74:18
   |
74 |     ) -> Box<dyn AsyncTask<Result<Box<dyn AsyncStream<Self::StreamingResponse>>, Self::Error>>>;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a trait

error[E0404]: expected trait, found struct `AsyncStream`
  --> packages/provider/src/client.rs:74:43
   |
74 |     ) -> Box<dyn AsyncTask<Result<Box<dyn AsyncStream<Self::StreamingResponse>>, Self::Error>>>;
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a trait

error[E0404]: expected trait, found struct `AsyncTask`
  --> packages/provider/src/client.rs:92:44
   |
92 |     fn embed(&self, text: &str) -> Box<dyn AsyncTask<ZeroOneOrMany<f32>>>;
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a trait

error[E0404]: expected trait, found struct `AsyncStream`
  --> packages/provider/src/client.rs:95:68
   |
95 |     fn embed_batch(&self, texts: ZeroOneOrMany<String>) -> Box<dyn AsyncStream<EmbeddingChunk>>;
   |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a trait

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/transcription/mod.rs:421:29
    |
421 |     pub additional_options: HashMap<String, Value>}
    |                             ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/transcription/mod.rs:433:33
    |
433 |             additional_options: HashMap::new()}
    |                                 ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
7   + use hashbrown::HashMap;
    |

error[E0603]: struct `Usage` is private
  --> packages/provider/src/clients/anthropic/completion.rs:16:62
   |
16 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage};
   |                                                              ^^^^^ private struct
   |
note: the struct `Usage` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
   |
13 | use crate::model::Usage;
   |     ^^^^^^^^^^^^^^^^^^^
help: import `Usage` directly
   |
16 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, fluent_ai_domain::model::usage::Usage};
   |                                                              ++++++++++++++++++++++++++++++++

error[E0603]: struct `Usage` is private
  --> packages/provider/src/clients/deepseek/completion.rs:16:62
   |
16 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage};
   |                                                              ^^^^^ private struct
   |
note: the struct `Usage` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
   |
13 | use crate::model::Usage;
   |     ^^^^^^^^^^^^^^^^^^^
help: import `Usage` directly
   |
16 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, fluent_ai_domain::model::usage::Usage};
   |                                                              ++++++++++++++++++++++++++++++++

error[E0603]: struct `Usage` is private
  --> packages/provider/src/clients/gemini/completion.rs:33:62
   |
33 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage};
   |                                                              ^^^^^ private struct
   |
note: the struct `Usage` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
   |
13 | use crate::model::Usage;
   |     ^^^^^^^^^^^^^^^^^^^
help: import `Usage` directly
   |
33 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, fluent_ai_domain::model::usage::Usage};
   |                                                              ++++++++++++++++++++++++++++++++

error[E0603]: struct `Usage` is private
  --> packages/provider/src/clients/gemini/gemini_client.rs:10:62
   |
10 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage};
   |                                                              ^^^^^ private struct
   |
note: the struct `Usage` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
   |
13 | use crate::model::Usage;
   |     ^^^^^^^^^^^^^^^^^^^
help: import `Usage` directly
   |
10 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, fluent_ai_domain::model::usage::Usage};
   |                                                              ++++++++++++++++++++++++++++++++

error[E0603]: struct `Usage` is private
  --> packages/provider/src/clients/gemini/gemini_types.rs:6:62
   |
6  | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage};
   |                                                              ^^^^^ private struct
   |
note: the struct `Usage` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
   |
13 | use crate::model::Usage;
   |     ^^^^^^^^^^^^^^^^^^^
help: import `Usage` directly
   |
6  | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, fluent_ai_domain::model::usage::Usage};
   |                                                              ++++++++++++++++++++++++++++++++

error[E0603]: module `workflow` is private
  --> packages/provider/src/clients/groq/client.rs:16:31
   |
16 | use fluent_ai_domain::memory::workflow::PromptError;
   |                               ^^^^^^^^  ----------- enum `PromptError` is not publicly re-exported
   |                               |
   |                               private module
   |
note: the module `workflow` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/memory/mod.rs:39:1
   |
39 | mod workflow;
   | ^^^^^^^^^^^^

error[E0603]: struct `Usage` is private
  --> packages/provider/src/clients/groq/completion.rs:9:62
   |
9  | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage as DomainUsage};
   |                                                              ^^^^^ private struct
   |
note: the struct `Usage` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
   |
13 | use crate::model::Usage;
   |     ^^^^^^^^^^^^^^^^^^^
help: import `Usage` directly
   |
9  - use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage as DomainUsage};
9  + use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, fluent_ai_domain::model::usage::Usage};
   |

error[E0603]: struct `Usage` is private
  --> packages/provider/src/clients/huggingface/completion.rs:16:62
   |
16 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage};
   |                                                              ^^^^^ private struct
   |
note: the struct `Usage` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
   |
13 | use crate::model::Usage;
   |     ^^^^^^^^^^^^^^^^^^^
help: import `Usage` directly
   |
16 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, fluent_ai_domain::model::usage::Usage};
   |                                                              ++++++++++++++++++++++++++++++++

error[E0603]: struct `Usage` is private
   --> packages/provider/src/clients/mistral/completion.rs:504:62
    |
504 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage as DomainUsage};
    |                                                              ^^^^^ private struct
    |
note: the struct `Usage` is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
    |
13  | use crate::model::Usage;
    |     ^^^^^^^^^^^^^^^^^^^
help: import `Usage` directly
    |
504 - use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage as DomainUsage};
504 + use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, fluent_ai_domain::model::usage::Usage};
    |

error[E0603]: struct `Usage` is private
  --> packages/provider/src/clients/openai/completion.rs:16:62
   |
16 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage};
   |                                                              ^^^^^ private struct
   |
note: the struct `Usage` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
   |
13 | use crate::model::Usage;
   |     ^^^^^^^^^^^^^^^^^^^
help: import `Usage` directly
   |
16 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, fluent_ai_domain::model::usage::Usage};
   |                                                              ++++++++++++++++++++++++++++++++

error[E0603]: module `workflow` is private
  --> packages/provider/src/clients/xai/client.rs:18:31
   |
18 | use fluent_ai_domain::memory::workflow::PromptError;
   |                               ^^^^^^^^  ----------- enum `PromptError` is not publicly re-exported
   |                               |
   |                               private module
   |
note: the module `workflow` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/memory/mod.rs:39:1
   |
39 | mod workflow;
   | ^^^^^^^^^^^^

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/anthropic/client.rs:16:34
   |
16 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
16 | use crate::completion_provider::{completion::CompletionError, CompletionProvider};
   |                                  ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/anthropic/completion.rs:39:23
   |
39 |         ChunkHandler, CompletionError, CompletionProvider, ModelConfig, ModelInfo}};
   |                       ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
39 |         ChunkHandler, completion::CompletionError, CompletionProvider, ModelConfig, ModelInfo}};
   |                       ++++++++++++

error[E0603]: enum import `AnthropicError` is private
  --> packages/provider/src/clients/anthropic/tools/calculator.rs:14:12
   |
14 |     core::{AnthropicError, AnthropicResult},
   |            ^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `AnthropicError` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:14:20
   |
14 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                    ^^^^^^^^^^^^^^
note: ...and refers to the enum import `AnthropicError` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:35:9
   |
35 | pub use error::*;
   |         ^^^^^^^^ you could import this re-export
note: ...and refers to the enum `AnthropicError` which is defined here
  --> packages/provider/src/clients/anthropic/error.rs:12:1
   |
12 | pub enum AnthropicError {
   | ^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicError` through the re-export
   |
14 |     core::{super::AnthropicError, AnthropicResult},
   |            +++++++

error[E0603]: type alias import `AnthropicResult` is private
   --> packages/provider/src/clients/anthropic/tools/calculator.rs:14:28
    |
14  |     core::{AnthropicError, AnthropicResult},
    |                            ^^^^^^^^^^^^^^^ private type alias import
    |
note: the type alias import `AnthropicResult` is defined here...
   --> packages/provider/src/clients/anthropic/tools/core.rs:14:36
    |
14  | use super::super::{AnthropicError, AnthropicResult, Message};
    |                                    ^^^^^^^^^^^^^^^
note: ...and refers to the type alias import `AnthropicResult` which is defined here...
   --> packages/provider/src/clients/anthropic/mod.rs:35:9
    |
35  | pub use error::*;
    |         ^^^^^^^^ you could import this re-export
note: ...and refers to the type alias `AnthropicResult` which is defined here
   --> packages/provider/src/clients/anthropic/error.rs:116:1
    |
116 | pub type AnthropicResult<T> = Result<T, AnthropicError>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicResult` through the re-export
    |
14  |     core::{AnthropicError, super::AnthropicResult},
    |                            +++++++

error[E0603]: enum import `AnthropicError` is private
  --> packages/provider/src/clients/anthropic/tools/file_operations.rs:18:12
   |
18 |     core::{AnthropicError, AnthropicResult},
   |            ^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `AnthropicError` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:14:20
   |
14 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                    ^^^^^^^^^^^^^^
note: ...and refers to the enum import `AnthropicError` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:35:9
   |
35 | pub use error::*;
   |         ^^^^^^^^ you could import this re-export
note: ...and refers to the enum `AnthropicError` which is defined here
  --> packages/provider/src/clients/anthropic/error.rs:12:1
   |
12 | pub enum AnthropicError {
   | ^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicError` through the re-export
   |
18 |     core::{super::AnthropicError, AnthropicResult},
   |            +++++++

error[E0603]: type alias import `AnthropicResult` is private
   --> packages/provider/src/clients/anthropic/tools/file_operations.rs:18:28
    |
18  |     core::{AnthropicError, AnthropicResult},
    |                            ^^^^^^^^^^^^^^^ private type alias import
    |
note: the type alias import `AnthropicResult` is defined here...
   --> packages/provider/src/clients/anthropic/tools/core.rs:14:36
    |
14  | use super::super::{AnthropicError, AnthropicResult, Message};
    |                                    ^^^^^^^^^^^^^^^
note: ...and refers to the type alias import `AnthropicResult` which is defined here...
   --> packages/provider/src/clients/anthropic/mod.rs:35:9
    |
35  | pub use error::*;
    |         ^^^^^^^^ you could import this re-export
note: ...and refers to the type alias `AnthropicResult` which is defined here
   --> packages/provider/src/clients/anthropic/error.rs:116:1
    |
116 | pub type AnthropicResult<T> = Result<T, AnthropicError>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicResult` through the re-export
    |
18  |     core::{AnthropicError, super::AnthropicResult},
    |                            +++++++

error[E0603]: enum import `AnthropicError` is private
  --> packages/provider/src/clients/anthropic/tools/function_calling.rs:15:5
   |
15 |     AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
   |     ^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `AnthropicError` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:14:20
   |
14 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                    ^^^^^^^^^^^^^^
note: ...and refers to the enum import `AnthropicError` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:35:9
   |
35 | pub use error::*;
   |         ^^^^^^^^ you could import this re-export
note: ...and refers to the enum `AnthropicError` which is defined here
  --> packages/provider/src/clients/anthropic/error.rs:12:1
   |
12 | pub enum AnthropicError {
   | ^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicError` through the re-export
   |
15 |     super::AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
   |     +++++++

error[E0603]: type alias import `AnthropicResult` is private
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:15:21
    |
15  |     AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
    |                     ^^^^^^^^^^^^^^^ private type alias import
    |
note: the type alias import `AnthropicResult` is defined here...
   --> packages/provider/src/clients/anthropic/tools/core.rs:14:36
    |
14  | use super::super::{AnthropicError, AnthropicResult, Message};
    |                                    ^^^^^^^^^^^^^^^
note: ...and refers to the type alias import `AnthropicResult` which is defined here...
   --> packages/provider/src/clients/anthropic/mod.rs:35:9
    |
35  | pub use error::*;
    |         ^^^^^^^^ you could import this re-export
note: ...and refers to the type alias `AnthropicResult` which is defined here
   --> packages/provider/src/clients/anthropic/error.rs:116:1
    |
116 | pub type AnthropicResult<T> = Result<T, AnthropicError>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicResult` through the re-export
    |
15  |     AnthropicError, super::AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
    |                     +++++++

error[E0603]: struct import `Message` is private
  --> packages/provider/src/clients/anthropic/tools/function_calling.rs:16:5
   |
16 |     Message, ResultHandler, SchemaType};
   |     ^^^^^^^ private struct import
   |
note: the struct import `Message` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:14:53
   |
14 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                                                     ^^^^^^^
note: ...and refers to the struct import `Message` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:36:9
   |
36 | pub use messages::*;
   |         ^^^^^^^^^^^ you could import this re-export
note: ...and refers to the struct `Message` which is defined here
  --> packages/provider/src/clients/anthropic/messages.rs:30:1
   |
30 | pub struct Message {
   | ^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Message` through the re-export
   |
16 |     super::Message, ResultHandler, SchemaType};
   |     +++++++

error[E0603]: enum import `AnthropicError` is private
  --> packages/provider/src/clients/anthropic/tools/mod.rs:17:5
   |
17 |     AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
   |     ^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `AnthropicError` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:14:20
   |
14 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                    ^^^^^^^^^^^^^^
note: ...and refers to the enum import `AnthropicError` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:35:9
   |
35 | pub use error::*;
   |         ^^^^^^^^ you could import this re-export
note: ...and refers to the enum `AnthropicError` which is defined here
  --> packages/provider/src/clients/anthropic/error.rs:12:1
   |
12 | pub enum AnthropicError {
   | ^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicError` through the re-export
   |
17 |     super::AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
   |     +++++++

error[E0603]: type alias import `AnthropicResult` is private
   --> packages/provider/src/clients/anthropic/tools/mod.rs:17:21
    |
17  |     AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
    |                     ^^^^^^^^^^^^^^^ private type alias import
    |
note: the type alias import `AnthropicResult` is defined here...
   --> packages/provider/src/clients/anthropic/tools/core.rs:14:36
    |
14  | use super::super::{AnthropicError, AnthropicResult, Message};
    |                                    ^^^^^^^^^^^^^^^
note: ...and refers to the type alias import `AnthropicResult` which is defined here...
   --> packages/provider/src/clients/anthropic/mod.rs:35:9
    |
35  | pub use error::*;
    |         ^^^^^^^^ you could import this re-export
note: ...and refers to the type alias `AnthropicResult` which is defined here
   --> packages/provider/src/clients/anthropic/error.rs:116:1
    |
116 | pub type AnthropicResult<T> = Result<T, AnthropicError>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicResult` through the re-export
    |
17  |     AnthropicError, super::AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
    |                     +++++++

error[E0603]: struct import `Message` is private
  --> packages/provider/src/clients/anthropic/tools/mod.rs:18:5
   |
18 |     Message, ResultHandler, SchemaType, ToolExecutionError, ToolRegistrationError};
   |     ^^^^^^^ private struct import
   |
note: the struct import `Message` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:14:53
   |
14 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                                                     ^^^^^^^
note: ...and refers to the struct import `Message` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:36:9
   |
36 | pub use messages::*;
   |         ^^^^^^^^^^^ you could import this re-export
note: ...and refers to the struct `Message` which is defined here
  --> packages/provider/src/clients/anthropic/messages.rs:30:1
   |
30 | pub struct Message {
   | ^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Message` through the re-export
   |
18 |     super::Message, ResultHandler, SchemaType, ToolExecutionError, ToolRegistrationError};
   |     +++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/azure/client.rs:21:34
   |
21 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
21 | use crate::completion_provider::{completion::CompletionError, CompletionProvider};
   |                                  ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/bedrock/mod.rs:41:34
   |
41 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
41 | use crate::completion_provider::{completion::CompletionError, CompletionProvider};
   |                                  ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/bedrock/client.rs:22:34
   |
22 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
22 | use crate::completion_provider::{completion::CompletionError, CompletionProvider};
   |                                  ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/bedrock/completion.rs:26:5
   |
26 |     CompletionError, CompletionProvider, CompletionResponse, StreamingResponse};
   |     ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
26 |     completion::CompletionError, CompletionProvider, CompletionResponse, StreamingResponse};
   |     ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/bedrock/error.rs:17:33
   |
17 | use crate::completion_provider::CompletionError;
   |                                 ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
17 - use crate::completion_provider::CompletionError;
17 + use completion::CompletionError;
   |

error[E0603]: struct `MemoryPool` is private
   --> packages/provider/src/clients/candle/mod.rs:27:23
    |
27  | pub use memory_pool::{MemoryPool, MemoryPoolManager, PoolConfig, PoolStatistics, PooledEntry};
    |                       ^^^^^^^^^^ private struct
    |
note: the struct `MemoryPool` is defined here
   --> packages/provider/src/clients/candle/memory_pool.rs:227:1
    |
227 | struct MemoryPool {
    | ^^^^^^^^^^^^^^^^^

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/deepseek/client.rs:17:27
   |
17 |     completion_provider::{CompletionError, CompletionProvider}};
   |                           ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
17 |     completion_provider::{completion::CompletionError, CompletionProvider}};
   |                           ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/deepseek/completion.rs:27:23
   |
27 |         ChunkHandler, CompletionError, CompletionProvider, ModelConfig, ModelInfo}};
   |                       ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
27 |         ChunkHandler, completion::CompletionError, CompletionProvider, ModelConfig, ModelInfo}};
   |                       ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/gemini/gemini_error.rs:8:33
   |
8  | use crate::completion_provider::CompletionError as ProviderError;
   |                                 ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
8  - use crate::completion_provider::CompletionError as ProviderError;
8  + use completion::CompletionError;
   |

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/gemini/gemini_streaming.rs:17:33
   |
17 | use crate::completion_provider::CompletionError;
   |                                 ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
17 - use crate::completion_provider::CompletionError;
17 + use completion::CompletionError;
   |

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/groq/completion.rs:27:23
   |
27 |         ChunkHandler, CompletionError as ProviderCompletionError, CompletionProvider, ModelConfig},
   |                       ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
27 -         ChunkHandler, CompletionError as ProviderCompletionError, CompletionProvider, ModelConfig},
27 +         ChunkHandler, completion::CompletionError, CompletionProvider, ModelConfig},
   |

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/huggingface/client.rs:17:27
   |
17 |     completion_provider::{CompletionError, CompletionProvider}};
   |                           ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
17 |     completion_provider::{completion::CompletionError, CompletionProvider}};
   |                           ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/huggingface/completion.rs:27:23
   |
27 |         ChunkHandler, CompletionError, CompletionProvider, ModelConfig, ModelInfo}};
   |                       ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
27 |         ChunkHandler, completion::CompletionError, CompletionProvider, ModelConfig, ModelInfo}};
   |                       ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/mistral/client.rs:19:34
   |
19 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
19 | use crate::completion_provider::{completion::CompletionError, CompletionProvider};
   |                                  ++++++++++++

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/mistral/completion.rs:526:23
    |
526 |         ChunkHandler, CompletionError as ProviderError, CompletionProvider, ModelConfig, ModelInfo}};
    |                       ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
526 -         ChunkHandler, CompletionError as ProviderError, CompletionProvider, ModelConfig, ModelInfo}};
526 +         ChunkHandler, completion::CompletionError, CompletionProvider, ModelConfig, ModelInfo}};
    |

error[E0603]: struct import `MistralCompletionBuilder` is private
   --> packages/provider/src/clients/mistral/mod.rs:6:26
    |
6   | pub use client::{Client, MistralCompletionBuilder};
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ private struct import
    |
note: the struct import `MistralCompletionBuilder` is defined here...
   --> packages/provider/src/clients/mistral/client.rs:14:5
    |
14  | use super::completion::MistralCompletionBuilder;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the struct `MistralCompletionBuilder` which is defined here
   --> packages/provider/src/clients/mistral/completion.rs:537:1
    |
537 | pub struct MistralCompletionBuilder {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `MistralCompletionBuilder` through the re-export
    |
6   | pub use client::{Client, completion::MistralCompletionBuilder};
    |                          ++++++++++++

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/clients/ollama/client.rs:23:25
   |
23 |     embeddings::{Embed, Embedding, EmbeddingBuilder},
   |                         ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: import `Embedding` through the re-export
   |
23 |     embeddings::{Embed, embedding::Embedding, EmbeddingBuilder},
   |                         +++++++++++

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/clients/ollama/completion.rs:15:24
   |
15 |     embeddings::{self, Embedding, EmbeddingError, EmbeddingModel as EmbeddingModelTrait},
   |                        ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: import `Embedding` through the re-export
   |
15 |     embeddings::{self, embedding::Embedding, EmbeddingError, EmbeddingModel as EmbeddingModelTrait},
   |                        +++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/openai/mod.rs:46:34
   |
46 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
46 | use crate::completion_provider::{completion::CompletionError, CompletionProvider};
   |                                  ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/openai/client.rs:33:34
   |
33 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
33 | use crate::completion_provider::{completion::CompletionError, CompletionProvider};
   |                                  ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/openai/completion.rs:37:23
   |
37 |         ChunkHandler, CompletionError, CompletionProvider, ModelConfig, ModelInfo}};
   |                       ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
37 |         ChunkHandler, completion::CompletionError, CompletionProvider, ModelConfig, ModelInfo}};
   |                       ++++++++++++

error[E0603]: unresolved item import `CompletionModel` is private
  --> packages/provider/src/clients/openrouter/mod.rs:18:24
   |
18 |     CLAUDE_3_7_SONNET, CompletionModel, GEMINI_FLASH_2_0, GPT_4_1, PERPLEXITY_SONAR_PRO,
   |                        ^^^^^^^^^^^^^^^ private unresolved item import
   |
note: the unresolved item import `CompletionModel` is defined here
  --> packages/provider/src/clients/openrouter/completion.rs:15:41
   |
15 |     completion::{self, CompletionError, CompletionModel, CompletionRequest},
   |                                         ^^^^^^^^^^^^^^^
help: import `CompletionModel` through the re-export
   |
18 |     CLAUDE_3_7_SONNET, completion::CompletionModel, GEMINI_FLASH_2_0, GPT_4_1, PERPLEXITY_SONAR_PRO,
   |                        ++++++++++++

error[E0603]: unresolved item import `CompletionModel` is private
  --> packages/provider/src/clients/perplexity/mod.rs:17:22
   |
17 | pub use completion::{CompletionModel, SONAR, SONAR_PRO};
   |                      ^^^^^^^^^^^^^^^ private unresolved item import
   |
note: the unresolved item import `CompletionModel` is defined here
  --> packages/provider/src/clients/perplexity/completion.rs:22:41
   |
22 |     completion::{self, CompletionError, CompletionModel, CompletionRequest},
   |                                         ^^^^^^^^^^^^^^^
help: import `CompletionModel` through the re-export
   |
17 | pub use completion::{completion::CompletionModel, SONAR, SONAR_PRO};
   |                      ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/xai/completion.rs:18:34
   |
18 | use crate::completion_provider::{CompletionError, CompletionResponse as DomainCompletionResponse};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
18 | use crate::completion_provider::{completion::CompletionError, CompletionResponse as DomainCompletionResponse};
   |                                  ++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/xai/streaming.rs:5:33
   |
5  | use crate::completion_provider::CompletionError;
   |                                 ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
5  - use crate::completion_provider::CompletionError;
5  + use completion::CompletionError;
   |

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/streaming/mod.rs:14:34
   |
14 | use crate::completion_provider::{CompletionError, ResponseMetadata};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:29:9
   |
29 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use fluent_ai_domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
14 | use crate::completion_provider::{completion::CompletionError, ResponseMetadata};
   |                                  ++++++++++++

error[E0603]: module `workflow` is private
   --> packages/provider/src/clients/azure/client.rs:450:75
    |
450 |     fn build(self) -> Result<CompletionRequest, fluent_ai_domain::memory::workflow::PromptError> {
    |                                                                           ^^^^^^^^  ----------- enum `PromptError` is not publicly re-exported
    |                                                                           |
    |                                                                           private module
    |
note: the module `workflow` is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/memory/mod.rs:39:1
    |
39  | mod workflow;
    | ^^^^^^^^^^^^

error[E0603]: module `workflow` is private
   --> packages/provider/src/clients/azure/client.rs:453:54
    |
453 |             .ok_or_else(|| fluent_ai_domain::memory::workflow::PromptError::MissingPrompt)?;
    |                                                      ^^^^^^^^  ----------- enum `PromptError` is not publicly re-exported
    |                                                      |
    |                                                      private module
    |
note: the module `workflow` is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/memory/mod.rs:39:1
    |
39  | mod workflow;
    | ^^^^^^^^^^^^

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:199:51
    |
199 |     ) -> Result<Self, crate::completion_provider::CompletionError> {
    |                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
199 -     ) -> Result<Self, crate::completion_provider::CompletionError> {
199 +     ) -> Result<Self, completion::CompletionError> {
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:201:54
    |
201 |             .map_err(|_| crate::completion_provider::CompletionError::HttpError)?;
    |                                                      ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
201 -             .map_err(|_| crate::completion_provider::CompletionError::HttpError)?;
201 +             .map_err(|_| completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:292:51
    |
292 |     ) -> Result<Self, crate::completion_provider::CompletionError> {
    |                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
292 -     ) -> Result<Self, crate::completion_provider::CompletionError> {
292 +     ) -> Result<Self, completion::CompletionError> {
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:298:62
    |
298 |                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
    |                                                              ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
298 -                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
298 +                     .map_err(|_| completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:303:53
    |
303 |                         crate::completion_provider::CompletionError::RequestTooLarge
    |                                                     ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
303 -                         crate::completion_provider::CompletionError::RequestTooLarge
303 +                         completion::CompletionError
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:316:51
    |
316 |     ) -> Result<Self, crate::completion_provider::CompletionError> {
    |                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
316 -     ) -> Result<Self, crate::completion_provider::CompletionError> {
316 +     ) -> Result<Self, completion::CompletionError> {
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:322:62
    |
322 |                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
    |                                                              ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
322 -                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
322 +                     .map_err(|_| completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:327:53
    |
327 |                         crate::completion_provider::CompletionError::RequestTooLarge
    |                                                     ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
327 -                         crate::completion_provider::CompletionError::RequestTooLarge
327 +                         completion::CompletionError
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:340:51
    |
340 |     ) -> Result<Self, crate::completion_provider::CompletionError> {
    |                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
340 -     ) -> Result<Self, crate::completion_provider::CompletionError> {
340 +     ) -> Result<Self, completion::CompletionError> {
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:346:62
    |
346 |                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
    |                                                              ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
346 -                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
346 +                     .map_err(|_| completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:351:53
    |
351 |                         crate::completion_provider::CompletionError::RequestTooLarge
    |                                                     ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
351 -                         crate::completion_provider::CompletionError::RequestTooLarge
351 +                         completion::CompletionError
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:370:67
    |
370 |         F: Fn(Result<CompletionChunk, crate::completion_provider::CompletionError>)
    |                                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
370 -         F: Fn(Result<CompletionChunk, crate::completion_provider::CompletionError>)
370 +         F: Fn(Result<CompletionChunk, completion::CompletionError>)
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:432:73
    |
432 |         AsyncStream<Result<CompletionChunk, crate::completion_provider::CompletionError>>,
    |                                                                         ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
432 -         AsyncStream<Result<CompletionChunk, crate::completion_provider::CompletionError>>,
432 +         AsyncStream<Result<CompletionChunk, completion::CompletionError>>,
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:433:37
    |
433 |         crate::completion_provider::CompletionError,
    |                                     ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
433 -         crate::completion_provider::CompletionError,
433 +         completion::CompletionError,
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:437:54
    |
437 |             .map_err(|_| crate::completion_provider::CompletionError::ParseError)?;
    |                                                      ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
437 -             .map_err(|_| crate::completion_provider::CompletionError::ParseError)?;
437 +             .map_err(|_| completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:448:54
    |
448 |             .map_err(|_| crate::completion_provider::CompletionError::HttpError)?
    |                                                      ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
448 -             .map_err(|_| crate::completion_provider::CompletionError::HttpError)?
448 +             .map_err(|_| completion::CompletionError)?
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:455:54
    |
455 |             .map_err(|_| crate::completion_provider::CompletionError::HttpError)?;
    |                                                      ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
455 -             .map_err(|_| crate::completion_provider::CompletionError::HttpError)?;
455 +             .map_err(|_| completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:459:52
    |
459 |                 401 => crate::completion_provider::CompletionError::AuthError,
    |                                                    ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
459 -                 401 => crate::completion_provider::CompletionError::AuthError,
459 +                 401 => completion::CompletionError,
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:460:52
    |
460 |                 413 => crate::completion_provider::CompletionError::RequestTooLarge,
    |                                                    ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
460 -                 413 => crate::completion_provider::CompletionError::RequestTooLarge,
460 +                 413 => completion::CompletionError,
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:461:52
    |
461 |                 429 => crate::completion_provider::CompletionError::RateLimited,
    |                                                    ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
461 -                 429 => crate::completion_provider::CompletionError::RateLimited,
461 +                 429 => completion::CompletionError,
    |

error[E0277]: the trait bound `std::string::String: From<CandleMessageRole>` is not satisfied
   --> packages/fluent-ai-candle/src/types/candle_chat/realtime/live_updates.rs:197:21
    |
195 |                 message: CandleMessage::new(
    |                          ------------------ required by a bound introduced by this call
196 |                     message.user_id.len() as u64, // Use user_id length as ID for now
197 |                     crate::types::CandleMessageRole::Assistant,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<CandleMessageRole>` is not implemented for `std::string::String`
    |
    = help: the following other types implement trait `From<T>`:
              `std::string::String` implements `From<&mut str>`
              `std::string::String` implements `From<&std::string::String>`
              `std::string::String` implements `From<&str>`
              `std::string::String` implements `From<Box<str>>`
              `std::string::String` implements `From<Cow<'_, str>>`
              `std::string::String` implements `From<Uuid>`
              `std::string::String` implements `From<char>`
              `std::string::String` implements `From<compact_str::CompactString>`
            and 9 others
    = note: required for `CandleMessageRole` to implement `Into<std::string::String>`
note: required by a bound in `CandleMessage::new`
   --> packages/fluent-ai-candle/src/types/candle_chat/message/mod.rs:70:55
    |
70  |     pub fn new(role: CandleMessageRole, content: impl Into<String>) -> Self {
    |                                                       ^^^^^^^^^^^^ required by this bound in `CandleMessage::new`

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:462:50
    |
462 |                 _ => crate::completion_provider::CompletionError::HttpError});
    |                                                  ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
462 -                 _ => crate::completion_provider::CompletionError::HttpError});
462 +                 _ => completion::CompletionError});
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:492:57
    |
492 | ...                   crate::completion_provider::CompletionError::StreamError,
    |                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing this enum through its public re-export instead
    |
492 -                             crate::completion_provider::CompletionError::StreamError,
492 +                             crate::clients::gemini::completion::CompletionError::StreamError,
    |
help: import `CompletionError` through the re-export
    |
492 -                             crate::completion_provider::CompletionError::StreamError,
492 +                             completion::CompletionError,
    |

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> packages/fluent-ai-candle/src/types/candle_chat/realtime/live_updates.rs:195:26
    |
195 |                 message: CandleMessage::new(
    |                          ^^^^^^^^^^^^^^^^^^
196 |                     message.user_id.len() as u64, // Use user_id length as ID for now
    |                     ---------------------------- expected `CandleMessageRole`, found `u64`
197 |                     crate::types::CandleMessageRole::Assistant,
198 |                     message.content.as_bytes(),
    |                     -------------------------- unexpected argument #3 of type `&[u8]`
    |
note: associated function defined here
   --> packages/fluent-ai-candle/src/types/candle_chat/message/mod.rs:70:12
    |
70  |     pub fn new(role: CandleMessageRole, content: impl Into<String>) -> Self {
    |            ^^^ -----------------------
help: remove the extra argument
    |
196 ~                     /* CandleMessageRole */, // Use user_id length as ID for now
197 ~                     crate::types::CandleMessageRole::Assistant,
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:508:69
    |
508 |     ) -> Result<GenerateContentRequest, crate::completion_provider::CompletionError> {
    |                                                                     ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
508 -     ) -> Result<GenerateContentRequest, crate::completion_provider::CompletionError> {
508 +     ) -> Result<GenerateContentRequest, completion::CompletionError> {
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:562:54
    |
562 |     ) -> Result<Content, crate::completion_provider::CompletionError> {
    |                                                      ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
562 -     ) -> Result<Content, crate::completion_provider::CompletionError> {
562 +     ) -> Result<Content, completion::CompletionError> {
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:568:56
    |
568 |                     .ok_or(crate::completion_provider::CompletionError::ParseError)?;
    |                                                        ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
568 -                     .ok_or(crate::completion_provider::CompletionError::ParseError)?;
568 +                     .ok_or(completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:588:66
    |
588 |                         .map_err(|_| crate::completion_provider::CompletionError::ParseError)?,
    |                                                                  ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
588 -                         .map_err(|_| crate::completion_provider::CompletionError::ParseError)?,
588 +                         .map_err(|_| completion::CompletionError)?,
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:595:56
    |
595 |                     .ok_or(crate::completion_provider::CompletionError::ParseError)?;
    |                                                        ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
595 -                     .ok_or(crate::completion_provider::CompletionError::ParseError)?;
595 +                     .ok_or(completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:607:56
    |
607 |     ) -> Result<Vec<Tool>, crate::completion_provider::CompletionError> {
    |                                                        ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
607 -     ) -> Result<Vec<Tool>, crate::completion_provider::CompletionError> {
607 +     ) -> Result<Vec<Tool>, completion::CompletionError> {
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:619:70
    |
619 | ...                   .map_err(|_| crate::completion_provider::CompletionError::ParseError)?,
    |                                                                ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
619 -                             .map_err(|_| crate::completion_provider::CompletionError::ParseError)?,
619 +                             .map_err(|_| completion::CompletionError)?,
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:638:62
    |
638 |     ) -> Result<CompletionChunk, crate::completion_provider::CompletionError> {
    |                                                              ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
638 -     ) -> Result<CompletionChunk, crate::completion_provider::CompletionError> {
638 +     ) -> Result<CompletionChunk, completion::CompletionError> {
    |

error[E0277]: the trait bound `std::string::String: From<CandleMessageRole>` is not satisfied
   --> packages/fluent-ai-candle/src/types/candle_chat/realtime/streaming.rs:110:21
    |
108 |                 message: CandleMessage::new(
    |                          ------------------ required by a bound introduced by this call
109 |                     message.user_id.len() as u64,
110 |                     crate::types::CandleMessageRole::Assistant,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<CandleMessageRole>` is not implemented for `std::string::String`
    |
    = help: the following other types implement trait `From<T>`:
              `std::string::String` implements `From<&mut str>`
              `std::string::String` implements `From<&std::string::String>`
              `std::string::String` implements `From<&str>`
              `std::string::String` implements `From<Box<str>>`
              `std::string::String` implements `From<Cow<'_, str>>`
              `std::string::String` implements `From<Uuid>`
              `std::string::String` implements `From<char>`
              `std::string::String` implements `From<compact_str::CompactString>`
            and 9 others
    = note: required for `CandleMessageRole` to implement `Into<std::string::String>`
note: required by a bound in `CandleMessage::new`
   --> packages/fluent-ai-candle/src/types/candle_chat/message/mod.rs:70:55
    |
70  |     pub fn new(role: CandleMessageRole, content: impl Into<String>) -> Self {
    |                                                       ^^^^^^^^^^^^ required by this bound in `CandleMessage::new`

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:641:54
    |
641 |             .map_err(|_| crate::completion_provider::CompletionError::ParseError)?;
    |                                                      ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
641 -             .map_err(|_| crate::completion_provider::CompletionError::ParseError)?;
641 +             .map_err(|_| completion::CompletionError)?;
    |

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> packages/fluent-ai-candle/src/types/candle_chat/realtime/streaming.rs:108:26
    |
108 |                 message: CandleMessage::new(
    |                          ^^^^^^^^^^^^^^^^^^
109 |                     message.user_id.len() as u64,
    |                     ---------------------------- expected `CandleMessageRole`, found `u64`
110 |                     crate::types::CandleMessageRole::Assistant,
111 |                     message.content.as_bytes(),
    |                     -------------------------- unexpected argument #3 of type `&[u8]`
    |
note: associated function defined here
   --> packages/fluent-ai-candle/src/types/candle_chat/message/mod.rs:70:12
    |
70  |     pub fn new(role: CandleMessageRole, content: impl Into<String>) -> Self {
    |            ^^^ -----------------------
help: remove the extra argument
    |
109 ~                     /* CandleMessageRole */,
110 ~                     crate::types::CandleMessageRole::Assistant,
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:646:48
    |
646 |             .ok_or(crate::completion_provider::CompletionError::ParseError)?;
    |                                                ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
646 -             .ok_or(crate::completion_provider::CompletionError::ParseError)?;
646 +             .ok_or(completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/completion.rs:695:66
    |
695 | ) -> Result<GeminiCompletionBuilder, crate::completion_provider::CompletionError> {
    |                                                                  ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
695 - ) -> Result<GeminiCompletionBuilder, crate::completion_provider::CompletionError> {
695 + ) -> Result<GeminiCompletionBuilder, completion::CompletionError> {
    |

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/clients/gemini/embedding.rs:51:33
   |
51 |     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
   |                                 ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
   |
51 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
51 +     ) -> Result<Vec<crate::domain::embedding::Embedding>, EmbeddingError> {
   |
51 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
51 +     ) -> Result<Vec<fluent_ai_domain::embedding::Embedding>, EmbeddingError> {
   |
help: import `Embedding` through the re-export
   |
51 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
51 +     ) -> Result<Vec<embedding::Embedding>, EmbeddingError> {
   |

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/clients/gemini/embedding.rs:92:62
   |
92 |                     .map(|(document, embedding)| embeddings::Embedding {
   |                                                              ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
   |
92 -                     .map(|(document, embedding)| embeddings::Embedding {
92 +                     .map(|(document, embedding)| crate::domain::embedding::Embedding {
   |
92 -                     .map(|(document, embedding)| embeddings::Embedding {
92 +                     .map(|(document, embedding)| fluent_ai_domain::embedding::Embedding {
   |
help: import `Embedding` through the re-export
   |
92 -                     .map(|(document, embedding)| embeddings::Embedding {
92 +                     .map(|(document, embedding)| embedding::Embedding {
   |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:172:51
    |
172 |     ) -> Result<Self, crate::completion_provider::CompletionError> {
    |                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
172 -     ) -> Result<Self, crate::completion_provider::CompletionError> {
172 +     ) -> Result<Self, completion::CompletionError> {
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:174:54
    |
174 |             .map_err(|_| crate::completion_provider::CompletionError::HttpError)?;
    |                                                      ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
174 -             .map_err(|_| crate::completion_provider::CompletionError::HttpError)?;
174 +             .map_err(|_| completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:267:51
    |
267 |     ) -> Result<Self, crate::completion_provider::CompletionError> {
    |                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
267 -     ) -> Result<Self, crate::completion_provider::CompletionError> {
267 +     ) -> Result<Self, completion::CompletionError> {
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:273:62
    |
273 |                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
    |                                                              ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
273 -                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
273 +                     .map_err(|_| completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:278:53
    |
278 |                         crate::completion_provider::CompletionError::RequestTooLarge
    |                                                     ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
278 -                         crate::completion_provider::CompletionError::RequestTooLarge
278 +                         completion::CompletionError
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:291:51
    |
291 |     ) -> Result<Self, crate::completion_provider::CompletionError> {
    |                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
291 -     ) -> Result<Self, crate::completion_provider::CompletionError> {
291 +     ) -> Result<Self, completion::CompletionError> {
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:297:62
    |
297 |                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
    |                                                              ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
297 -                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
297 +                     .map_err(|_| completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:302:53
    |
302 |                         crate::completion_provider::CompletionError::RequestTooLarge
    |                                                     ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
302 -                         crate::completion_provider::CompletionError::RequestTooLarge
302 +                         completion::CompletionError
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:315:51
    |
315 |     ) -> Result<Self, crate::completion_provider::CompletionError> {
    |                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
315 -     ) -> Result<Self, crate::completion_provider::CompletionError> {
315 +     ) -> Result<Self, completion::CompletionError> {
    |

error[E0599]: no method named `dec` found for struct `Arc<ConsistentCounter>` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/realtime/streaming.rs:168:40
    |
168 |                     subscriber_counter.dec();
    |                                        ^^^ method not found in `Arc<ConsistentCounter>`

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:321:62
    |
321 |                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
    |                                                              ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
321 -                     .map_err(|_| crate::completion_provider::CompletionError::RequestTooLarge)?;
321 +                     .map_err(|_| completion::CompletionError)?;
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:326:53
    |
326 |                         crate::completion_provider::CompletionError::RequestTooLarge
    |                                                     ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
326 -                         crate::completion_provider::CompletionError::RequestTooLarge
326 +                         completion::CompletionError
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:345:67
    |
345 |         F: Fn(Result<CompletionChunk, crate::completion_provider::CompletionError>)
    |                                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
345 -         F: Fn(Result<CompletionChunk, crate::completion_provider::CompletionError>)
345 +         F: Fn(Result<CompletionChunk, completion::CompletionError>)
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:640:73
    |
640 | ...                   crate::completion_provider::CompletionError::ParseError,
    |                                                   ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing this enum through its public re-export instead
    |
640 -                                             crate::completion_provider::CompletionError::ParseError,
640 +                                             crate::clients::gemini::gemini_client::CompletionError::ParseError,
    |
help: import `CompletionError` through the re-export
    |
640 -                                             crate::completion_provider::CompletionError::ParseError,
640 +                                             completion::CompletionError,
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:652:67
    |
652 | ...                   .send(Err(crate::completion_provider::CompletionError::HttpError));
    |                                                             ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing this enum through its public re-export instead
    |
652 -                             .send(Err(crate::completion_provider::CompletionError::HttpError));
652 +                             .send(Err(crate::clients::gemini::gemini_client::CompletionError::HttpError));
    |
help: import `CompletionError` through the re-export
    |
652 -                             .send(Err(crate::completion_provider::CompletionError::HttpError));
652 +                             .send(Err(completion::CompletionError));
    |

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/gemini/gemini_client.rs:808:66
    |
808 | ) -> Result<GeminiCompletionBuilder, crate::completion_provider::CompletionError> {
    |                                                                  ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:29:9
    |
29  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use fluent_ai_domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
808 - ) -> Result<GeminiCompletionBuilder, crate::completion_provider::CompletionError> {
808 + ) -> Result<GeminiCompletionBuilder, completion::CompletionError> {
    |

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/clients/mistral/embedding.rs:37:33
   |
37 |     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
   |                                 ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
   |
37 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
37 +     ) -> Result<Vec<crate::domain::embedding::Embedding>, EmbeddingError> {
   |
37 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
37 +     ) -> Result<Vec<fluent_ai_domain::embedding::Embedding>, EmbeddingError> {
   |
help: import `Embedding` through the re-export
   |
37 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
37 +     ) -> Result<Vec<embedding::Embedding>, EmbeddingError> {
   |

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/clients/mistral/embedding.rs:79:66
   |
79 |                         .map(|(embedding, document)| embeddings::Embedding {
   |                                                                  ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
   |
79 -                         .map(|(embedding, document)| embeddings::Embedding {
79 +                         .map(|(embedding, document)| crate::domain::embedding::Embedding {
   |
79 -                         .map(|(embedding, document)| embeddings::Embedding {
79 +                         .map(|(embedding, document)| fluent_ai_domain::embedding::Embedding {
   |
help: import `Embedding` through the re-export
   |
79 -                         .map(|(embedding, document)| embeddings::Embedding {
79 +                         .map(|(embedding, document)| embedding::Embedding {
   |

error[E0603]: trait import `StreamingCompletionResponse` is private
   --> packages/provider/src/clients/ollama/client.rs:470:35
    |
470 |                 super::streaming::StreamingCompletionResponse,
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait import
    |
note: the trait import `StreamingCompletionResponse` is defined here...
   --> packages/provider/src/clients/ollama/streaming.rs:15:37
    |
15  |     streaming::{RawStreamingChoice, StreamingCompletionResponse}};
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the trait `StreamingCompletionResponse` which is defined here
   --> packages/provider/src/streaming/mod.rs:20:1
    |
20  | pub trait StreamingCompletionResponse: Send + Sync {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing this trait through its public re-export instead
    |
470 -                 super::streaming::StreamingCompletionResponse,
470 +                 crate::StreamingCompletionResponse,
    |
help: import `StreamingCompletionResponse` directly
    |
470 -                 super::streaming::StreamingCompletionResponse,
470 +                 streaming::StreamingCompletionResponse,
    |

error[E0603]: trait import `StreamingCompletionResponse` is private
   --> packages/provider/src/clients/ollama/completion.rs:195:41
    |
195 |     type StreamingResponse = streaming::StreamingCompletionResponse<CompletionResponse>;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait import
    |
note: the trait import `StreamingCompletionResponse` is defined here...
   --> packages/provider/src/clients/ollama/streaming.rs:15:37
    |
15  |     streaming::{RawStreamingChoice, StreamingCompletionResponse}};
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the trait `StreamingCompletionResponse` which is defined here
   --> packages/provider/src/streaming/mod.rs:20:1
    |
20  | pub trait StreamingCompletionResponse: Send + Sync {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing this trait through its public re-export instead
    |
195 -     type StreamingResponse = streaming::StreamingCompletionResponse<CompletionResponse>;
195 +     type StreamingResponse = crate::StreamingCompletionResponse<CompletionResponse>;
    |
help: import `StreamingCompletionResponse` directly
    |
195 -     type StreamingResponse = streaming::StreamingCompletionResponse<CompletionResponse>;
195 +     type StreamingResponse = streaming::StreamingCompletionResponse;
    |

error[E0603]: struct `Usage` is private
   --> packages/provider/src/clients/openai/streaming.rs:293:75
    |
293 |             let usage = self.usage.as_ref().map(|u| crate::domain::chunk::Usage {
    |                                                                           ^^^^^ private struct
    |
note: the struct `Usage` is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
    |
13  | use crate::model::Usage;
    |     ^^^^^^^^^^^^^^^^^^^
help: consider importing one of these structs instead
    |
293 -             let usage = self.usage.as_ref().map(|u| crate::domain::chunk::Usage {
293 +             let usage = self.usage.as_ref().map(|u| crate::domain::Usage {
    |
293 -             let usage = self.usage.as_ref().map(|u| crate::domain::chunk::Usage {
293 +             let usage = self.usage.as_ref().map(|u| fluent_ai_domain::Usage {
    |
help: import `Usage` directly
    |
293 -             let usage = self.usage.as_ref().map(|u| crate::domain::chunk::Usage {
293 +             let usage = self.usage.as_ref().map(|u| fluent_ai_domain::model::usage::Usage {
    |

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/clients/together/embedding.rs:70:33
   |
70 |     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
   |                                 ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
   |
70 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
70 +     ) -> Result<Vec<crate::domain::embedding::Embedding>, EmbeddingError> {
   |
70 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
70 +     ) -> Result<Vec<fluent_ai_domain::embedding::Embedding>, EmbeddingError> {
   |
help: import `Embedding` through the re-export
   |
70 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
70 +     ) -> Result<Vec<embedding::Embedding>, EmbeddingError> {
   |

error[E0603]: struct import `Embedding` is private
   --> packages/provider/src/clients/together/embedding.rs:107:66
    |
107 |                         .map(|(embedding, document)| embeddings::Embedding {
    |                                                                  ^^^^^^^^^ private struct import
    |
note: the struct import `Embedding` is defined here...
   --> packages/provider/src/embeddings/mod.rs:10:35
    |
10  | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
    |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
    |
24  | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
    |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
    |
107 -                         .map(|(embedding, document)| embeddings::Embedding {
107 +                         .map(|(embedding, document)| crate::domain::embedding::Embedding {
    |
107 -                         .map(|(embedding, document)| embeddings::Embedding {
107 +                         .map(|(embedding, document)| fluent_ai_domain::embedding::Embedding {
    |
help: import `Embedding` through the re-export
    |
107 -                         .map(|(embedding, document)| embeddings::Embedding {
107 +                         .map(|(embedding, document)| embedding::Embedding {
    |

error[E0603]: trait import `StreamingCompletionResponse` is private
   --> packages/provider/src/clients/xai/client.rs:508:35
    |
508 |                 super::streaming::StreamingCompletionResponse,
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait import
    |
note: the trait import `StreamingCompletionResponse` is defined here...
   --> packages/provider/src/clients/xai/streaming.rs:6:5
    |
6   | use crate::streaming::StreamingCompletionResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the trait `StreamingCompletionResponse` which is defined here
   --> packages/provider/src/streaming/mod.rs:20:1
    |
20  | pub trait StreamingCompletionResponse: Send + Sync {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing this trait through its public re-export instead
    |
508 -                 super::streaming::StreamingCompletionResponse,
508 +                 crate::StreamingCompletionResponse,
    |
help: import `StreamingCompletionResponse` directly
    |
508 -                 super::streaming::StreamingCompletionResponse,
508 +                 streaming::StreamingCompletionResponse,
    |

error[E0603]: constant import `MAX_TOOLS` is private
   --> packages/provider/src/clients/xai/completion.rs:105:52
    |
105 |                 if xai_tools.len() < super::types::MAX_TOOLS {
    |                                                    ^^^^^^^^^ private constant import
    |
note: the constant import `MAX_TOOLS` is defined here...
   --> packages/provider/src/clients/xai/types.rs:8:27
    |
8   | use crate::{MAX_MESSAGES, MAX_TOOLS, MAX_DOCUMENTS};
    |                           ^^^^^^^^^
note: ...and refers to the constant `MAX_TOOLS` which is defined here
   --> packages/provider/src/lib.rs:8:1
    |
8   | pub const MAX_TOOLS: usize = 64;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing this constant instead
    |
105 -                 if xai_tools.len() < super::types::MAX_TOOLS {
105 +                 if xai_tools.len() < crate::MAX_TOOLS {
    |

error[E0599]: no method named `clone` found for struct `AtomicU64` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/realtime/streaming.rs:255:52
    |
255 |         let processing_rate = self.processing_rate.clone();
    |                                                    ^^^^^ method not found in `AtomicU64`

error[E0603]: enum import `ZeroOneOrMany` is private
   --> packages/provider/src/clients/xai/completion.rs:224:63
    |
224 | impl TryFrom<XaiChatResponse> for crate::completion_provider::ZeroOneOrMany<String> {
    |                                                               ^^^^^^^^^^^^^ private enum import
    |
note: the enum import `ZeroOneOrMany` is defined here...
   --> packages/provider/src/completion_provider.rs:11:5
    |
11  | use cyrup_sugars::ZeroOneOrMany;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `ZeroOneOrMany` which is defined here
   --> /Users/davidmaple/.cargo/git/checkouts/cyrup-sugars-291ac2b5c478a1ed/a72046f/packages/cyrup-sugars/src/lib.rs:78:64
    |
78  | pub use sugars_collections::{ByteSize, ByteSizeExt, OneOrMany, ZeroOneOrMany};
    |                                                                ^^^^^^^^^^^^^ you could import this directly
help: consider importing one of these enums instead
    |
224 - impl TryFrom<XaiChatResponse> for crate::completion_provider::ZeroOneOrMany<String> {
224 + impl TryFrom<XaiChatResponse> for crate::ZeroOneOrMany<String> {
    |
224 - impl TryFrom<XaiChatResponse> for crate::completion_provider::ZeroOneOrMany<String> {
224 + impl TryFrom<XaiChatResponse> for cyrup_sugars::ZeroOneOrMany<String> {
    |
224 - impl TryFrom<XaiChatResponse> for crate::completion_provider::ZeroOneOrMany<String> {
224 + impl TryFrom<XaiChatResponse> for fluent_ai_domain::ZeroOneOrMany<String> {
    |
help: import `ZeroOneOrMany` directly
    |
224 - impl TryFrom<XaiChatResponse> for crate::completion_provider::ZeroOneOrMany<String> {
224 + impl TryFrom<XaiChatResponse> for sugars_collections::zero_one_or_many::ZeroOneOrMany {
    |

error[E0603]: enum import `ZeroOneOrMany` is private
   --> packages/provider/src/clients/xai/completion.rs:234:44
    |
234 |             Ok(crate::completion_provider::ZeroOneOrMany::One(
    |                                            ^^^^^^^^^^^^^ private enum import
    |
note: the enum import `ZeroOneOrMany` is defined here...
   --> packages/provider/src/completion_provider.rs:11:5
    |
11  | use cyrup_sugars::ZeroOneOrMany;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `ZeroOneOrMany` which is defined here
   --> /Users/davidmaple/.cargo/git/checkouts/cyrup-sugars-291ac2b5c478a1ed/a72046f/packages/cyrup-sugars/src/lib.rs:78:64
    |
78  | pub use sugars_collections::{ByteSize, ByteSizeExt, OneOrMany, ZeroOneOrMany};
    |                                                                ^^^^^^^^^^^^^ you could import this directly
help: consider importing one of these tuple variants instead
    |
234 -             Ok(crate::completion_provider::ZeroOneOrMany::One(
234 +             Ok(crate::ZeroOneOrMany::One(
    |
234 -             Ok(crate::completion_provider::ZeroOneOrMany::One(
234 +             Ok(cyrup_sugars::ZeroOneOrMany::One(
    |
234 -             Ok(crate::completion_provider::ZeroOneOrMany::One(
234 +             Ok(fluent_ai_domain::ZeroOneOrMany::One(
    |
help: import `ZeroOneOrMany` directly
    |
234 -             Ok(crate::completion_provider::ZeroOneOrMany::One(
234 +             Ok(sugars_collections::zero_one_or_many::ZeroOneOrMany(
    |

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/client.rs:89:50
   |
89 |     ) -> AsyncTask<Result<Vec<crate::embeddings::Embedding>, crate::embeddings::EmbeddingError>>;
   |                                                  ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
   |
89 -     ) -> AsyncTask<Result<Vec<crate::embeddings::Embedding>, crate::embeddings::EmbeddingError>>;
89 +     ) -> AsyncTask<Result<Vec<crate::domain::embedding::Embedding>, crate::embeddings::EmbeddingError>>;
   |
89 -     ) -> AsyncTask<Result<Vec<crate::embeddings::Embedding>, crate::embeddings::EmbeddingError>>;
89 +     ) -> AsyncTask<Result<Vec<fluent_ai_domain::embedding::Embedding>, crate::embeddings::EmbeddingError>>;
   |
help: import `Embedding` through the re-export
   |
89 -     ) -> AsyncTask<Result<Vec<crate::embeddings::Embedding>, crate::embeddings::EmbeddingError>>;
89 +     ) -> AsyncTask<Result<Vec<embedding::Embedding>, crate::embeddings::EmbeddingError>>;
   |

warning: unexpected `cfg` condition value: `cylo`
  --> packages/provider/src/clients/anthropic/tools/function_calling.rs:17:7
   |
17 | #[cfg(feature = "cylo")]
   |       ^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `cylo` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unused import: `any::TypeId`
 --> packages/provider/src/clients/anthropic/tools/function_calling.rs:6:11
  |
6 | use std::{any::TypeId, collections::HashMap, marker::PhantomData};
  |           ^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `fluent_ai_domain::tool::Tool`
  --> packages/provider/src/clients/anthropic/tools/function_calling.rs:10:5
   |
10 | use fluent_ai_domain::tool::Tool;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `cylo`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:467:11
    |
467 |     #[cfg(feature = "cylo")]
    |           ^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `cylo` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `cylo`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:485:11
    |
485 |     #[cfg(feature = "cylo")]
    |           ^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `cylo` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `cylo`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:512:19
    |
512 |             #[cfg(feature = "cylo")]
    |                   ^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `cylo` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: ambiguous glob re-exports
  --> packages/provider/src/clients/anthropic/mod.rs:39:9
   |
39 | pub use streaming::*;
   |         ^^^^^^^^^^^^ the name `AnthropicStreamChunk` in the type namespace is first re-exported here
40 | pub use tools::*;
41 | pub use types::*;
   |         -------- but the name `AnthropicStreamChunk` in the type namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: ambiguous glob re-exports
  --> packages/provider/src/clients/anthropic/mod.rs:40:9
   |
36 | pub use messages::*;
   |         ----------- but the name `Tool` in the type namespace is also re-exported here
...
40 | pub use tools::*;
   |         ^^^^^^^^ the name `Tool` in the type namespace is first re-exported here

warning: unexpected `cfg` condition value: `audio`
  --> packages/provider/src/clients/azure/mod.rs:18:7
   |
18 | #[cfg(feature = "audio")]
   |       ^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `audio` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `audio`
  --> packages/provider/src/clients/azure/mod.rs:24:7
   |
24 | #[cfg(feature = "audio")]
   |       ^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `audio` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `bytes::Bytes`
  --> packages/provider/src/clients/azure/client.rs:13:5
   |
13 | use bytes::Bytes;
   |     ^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `audio`
   --> packages/provider/src/clients/azure/client.rs:293:11
    |
293 |     #[cfg(feature = "audio")]
    |           ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `audio` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused imports: `convert::Infallible` and `str::FromStr`
 --> packages/provider/src/clients/azure/completion.rs:9:11
  |
9 | use std::{convert::Infallible, str::FromStr};
  |           ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `fluent_ai_domain::completion::StreamingCoreResponse`
  --> packages/provider/src/clients/azure/completion.rs:12:5
   |
12 | use fluent_ai_domain::completion::StreamingCoreResponse;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `CompletionCoreError`
  --> packages/provider/src/clients/azure/completion.rs:14:11
   |
14 |     self, CompletionCoreError, StreamingCoreResponse as RigStreaming};
   |           ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `MessageError` and `self`
  --> packages/provider/src/clients/azure/completion.rs:15:33
   |
15 | use fluent_ai_domain::message::{self, MessageError};
   |                                 ^^^^  ^^^^^^^^^^^^

warning: unused import: `Serialize`
  --> packages/provider/src/clients/azure/completion.rs:16:26
   |
16 | use serde::{Deserialize, Serialize};
   |                          ^^^^^^^^^

warning: unused imports: `OneOrMany` and `TranscriptionResponse`
  --> packages/provider/src/clients/azure/completion.rs:23:5
   |
23 |     OneOrMany,
   |     ^^^^^^^^^
24 |     clients::openai::{self, TranscriptionResponse, send_compatible_streaming_request}};
   |                             ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `self`
 --> packages/provider/src/clients/azure/embedding.rs:9:35
  |
9 | use fluent_ai_domain::embedding::{self};
  |                                   ^^^^

warning: unused import: `fluent_ai_domain::model::AnyEmbeddingCapable`
  --> packages/provider/src/clients/azure/embedding.rs:10:5
   |
10 | use fluent_ai_domain::model::AnyEmbeddingCapable;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::json`
  --> packages/provider/src/clients/azure/embedding.rs:12:5
   |
12 | use serde_json::json;
   |     ^^^^^^^^^^^^^^^^

warning: unused import: `anyhow::Error`
   --> packages/provider/src/clients/azure/embedding.rs:178:13
    |
178 |         use anyhow::Error; // was fluent_ai_domain::embedding::EmbeddingError
    |             ^^^^^^^^^^^^^

warning: unused import: `HttpClient`
   --> packages/provider/src/clients/azure/embedding.rs:179:31
    |
179 |         use fluent_ai_http3::{HttpClient, HttpRequest};
    |                               ^^^^^^^^^^

warning: unused import: `anyhow::Error`
   --> packages/provider/src/clients/azure/embedding.rs:242:13
    |
242 |         use anyhow::Error; // was fluent_ai_domain::embedding::EmbeddingError
    |             ^^^^^^^^^^^^^

warning: unused import: `HttpClient`
   --> packages/provider/src/clients/azure/embedding.rs:243:31
    |
243 |         use fluent_ai_http3::{HttpClient, HttpRequest};
    |                               ^^^^^^^^^^

warning: unused import: `CompletionCoreError`
  --> packages/provider/src/clients/azure/streaming.rs:10:36
   |
10 | use fluent_ai_domain::completion::{CompletionCoreError, CompletionRequest};
   |                                    ^^^^^^^^^^^^^^^^^^^

warning: unused import: `header`
  --> packages/provider/src/clients/azure/transcription.rs:12:30
   |
12 | use fluent_ai_http3::{Http3, header};
   |                              ^^^^^^

warning: unused imports: `AsyncStreamSender`, `AsyncStream`, and `channel`
  --> packages/provider/src/clients/azure/transcription.rs:15:13
   |
15 | use crate::{AsyncStream, AsyncStreamSender, channel, clients::openai::TranscriptionResponse};
   |             ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^

warning: unused import: `transcription::*`
  --> packages/provider/src/clients/azure/mod.rs:32:9
   |
32 | pub use transcription::*;
   |         ^^^^^^^^^^^^^^^^

warning: unused imports: `CompletionClient` and `ProviderClient`
  --> packages/provider/src/clients/bedrock/mod.rs:40:21
   |
40 | use crate::client::{CompletionClient, ProviderClient};
   |                     ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^

warning: unused import: `arc_swap::ArcSwap`
  --> packages/provider/src/clients/bedrock/client.rs:14:5
   |
14 | use arc_swap::ArcSwap;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::Value`
  --> packages/provider/src/clients/bedrock/completion.rs:19:5
   |
19 | use serde_json::Value;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `arrayvec::ArrayString`
  --> packages/provider/src/clients/bedrock/streaming.rs:12:5
   |
12 | use arrayvec::ArrayString;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `super::regions`
   --> packages/provider/src/clients/bedrock/mod.rs:159:9
    |
159 |     use super::regions;
    |         ^^^^^^^^^^^^^^

warning: unused import: `DeviceInfo`
  --> packages/provider/src/clients/candle/client.rs:19:29
   |
19 | use super::device_manager::{DeviceInfo, DeviceManager};
   |                             ^^^^^^^^^^

warning: unused import: `PoolConfig`
  --> packages/provider/src/clients/candle/client.rs:23:45
   |
23 | use super::memory_pool::{MemoryPoolManager, PoolConfig};
   |                                             ^^^^^^^^^^

warning: unused import: `ModelState`
  --> packages/provider/src/clients/candle/client.rs:24:42
   |
24 | use super::model_repo::{ModelRepository, ModelState};
   |                                          ^^^^^^^^^^

warning: unused import: `TokenStreamer`
  --> packages/provider/src/clients/candle/client.rs:27:77
   |
27 | use super::streaming::{FinishReason, StreamingConfig, StreamingCoordinator, TokenStreamer};
   |                                                                             ^^^^^^^^^^^^^

warning: unused imports: `SpecialTokens` and `TokenizationResult`
  --> packages/provider/src/clients/candle/client.rs:28:41
   |
28 | use super::tokenizer::{CandleTokenizer, SpecialTokens, TextBuffer, TokenizationResult};
   |                                         ^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> packages/provider/src/clients/candle/config.rs:6:5
  |
6 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `arc_swap::ArcSwap`
 --> packages/provider/src/clients/candle/config.rs:9:5
  |
9 | use arc_swap::ArcSwap;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `AtomicU8`
 --> packages/provider/src/clients/candle/device_manager.rs:7:37
  |
7 | use std::sync::atomic::{AtomicBool, AtomicU8, AtomicU64, Ordering};
  |                                     ^^^^^^^^

warning: unused import: `Guard`
  --> packages/provider/src/clients/candle/device_manager.rs:10:25
   |
10 | use arc_swap::{ArcSwap, Guard};
   |                         ^^^^^

warning: unused import: `ErrorMetrics`
  --> packages/provider/src/clients/candle/device_manager.rs:15:47
   |
15 | use super::error::{CandleError, CandleResult, ErrorMetrics, record_global_error};
   |                                               ^^^^^^^^^^^^

warning: unused import: `Guard`
  --> packages/provider/src/clients/candle/model_repo.rs:12:25
   |
12 | use arc_swap::{ArcSwap, Guard};
   |                         ^^^^^

warning: unused import: `std::borrow::Cow`
 --> packages/provider/src/clients/candle/models.rs:3:5
  |
3 | use std::borrow::Cow;
  |     ^^^^^^^^^^^^^^^^

warning: variant `Devstral_22B` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:13:5
   |
13 |     Devstral_22B,
   |     ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Devstral22b`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: variant `Mistral_7B` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:19:5
   |
19 |     Mistral_7B,
   |     ^^^^^^^^^^ help: convert the identifier to upper camel case: `Mistral7b`

warning: variant `CodeLlama_7B` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:21:5
   |
21 |     CodeLlama_7B,
   |     ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CodeLlama7b`

warning: variant `Phi3_Mini` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:23:5
   |
23 |     Phi3_Mini,
   |     ^^^^^^^^^ help: convert the identifier to upper camel case: `Phi3Mini`

warning: variant `Gemma_2B` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:25:5
   |
25 |     Gemma_2B,
   |     ^^^^^^^^ help: convert the identifier to upper camel case: `Gemma2b`

warning: variant `Gemma_7B` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:27:5
   |
27 |     Gemma_7B,
   |     ^^^^^^^^ help: convert the identifier to upper camel case: `Gemma7b`

warning: variant `KimiK2_FP16` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:29:5
   |
29 |     KimiK2_FP16,
   |     ^^^^^^^^^^^ help: convert the identifier to upper camel case: `KimiK2Fp16`

warning: variant `KimiK2_FP8` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:31:5
   |
31 |     KimiK2_FP8}
   |     ^^^^^^^^^^ help: convert the identifier to upper camel case: `KimiK2Fp8`

warning: unused import: `HttpError`
  --> packages/provider/src/clients/deepseek/completion.rs:20:47
   |
20 | use fluent_ai_http3::{HttpClient, HttpConfig, HttpError, HttpRequest};
   |                                               ^^^^^^^^^

warning: unused import: `bytes::Bytes`
  --> packages/provider/src/clients/gemini/client.rs:13:5
   |
13 | use bytes::Bytes;
   |     ^^^^^^^^^^^^

warning: unused import: `CompletionCoreError`
  --> packages/provider/src/clients/gemini/client.rs:17:11
   |
17 |     self, CompletionCoreError, CompletionRequest, CompletionRequestBuilder};
   |           ^^^^^^^^^^^^^^^^^^^

warning: unused import: `fluent_ai_domain::embedding::Embedding`
  --> packages/provider/src/clients/gemini/client.rs:18:5
   |
18 | use fluent_ai_domain::embedding::Embedding;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AsyncTask`
  --> packages/provider/src/clients/gemini/completion.rs:37:24
   |
37 | use fluent_ai_domain::{AsyncTask, spawn_async};
   |                        ^^^^^^^^^

warning: unused import: `HttpError`
  --> packages/provider/src/clients/gemini/completion.rs:39:47
   |
39 | use fluent_ai_http3::{HttpClient, HttpConfig, HttpError, HttpRequest};
   |                                               ^^^^^^^^^

warning: unused import: `fluent_ai_domain::model::AnyEmbeddingCapable`
 --> packages/provider/src/clients/gemini/embedding.rs:6:5
  |
6 | use fluent_ai_domain::model::AnyEmbeddingCapable;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `worker`
  --> packages/provider/src/clients/gemini/embedding.rs:47:16
   |
47 |     #[cfg_attr(feature = "worker", worker::send)]
   |                ^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `worker` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `fluent_ai_domain::chunk::CompletionChunk`
 --> packages/provider/src/clients/gemini/model_info.rs:6:5
  |
6 | use fluent_ai_domain::chunk::CompletionChunk;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::AsyncStream`
 --> packages/provider/src/clients/gemini/model_info.rs:8:5
  |
8 | use crate::AsyncStream;
  |     ^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `worker`
  --> packages/provider/src/clients/gemini/transcription.rs:40:16
   |
40 |     #[cfg_attr(feature = "worker", worker::send)]
   |                ^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `worker` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `std::convert::TryFrom`
 --> packages/provider/src/clients/gemini/gemini_client.rs:6:5
  |
6 | use std::convert::TryFrom;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AsyncTask`
  --> packages/provider/src/clients/gemini/gemini_client.rs:14:24
   |
14 | use fluent_ai_domain::{AsyncTask, Document, Message, spawn_async};
   |                        ^^^^^^^^^

warning: unused import: `HttpError`
  --> packages/provider/src/clients/gemini/gemini_client.rs:26:47
   |
26 | use fluent_ai_http3::{HttpClient, HttpConfig, HttpError, HttpRequest};
   |                                               ^^^^^^^^^

warning: unused import: `Map`
  --> packages/provider/src/clients/gemini/gemini_client.rs:27:18
   |
27 | use serde_json::{Map, Value};
   |                  ^^^

warning: unused imports: `info` and `warn`
  --> packages/provider/src/clients/gemini/gemini_client.rs:28:29
   |
28 | use tracing::{debug, error, info, warn};
   |                             ^^^^  ^^^^

warning: unused import: `StreamingResponse`
  --> packages/provider/src/clients/gemini/gemini_client.rs:32:54
   |
32 | use super::gemini_streaming::{GeminiStreamProcessor, StreamingResponse};
   |                                                      ^^^^^^^^^^^^^^^^^

warning: unused import: `OneOrMany`
  --> packages/provider/src/clients/gemini/gemini_client.rs:34:18
   |
34 |     AsyncStream, OneOrMany,
   |                  ^^^^^^^^^

warning: unused import: `std::fmt`
 --> packages/provider/src/clients/gemini/gemini_error.rs:6:5
  |
6 | use std::fmt;
  |     ^^^^^^^^

warning: unused imports: `AsyncTask` and `spawn_async`
  --> packages/provider/src/clients/gemini/gemini_streaming.rs:10:24
   |
10 | use fluent_ai_domain::{AsyncTask, chunk::CompletionChunk, spawn_async};
   |                        ^^^^^^^^^                          ^^^^^^^^^^^

warning: unused import: `warn`
  --> packages/provider/src/clients/gemini/gemini_streaming.rs:13:29
   |
13 | use tracing::{debug, error, warn};
   |                             ^^^^

warning: unused import: `FinishReason`
 --> packages/provider/src/clients/gemini/gemini_types.rs:6:48
  |
6 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage};
  |                                                ^^^^^^^^^^^^

warning: unused import: `OneOrMany`
  --> packages/provider/src/clients/gemini/gemini_types.rs:15:5
   |
15 |     OneOrMany,
   |     ^^^^^^^^^

warning: unused import: `header`
  --> packages/provider/src/clients/groq/completion.rs:15:45
   |
15 | use fluent_ai_http3::{Http3, HttpStreamExt, header};
   |                                             ^^^^^^

warning: unused import: `tokio::task`
  --> packages/provider/src/clients/groq/completion.rs:19:5
   |
19 | use tokio::task;
   |     ^^^^^^^^^^^

warning: unused import: `futures_util::Stream`
 --> packages/provider/src/clients/groq/streaming.rs:8:5
  |
8 | use futures_util::Stream;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::Value`
  --> packages/provider/src/clients/groq/streaming.rs:10:5
   |
10 | use serde_json::Value;
   |     ^^^^^^^^^^^^^^^^^

warning: unused imports: `StreamingChoice` and `StreamingMessage`
  --> packages/provider/src/clients/groq/streaming.rs:16:43
   |
16 |     clients::openai::{CompletionResponse, StreamingChoice, StreamingMessage},
   |                                           ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^

warning: unused import: `AsyncTask`
  --> packages/provider/src/clients/huggingface/completion.rs:18:24
   |
18 | use fluent_ai_domain::{AsyncTask, spawn_async};
   |                        ^^^^^^^^^

warning: unused import: `HttpError`
  --> packages/provider/src/clients/huggingface/completion.rs:20:47
   |
20 | use fluent_ai_http3::{HttpClient, HttpConfig, HttpError, HttpRequest};
   |                                               ^^^^^^^^^

warning: unused import: `header`
  --> packages/provider/src/clients/huggingface/transcription.rs:10:30
   |
10 | use fluent_ai_http3::{Http3, header};
   |                              ^^^^^^

warning: unexpected `cfg` condition value: `worker`
  --> packages/provider/src/clients/huggingface/transcription.rs:51:16
   |
51 |     #[cfg_attr(feature = "worker", worker::send)]
   |                ^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `worker` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/mistral/completion.rs:357:16
    |
357 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/mistral/completion.rs:399:16
    |
399 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `fluent_ai_domain::tool::ToolDefinition`
   --> packages/provider/src/clients/mistral/completion.rs:505:5
    |
505 | use fluent_ai_domain::tool::ToolDefinition;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AsyncTask`
   --> packages/provider/src/clients/mistral/completion.rs:519:24
    |
519 | use fluent_ai_domain::{AsyncTask, spawn_async};
    |                        ^^^^^^^^^

warning: unused import: `HttpError`
   --> packages/provider/src/clients/mistral/completion.rs:521:47
    |
521 | use fluent_ai_http3::{HttpClient, HttpConfig, HttpError, HttpRequest};
    |                                               ^^^^^^^^^

warning: unused import: `fluent_ai_domain::model::AnyEmbeddingCapable`
 --> packages/provider/src/clients/mistral/embedding.rs:1:5
  |
1 | use fluent_ai_domain::model::AnyEmbeddingCapable;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `worker`
  --> packages/provider/src/clients/mistral/embedding.rs:33:16
   |
33 |     #[cfg_attr(feature = "worker", worker::send)]
   |                ^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `worker` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `fluent_ai_domain::chunk::CompletionChunk`
 --> packages/provider/src/clients/mistral/model_info.rs:8:5
  |
8 | use fluent_ai_domain::chunk::CompletionChunk;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::AsyncStream`
  --> packages/provider/src/clients/mistral/model_info.rs:10:5
   |
10 | use crate::AsyncStream;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `CompletionProvider`
  --> packages/provider/src/clients/mistral/model_info.rs:12:34
   |
12 | use crate::completion_provider::{CompletionProvider, ModelConfig, ModelInfo, ModelPrompt};
   |                                  ^^^^^^^^^^^^^^^^^^

warning: unused import: `arc_swap::ArcSwap`
  --> packages/provider/src/clients/ollama/client.rs:10:5
   |
10 | use arc_swap::ArcSwap;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `self`
  --> packages/provider/src/clients/ollama/completion.rs:15:18
   |
15 |     embeddings::{self, Embedding, EmbeddingError, EmbeddingModel as EmbeddingModelTrait},
   |                  ^^^^

warning: unused import: `header`
  --> packages/provider/src/clients/ollama/completion.rs:20:45
   |
20 | use fluent_ai_http3::{Http3, HttpStreamExt, header};
   |                                             ^^^^^^

warning: unused import: `Http3`
 --> packages/provider/src/clients/ollama/streaming.rs:7:23
  |
7 | use fluent_ai_http3::{Http3, HttpStreamExt};
  |                       ^^^^^

warning: unused import: `CompletionResponse`
  --> packages/provider/src/clients/ollama/streaming.rs:11:25
   |
11 | use super::completion::{CompletionResponse, ProviderMessage};
   |                         ^^^^^^^^^^^^^^^^^^

warning: unused imports: `CompletionClient` and `ProviderClient`
  --> packages/provider/src/clients/openai/mod.rs:45:21
   |
45 | use crate::client::{CompletionClient, ProviderClient};
   |                     ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^

warning: unused import: `CompletionProvider`
  --> packages/provider/src/clients/openai/mod.rs:46:51
   |
46 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                                   ^^^^^^^^^^^^^^^^^^

warning: unused import: `AsyncTask`
  --> packages/provider/src/clients/openai/completion.rs:18:24
   |
18 | use fluent_ai_domain::{AsyncTask, spawn_async};
   |                        ^^^^^^^^^

warning: unused import: `HttpError`
  --> packages/provider/src/clients/openai/completion.rs:30:47
   |
30 | use fluent_ai_http3::{HttpClient, HttpConfig, HttpError, HttpRequest};
   |                                               ^^^^^^^^^

warning: unused import: `once_cell::sync::Lazy`
 --> packages/provider/src/clients/openai/discovery.rs:6:5
  |
6 | use once_cell::sync::Lazy;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize` and `Serialize`
 --> packages/provider/src/clients/openai/discovery.rs:7:13
  |
7 | use serde::{Deserialize, Serialize};
  |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `thiserror::Error`
 --> packages/provider/src/clients/openai/discovery.rs:8:5
  |
8 | use thiserror::Error;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `trace`
 --> packages/provider/src/clients/openai/discovery.rs:9:47
  |
9 | use tracing::{debug, error, info, instrument, trace, warn};
  |                                               ^^^^^

warning: unused imports: `error::OpenAIError`, `model_name_from_variant`, `model_supports_audio`, `model_supports_tools`, and `model_supports_vision`
  --> packages/provider/src/clients/openai/discovery.rs:13:5
   |
13 |     error::OpenAIError,
   |     ^^^^^^^^^^^^^^^^^^
14 |     model_info::{
15 |         get_model_config, model_name_from_variant, model_supports_audio, model_supports_tools,
   |                           ^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^
16 |         model_supports_vision}};
   |         ^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `start_processing` found for struct `Arc<live_updates::LiveUpdateSystem>` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/realtime/system.rs:91:33
   |
91 |         self.live_update_system.start_processing();
   |                                 ^^^^^^^^^^^^^^^^ method not found in `Arc<live_updates::LiveUpdateSystem>`

warning: unused import: `Message as DomainMessage`
  --> packages/provider/src/clients/openai/messages.rs:13:5
   |
13 |     Message as DomainMessage, MessageRole, ToolCall as DomainToolCall, ToolFunction};
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `fluent_ai_domain::chunk::CompletionChunk`
 --> packages/provider/src/clients/openai/model_info.rs:6:5
  |
6 | use fluent_ai_domain::chunk::CompletionChunk;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::AsyncStream`
 --> packages/provider/src/clients/openai/model_info.rs:8:5
  |
8 | use crate::AsyncStream;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused imports: `Http3` and `HttpResult`
 --> packages/provider/src/clients/openrouter/completion.rs:5:23
  |
5 | use fluent_ai_http3::{Http3, HttpResult};
  |                       ^^^^^  ^^^^^^^^^^

warning: unused import: `serde::Deserialize`
 --> packages/provider/src/clients/openrouter/completion.rs:6:5
  |
6 | use serde::Deserialize;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused imports: `Value` and `json`
 --> packages/provider/src/clients/openrouter/completion.rs:7:18
  |
7 | use serde_json::{Value, json};
  |                  ^^^^^  ^^^^

warning: unused import: `Usage`
 --> packages/provider/src/clients/openrouter/completion.rs:9:60
  |
9 | use super::client::{ApiErrorResponse, ApiResponse, Client, Usage};
  |                                                            ^^^^^

warning: unused import: `json_util`
  --> packages/provider/src/clients/openrouter/completion.rs:16:5
   |
16 |     json_util};
   |     ^^^^^^^^^

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/openrouter/completion.rs:230:16
    |
230 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/openrouter/completion.rs:272:16
    |
272 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `std::future::Future`
  --> packages/provider/src/clients/openrouter/streaming.rs:14:5
   |
14 | use std::future::Future;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Context` and `Poll`
  --> packages/provider/src/clients/openrouter/streaming.rs:18:17
   |
18 | use std::task::{Context, Poll};
   |                 ^^^^^^^  ^^^^

warning: unused imports: `Duration` and `Instant`
  --> packages/provider/src/clients/openrouter/streaming.rs:19:17
   |
19 | use std::time::{Duration, Instant, SystemTime};
   |                 ^^^^^^^^  ^^^^^^^

warning: unused import: `async_stream::stream`
  --> packages/provider/src/clients/openrouter/streaming.rs:23:5
   |
23 | use async_stream::stream;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `fluent_ai_domain::context::chunk::FinishReason`
  --> packages/provider/src/clients/openrouter/streaming.rs:28:5
   |
28 | use fluent_ai_domain::context::chunk::FinishReason;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `SmallVec` and `smallvec`
  --> packages/provider/src/clients/openrouter/streaming.rs:33:16
   |
33 | use smallvec::{SmallVec, smallvec};
   |                ^^^^^^^^  ^^^^^^^^

warning: unused imports: `AsyncStreamSender`, `AsyncStream`, and `channel`
  --> packages/provider/src/clients/openrouter/streaming.rs:36:13
   |
36 | use crate::{AsyncStream, AsyncStreamSender, channel};
   |             ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^

warning: unused import: `bytes::Bytes`
  --> packages/provider/src/clients/perplexity/client.rs:12:5
   |
12 | use bytes::Bytes;
   |     ^^^^^^^^^^^^

warning: unused imports: `Deserialize` and `Serialize`
  --> packages/provider/src/clients/perplexity/completion.rs:16:13
   |
16 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused imports: `Value` and `json`
  --> packages/provider/src/clients/perplexity/completion.rs:17:18
   |
17 | use serde_json::{Value, json};
   |                  ^^^^^  ^^^^

warning: unused import: `json_util`
  --> packages/provider/src/clients/perplexity/completion.rs:23:5
   |
23 |     json_util, message};
   |     ^^^^^^^^^

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/perplexity/completion.rs:223:16
    |
223 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/perplexity/completion.rs:270:16
    |
270 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `serde_json::json`
  --> packages/provider/src/clients/together/completion.rs:19:5
   |
19 | use serde_json::json;
   |     ^^^^^^^^^^^^^^^^

warning: unused import: `json_util`
  --> packages/provider/src/clients/together/completion.rs:23:30
   |
23 | use crate::{clients::openai, json_util};
   |                              ^^^^^^^^^

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/together/completion.rs:238:16
    |
238 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/together/completion.rs:289:16
    |
289 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `worker`
  --> packages/provider/src/clients/together/embedding.rs:66:16
   |
66 |     #[cfg_attr(feature = "worker", worker::send)]
   |                ^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `worker` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `crate::clients::openai::send_compatible_streaming_request`
 --> packages/provider/src/clients/together/streaming.rs:5:5
  |
5 | use crate::clients::openai::send_compatible_streaming_request;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `task::JoinHandle as AsyncTaskHandle`
  --> packages/provider/src/clients/xai/client.rs:25:13
   |
25 | use tokio::{task::JoinHandle as AsyncTaskHandle, task::spawn as spawn_async};
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Http3` and `HttpResult`
  --> packages/provider/src/clients/xai/completion.rs:13:23
   |
13 | use fluent_ai_http3::{Http3, HttpResult};
   |                       ^^^^^  ^^^^^^^^^^

warning: unused imports: `Value` and `json`
  --> packages/provider/src/clients/xai/completion.rs:15:18
   |
15 | use serde_json::{Value, json};
   |                  ^^^^^  ^^^^

warning: unused import: `crate::json_util`
  --> packages/provider/src/clients/xai/completion.rs:19:5
   |
19 | use crate::json_util;
   |     ^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/xai/completion.rs:137:16
    |
137 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/xai/completion.rs:184:16
    |
184 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `header`
 --> packages/provider/src/clients/xai/streaming.rs:7:30
  |
7 | use fluent_ai_http3::{Http3, header};
  |                              ^^^^^^

warning: unused import: `crate::streaming::StreamingCompletionResponse`
  --> packages/provider/src/clients/xai/streaming.rs:19:5
   |
19 | use crate::streaming::StreamingCompletionResponse;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `generation`
  --> packages/provider/src/image_processing/mod.rs:13:7
   |
13 | #[cfg(feature = "generation")]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `generation` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
  --> packages/provider/src/image_processing/mod.rs:17:7
   |
17 | #[cfg(feature = "generation")]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `generation` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/mod.rs:294:7
    |
294 | #[cfg(feature = "generation")]
    |       ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `std::sync::Arc`
 --> packages/provider/src/image_processing/candle_backend.rs:7:5
  |
7 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `DType`
 --> packages/provider/src/image_processing/candle_backend.rs:9:19
  |
9 | use candle_core::{DType, Device, Tensor};
  |                   ^^^^^

warning: unused import: `candle_nn::VarBuilder`
  --> packages/provider/src/image_processing/candle_backend.rs:10:5
   |
10 | use candle_nn::VarBuilder;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/candle_backend.rs:799:30
    |
799 |             generation: cfg!(feature = "generation"),
    |                              ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
  --> packages/provider/src/image_processing/factory.rs:38:11
   |
38 |     #[cfg(feature = "generation")]
   |           ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `generation` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
  --> packages/provider/src/image_processing/factory.rs:95:11
   |
95 |     #[cfg(feature = "generation")]
   |           ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
   = help: consider adding `generation` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:125:11
    |
125 |     #[cfg(feature = "generation")]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:219:11
    |
219 |     #[cfg(feature = "generation")]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:241:11
    |
241 |     #[cfg(feature = "generation")]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:256:11
    |
256 |     #[cfg(feature = "generation")]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:267:11
    |
267 |     #[cfg(feature = "generation")]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:227:19
    |
227 |             #[cfg(feature = "generation")]
    |                   ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:282:15
    |
282 |         #[cfg(feature = "generation")]
    |               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `gloo-timers`, `image`, `js-sys`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, `wasm-bindgen`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `std::future::Future`
 --> packages/provider/src/discovery.rs:3:5
  |
3 | use std::future::Future;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::pin::Pin`
 --> packages/provider/src/discovery.rs:4:5
  |
4 | use std::pin::Pin;
  |     ^^^^^^^^^^^^^

warning: unused import: `futures_util::future::BoxFuture`
 --> packages/provider/src/discovery.rs:9:5
  |
9 | use futures_util::future::BoxFuture;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `debug`, `instrument`, `trace`, and `warn`
  --> packages/provider/src/discovery.rs:12:15
   |
12 | use tracing::{debug, error, info, instrument, trace, warn};
   |               ^^^^^               ^^^^^^^^^^  ^^^^^  ^^^^

warning: unused import: `cyrup_sugars::AsyncResult`
  --> packages/provider/src/client_factory.rs:15:5
   |
15 | use cyrup_sugars::AsyncResult;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `fluent_ai_domain::Provider`
  --> packages/provider/src/client_factory.rs:16:5
   |
16 | use fluent_ai_domain::Provider;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `sleep`
  --> packages/provider/src/security/rotation.rs:16:39
   |
16 | use tokio::time::{Interval, interval, sleep};
   |                                       ^^^^^

warning: unused import: `warn`
  --> packages/provider/src/security/rotation.rs:17:35
   |
17 | use tracing::{debug, error, info, warn};
   |                                   ^^^^

warning: unused import: `RotationConfig`
  --> packages/provider/src/security/rotation.rs:20:63
   |
20 | use super::credentials::{CredentialManager, CredentialSource, RotationConfig};
   |                                                               ^^^^^^^^^^^^^^

warning: unused import: `OneOrMany`
 --> packages/provider/src/client.rs:6:20
  |
6 | use cyrup_sugars::{OneOrMany, ZeroOneOrMany};
  |                    ^^^^^^^^^

warning: unused import: `VoiceChunk`
 --> packages/provider/src/client.rs:7:64
  |
7 | use fluent_ai_domain::chunk::{CompletionChunk, EmbeddingChunk, VoiceChunk};
  |                                                                ^^^^^^^^^^

warning: unused imports: `Context` and `Poll`
 --> packages/provider/src/streaming/mod.rs:7:17
  |
7 | use std::task::{Context, Poll};
  |                 ^^^^^^^  ^^^^

warning: unused import: `std::fmt`
 --> packages/provider/src/embeddings/mod.rs:7:5
  |
7 | use std::fmt;
  |     ^^^^^^^^

warning: unused import: `cyrup_sugars::ZeroOneOrMany`
 --> packages/provider/src/embeddings/mod.rs:9:5
  |
9 | use cyrup_sugars::ZeroOneOrMany;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `EmbeddingModel as DomainEmbeddingModel`
  --> packages/provider/src/embeddings/mod.rs:10:46
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::Deserialize`
  --> packages/provider/src/embeddings/mod.rs:11:5
   |
11 | use serde::Deserialize;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `std::future::Future`
 --> packages/provider/src/http3_streaming.rs:8:5
  |
8 | use std::future::Future;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::pin::Pin`
 --> packages/provider/src/http3_streaming.rs:9:5
  |
9 | use std::pin::Pin;
  |     ^^^^^^^^^^^^^

warning: ambiguous glob re-exports
  --> packages/provider/src/lib.rs:65:9
   |
65 | pub use client::*;
   |         ^^^^^^^^^ the name `EmbeddingModel` in the type namespace is first re-exported here
...
68 | pub use embeddings::*;
   |         ------------- but the name `EmbeddingModel` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> packages/provider/src/lib.rs:66:9
   |
66 | pub use completion_provider::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^ the name `TokenUsage` in the type namespace is first re-exported here
...
80 | pub use http3_streaming::*;
   |         ------------------ but the name `TokenUsage` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> packages/provider/src/lib.rs:68:9
   |
68 | pub use embeddings::*;
   |         ^^^^^^^^^^^^^ the name `Result` in the type namespace is first re-exported here
...
82 | pub use transcription::*;
   |         ---------------- but the name `Result` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> packages/provider/src/lib.rs:80:9
   |
80 | pub use http3_streaming::*;
   |         ^^^^^^^^^^^^^^^^^^ the name `TranscriptionChunk` in the type namespace is first re-exported here
81 | pub use streaming::*;
82 | pub use transcription::*;
   |         ---------------- but the name `TranscriptionChunk` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> packages/provider/src/lib.rs:80:9
   |
68 | pub use embeddings::*;
   |         ------------- but the name `EmbeddingChunk` in the type namespace is also re-exported here
...
80 | pub use http3_streaming::*;
   |         ^^^^^^^^^^^^^^^^^^ the name `EmbeddingChunk` in the type namespace is first re-exported here

error[E0609]: no field `message` on type `types::candle_chat::message::SearchChatMessage`
  --> packages/fluent-ai-candle/src/types/candle_chat/search/index/indexing.rs:26:18
   |
26 |                 .message
   |                  ^^^^^^^ unknown field
   |
   = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 3 others

error[E0308]: mismatched types
   --> packages/fluent-ai-candle/src/types/candle_chat/search/index/indexing.rs:32:53
    |
32  |                 .insert(Arc::from(doc_id.as_str()), message.clone());
    |                  ------                             ^^^^^^^^^^^^^^^ expected `CandleMessage`, found `SearchChatMessage`
    |                  |
    |                  arguments to this method are incorrect
    |
help: the return type of this call is `types::candle_chat::message::SearchChatMessage` due to the type of the argument passed
   --> packages/fluent-ai-candle/src/types/candle_chat/search/index/indexing.rs:30:13
    |
30  | /             self_clone
31  | |                 .document_store
32  | |                 .insert(Arc::from(doc_id.as_str()), message.clone());
    | |_____________________________________________________---------------^
    |                                                       |
    |                                                       this argument influences the return type of `insert`
note: method defined here
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-skiplist-0.1.3/src/map.rs:372:12
    |
372 |     pub fn insert(&self, key: K, value: V) -> Entry<'_, K, V> {
    |            ^^^^^^

error[E0609]: no field `message` on type `types::candle_chat::message::SearchChatMessage`
  --> packages/fluent-ai-candle/src/types/candle_chat/search/index/indexing.rs:35:65
   |
35 |             let tokens = self_clone.tokenize_with_simd(&message.message.content);
   |                                                                 ^^^^^^^ unknown field
   |
   = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 3 others

error[E0282]: type annotations needed
  --> packages/fluent-ai-candle/src/types/candle_chat/search/index/query_engine.rs:86:48
   |
86 |                 let doc_id = result.message.id.as_ref().unwrap_or(&String::new()).clone();
   |                                                ^^^^^^   --------- type must be known at this point
   |
help: try using a fully qualified path to specify the expected types
   |
86 -                 let doc_id = result.message.id.as_ref().unwrap_or(&String::new()).clone();
86 +                 let doc_id = <std::string::String as AsRef<T>>::as_ref(&result.message.id).unwrap_or(&String::new()).clone();
   |

error[E0599]: no method named `unwrap_or_default` found for struct `std::string::String` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/search/index/search_ops.rs:74:56
   |
74 |                 excluded_docs.insert(result.message.id.unwrap_or_default());
   |                                                        ^^^^^^^^^^^^^^^^^ method not found in `std::string::String`

error[E0599]: no method named `unwrap_or_default` found for struct `std::string::String` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/search/index/utils.rs:35:43
   |
35 |             .map(|r| r.message.id.clone().unwrap_or_default())
   |                                           ^^^^^^^^^^^^^^^^^ method not found in `std::string::String`

error[E0599]: no method named `unwrap_or_default` found for struct `std::string::String` in the current scope
  --> packages/fluent-ai-candle/src/types/candle_chat/search/index/utils.rs:39:57
   |
39 |             if ids2.contains(&result.message.id.clone().unwrap_or_default()) {
   |                                                         ^^^^^^^^^^^^^^^^^ method not found in `std::string::String`

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/search/tags.rs:174:36
    |
174 |         let tags_clone = self.tags.clone();
    |                                    ^^^^^ method not found in `SkipMap<Arc<str>, tags::ConversationTag>`

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/search/tags.rs:175:54
    |
175 |         let tag_hierarchy_clone = self.tag_hierarchy.clone();
    |                                                      ^^^^^ method not found in `SkipMap<Arc<str>, Vec<Arc<str>>>`

error[E0609]: no field `statistics` on type `&tags::ConversationTagger`
   --> packages/fluent-ai-candle/src/types/candle_chat/search/tags.rs:176:37
    |
176 |         let statistics_clone = self.statistics.clone();
    |                                     ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `tags`, `message_tags`, `tag_messages`, `tag_hierarchy`, `tag_counter` ... and 2 others

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/search/tags.rs:211:52
    |
211 |         let message_tags_clone = self.message_tags.clone();
    |                                                    ^^^^^ method not found in `SkipMap<Arc<str>, Vec<Arc<str>>>`

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/search/tags.rs:212:52
    |
212 |         let tag_messages_clone = self.tag_messages.clone();
    |                                                    ^^^^^ method not found in `SkipMap<Arc<str>, Vec<Arc<str>>>`

error[E0599]: no method named `clone` found for struct `SkipMap` in the current scope
   --> packages/fluent-ai-candle/src/types/candle_chat/search/tags.rs:213:36
    |
213 |         let tags_clone = self.tags.clone();
    |                                    ^^^^^ method not found in `SkipMap<Arc<str>, tags::ConversationTag>`

error[E0609]: no field `statistics` on type `&tags::ConversationTagger`
   --> packages/fluent-ai-candle/src/types/candle_chat/search/tags.rs:214:37
    |
214 |         let statistics_clone = self.statistics.clone();
    |                                     ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `tags`, `message_tags`, `tag_messages`, `tag_hierarchy`, `tag_counter` ... and 2 others

warning: `#[inline]` is ignored on function prototypes
  --> packages/provider/src/http3_streaming.rs:20:5
   |
20 |     #[inline(always)]
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_attributes)]` on by default

warning: `#[inline]` is ignored on function prototypes
  --> packages/provider/src/http3_streaming.rs:25:5
   |
25 |     #[inline(always)]
   |     ^^^^^^^^^^^^^^^^^

warning: `#[inline]` is ignored on function prototypes
  --> packages/provider/src/http3_streaming.rs:29:5
   |
29 |     #[inline(always)]
   |     ^^^^^^^^^^^^^^^^^

error[E0609]: no field `total_results` on type `&types::candle_chat::search::types::SearchStatistics`
  --> packages/fluent-ai-candle/src/types/candle_chat/search/export/csv.rs:60:59
   |
60 |         csv.push_str(&format!("total_results,{}\n", stats.total_results));
   |                                                           ^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `total_messages`, `total_terms`, `total_queries`, `average_query_time`, `index_size`, `last_index_update`

error[E0609]: no field `cache_hit_rate` on type `&types::candle_chat::search::types::SearchStatistics`
  --> packages/fluent-ai-candle/src/types/candle_chat/search/export/csv.rs:62:60
   |
62 |         csv.push_str(&format!("cache_hit_rate,{}\n", stats.cache_hit_rate));
   |                                                            ^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `total_messages`, `total_terms`, `total_queries`, `average_query_time`, `index_size`, `last_index_update`

error[E0609]: no field `total_results` on type `&types::candle_chat::search::types::SearchStatistics`
   --> packages/fluent-ai-candle/src/types/candle_chat/search/export/text_formats.rs:163:19
    |
163 |             stats.total_results,
    |                   ^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `total_messages`, `total_terms`, `total_queries`, `average_query_time`, `index_size`, `last_index_update`

error[E0609]: no field `cache_hit_rate` on type `&types::candle_chat::search::types::SearchStatistics`
   --> packages/fluent-ai-candle/src/types/candle_chat/search/export/text_formats.rs:165:19
    |
165 |             stats.cache_hit_rate * 100.0
    |                   ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `total_messages`, `total_terms`, `total_queries`, `average_query_time`, `index_size`, `last_index_update`

error[E0609]: no field `total_results` on type `&types::candle_chat::search::types::SearchStatistics`
   --> packages/fluent-ai-candle/src/types/candle_chat/search/export/text_formats.rs:174:19
    |
174 |             stats.total_results,
    |                   ^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `total_messages`, `total_terms`, `total_queries`, `average_query_time`, `index_size`, `last_index_update`

error[E0609]: no field `cache_hit_rate` on type `&types::candle_chat::search::types::SearchStatistics`
   --> packages/fluent-ai-candle/src/types/candle_chat/search/export/text_formats.rs:176:19
    |
176 |             stats.cache_hit_rate * 100.0
    |                   ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `total_messages`, `total_terms`, `total_queries`, `average_query_time`, `index_size`, `last_index_update`

error[E0308]: mismatched types
   --> packages/fluent-ai-candle/src/types/candle_chat/search/history_export.rs:264:24
    |
264 |                 if let Some(start) = date_range.start {
    |                        ^^^^^^^^^^^   ---------------- this expression has type `u64`
    |                        |
    |                        expected `u64`, found `Option<_>`
    |
    = note: expected type `u64`
               found enum `std::option::Option<_>`

error[E0308]: mismatched types
   --> packages/fluent-ai-candle/src/types/candle_chat/search/history_export.rs:269:24
    |
269 |                 if let Some(end) = date_range.end {
    |                        ^^^^^^^^^   -------------- this expression has type `u64`
    |                        |
    |                        expected `u64`, found `Option<_>`
    |
    = note: expected type `u64`
               found enum `std::option::Option<_>`

error[E0609]: no field `highlights` on type `&types::candle_chat::message::SearchChatMessage`
   --> packages/fluent-ai-candle/src/types/candle_chat/search/history_export.rs:317:72
    |
317 |                 msg_data["highlights"] = serde_json::to_value(&message.highlights).unwrap_or_default();
    |                                                                        ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `id`, `role`, `content`, `name`, `metadata` ... and 3 others

error[E0308]: mismatched types
   --> packages/fluent-ai-candle/src/types/candle_chat/search/mod.rs:179:78
    |
179 |             let mut export_stream = exporter.export_history_stream(messages, options);
    |                                              ---------------------           ^^^^^^^ expected `history_export::ExportOptions`, found `ExportOptions`
    |                                              |
    |                                              arguments to this method are incorrect
    |
    = note: `ExportOptions` and `history_export::ExportOptions` have similar names, but are actually distinct types
note: `ExportOptions` is defined in module `crate::types::candle_chat::search::export::formats` of the current crate
   --> packages/fluent-ai-candle/src/types/candle_chat/search/export/formats.rs:28:1
    |
28  | pub struct ExportOptions {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
note: `history_export::ExportOptions` is defined in module `crate::types::candle_chat::search::history_export` of the current crate
   --> packages/fluent-ai-candle/src/types/candle_chat/search/history_export.rs:18:1
    |
18  | pub struct ExportOptions {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
note: method defined here
   --> packages/fluent-ai-candle/src/types/candle_chat/search/history_export.rs:402:12
    |
402 |     pub fn export_history_stream(&self, messages: Vec<crate::types::CandleMessage>, _options: ExportOptions) -> AsyncStream<String> {
    |            ^^^^^^^^^^^^^^^^^^^^^                                                    -----------------------

error[E0308]: mismatched types
   --> packages/fluent-ai-candle/src/types/candle_chat/search/mod.rs:233:38
    |
233 |                 stats.export_stats = export_stats;
    |                 ------------------   ^^^^^^^^^^^^ expected `ExportStatistics`, found `history_export::ExportStatistics`
    |                 |
    |                 expected due to the type of this binding
    |
    = note: `history_export::ExportStatistics` and `ExportStatistics` have similar names, but are actually distinct types
note: `history_export::ExportStatistics` is defined in module `crate::types::candle_chat::search::history_export` of the current crate
   --> packages/fluent-ai-candle/src/types/candle_chat/search/history_export.rs:206:1
    |
206 | pub struct ExportStatistics {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: `ExportStatistics` is defined in module `crate::types::candle_chat::search::export` of the current crate
   --> packages/fluent-ai-candle/src/types/candle_chat/search/export/mod.rs:32:1
    |
32  | pub struct ExportStatistics {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0107]: missing generics for struct `fluent_ai_domain::tool::Tool`
  --> packages/provider/src/clients/bedrock/completion.rs:52:16
   |
52 |     tools: Vec<Tool>,
   |                ^^^^ expected 1 generic argument
   |
note: struct defined here, with 1 generic parameter: `T`
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/tool/core.rs:70:12
   |
70 | pub struct Tool<T> {
   |            ^^^^ -
help: add missing generic argument
   |
52 |     tools: Vec<Tool<T>>,
   |                    +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/device_manager.rs:141:24
    |
141 |     available_devices: SmallVec<[DeviceInfo; 8]>,
    |                        ^^^^^^^^ --------------- supplied 1 generic argument
    |                        |
    |                        expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
141 |     available_devices: SmallVec<[DeviceInfo; 8], N>,
    |                                                +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/device_manager.rs:149:23
    |
149 |     preference_order: SmallVec<[DeviceType; 4]>}
    |                       ^^^^^^^^ --------------- supplied 1 generic argument
    |                       |
    |                       expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
149 |     preference_order: SmallVec<[DeviceType; 4], N>}
    |                                               +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/error.rs:91:20
    |
91  |         available: SmallVec<[CandleDevice; 4]>},
    |                    ^^^^^^^^ ----------------- supplied 1 generic argument
    |                    |
    |                    expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
91  |         available: SmallVec<[CandleDevice; 4], N>},
    |                                              +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/memory_pool.rs:418:20
    |
418 |     pools: ArcSwap<SmallVec<[Arc<MemoryPool>; MAX_SIZE_CLASSES]>>,
    |                    ^^^^^^^^ ----------------------------------- supplied 1 generic argument
    |                    |
    |                    expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
418 |     pools: ArcSwap<SmallVec<[Arc<MemoryPool>; MAX_SIZE_CLASSES], N>>,
    |                                                                +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/memory_pool.rs:420:19
    |
420 |     size_classes: SmallVec<[usize; MAX_SIZE_CLASSES]>,
    |                   ^^^^^^^^ ------------------------- supplied 1 generic argument
    |                   |
    |                   expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
420 |     size_classes: SmallVec<[usize; MAX_SIZE_CLASSES], N>,
    |                                                     +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/streaming.rs:77:21
    |
77  |     pub text_bytes: SmallVec<[u8; MAX_TOKEN_TEXT_LEN]>,
    |                     ^^^^^^^^ ------------------------ supplied 1 generic argument
    |                     |
    |                     expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
77  |     pub text_bytes: SmallVec<[u8; MAX_TOKEN_TEXT_LEN], N>,
    |                                                      +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/tokenizer.rs:32:13
    |
32  |     buffer: SmallVec<[u8; 1024]>,
    |             ^^^^^^^^ ---------- supplied 1 generic argument
    |             |
    |             expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
32  |     buffer: SmallVec<[u8; 1024], N>,
    |                                +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/tokenizer.rs:26:21
    |
26  | pub type TokenIds = SmallVec<[u32; MAX_ENCODE_BATCH]>;
    |                     ^^^^^^^^ ----------------------- supplied 1 generic argument
    |                     |
    |                     expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
26  | pub type TokenIds = SmallVec<[u32; MAX_ENCODE_BATCH], N>;
    |                                                     +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/tokenizer.rs:211:21
    |
211 |     attention_mask: SmallVec<[u8; MAX_ENCODE_BATCH]>,
    |                     ^^^^^^^^ ---------------------- supplied 1 generic argument
    |                     |
    |                     expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
211 |     attention_mask: SmallVec<[u8; MAX_ENCODE_BATCH], N>,
    |                                                    +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/tokenizer.rs:363:19
    |
363 |     partial_utf8: SmallVec<[u8; 4]>,
    |                   ^^^^^^^^ ------- supplied 1 generic argument
    |                   |
    |                   expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
363 |     partial_utf8: SmallVec<[u8; 4], N>,
    |                                   +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/image_processing/factory.rs:541:28
    |
541 |     pub supported_formats: SmallVec<[ImageFormat; 4]>,
    |                            ^^^^^^^^ ---------------- supplied 1 generic argument
    |                            |
    |                            expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
541 |     pub supported_formats: SmallVec<[ImageFormat; 4], N>,
    |                                                     +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/image_processing/factory.rs:587:17
    |
587 |     processors: SmallVec<[Arc<dyn StreamingImageProcessor + Send + Sync>; 8]>,
    |                 ^^^^^^^^ --------------------------------------------------- supplied 1 generic argument
    |                 |
    |                 expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
587 |     processors: SmallVec<[Arc<dyn StreamingImageProcessor + Send + Sync>; 8], N>,
    |                                                                             +++

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> packages/provider/src/transcription/mod.rs:632:29
    |
632 |     pub stream: AsyncStream<Result<TranscriptionChunk, TranscriptionError>>,
    |                             ^^^^^^                   -------------------- help: remove the unnecessary generic argument
    |                             |
    |                             expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> packages/provider/src/transcription/mod.rs:127:10
    |
127 | pub type Result<T> = std::result::Result<T, TranscriptionError>;
    |          ^^^^^^ -

error[E0049]: method `on_chunk` has 0 type parameters but its trait declaration has 1 type parameter
   --> packages/provider/src/clients/anthropic/completion.rs:289:16
    |
289 |     fn on_chunk(mut self, handler: ChunkHandler) -> Self {
    |                ^ found 0 type parameters
    |
   ::: packages/provider/src/completion_provider.rs:127:17
    |
127 |     fn on_chunk<F>(self, handler: F) -> Self
    |                 - expected 1 type parameter

error[E0277]: the trait bound `std::string::String: From<impl Into<String>>` is not satisfied
   --> packages/provider/src/clients/anthropic/completion.rs:297:34
    |
297 |     fn prompt(self, prompt: impl Into<String>) -> AsyncStream<CompletionChunk> {
    |                                  ^^^^^^^^^^^^ the trait `From<impl Into<String>>` is not implemented for `std::string::String`
    |
    = note: required for `impl Into<String>` to implement `Into<std::string::String>`
note: the requirement `impl Into<String>: Into<std::string::String>` appears on the `impl`'s method `prompt` but not on the corresponding trait's method
   --> packages/provider/src/completion_provider.rs:133:8
    |
74  | pub trait CompletionProvider: Clone + Send + Sync + 'static {
    |           ------------------ in this trait
...
133 |     fn prompt(self, text: impl AsRef<str>) -> AsyncStream<CompletionChunk>;
    |        ^^^^^^ this trait's method doesn't have the requirement `impl Into<String>: Into<std::string::String>`

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/generation.rs:25:25
    |
25  | pub type LogitsBuffer = SmallVec<[f32; SAMPLING_CACHE_SIZE]>;
    |                         ^^^^^^^^ -------------------------- supplied 1 generic argument
    |                         |
    |                         expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
25  | pub type LogitsBuffer = SmallVec<[f32; SAMPLING_CACHE_SIZE], N>;
    |                                                            +++

error[E0091]: type parameter `Res` is never used
  --> packages/provider/src/clients/anthropic/tools/core.rs:27:36
   |
27 | pub type InvocationHandler<D, Req, Res> =
   |                                    ^^^ unused type parameter
   |
   = help: consider removing `Res` or referring to it in the body of the type alias
   = help: if you intended `Res` to be a const parameter, use `const Res: /* Type */` instead

error[E0276]: impl has stricter requirements than trait
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:285:12
    |
102 |     fn on_invocation<F>(self, handler: F) -> Self::WithInvocationBuilder;
    |     --------------------------------------------------------------------- definition of `on_invocation` from trait
...
285 |         F: Fn(&Conversation, &Emitter, Req, &D) -> AsyncStream<()>
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `for<'a, 'b, 'c, 'd> F: Fn(&'a function_calling::Conversation<'b>, &'c Emitter, Req, &'d D)`

error[E0276]: impl has stricter requirements than trait
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:286:15
    |
102 |     fn on_invocation<F>(self, handler: F) -> Self::WithInvocationBuilder;
    |     --------------------------------------------------------------------- definition of `on_invocation` from trait
...
286 |             + Send
    |               ^^^^ impl has extra requirement `F: std::marker::Send`

error[E0276]: impl has stricter requirements than trait
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:287:15
    |
102 |     fn on_invocation<F>(self, handler: F) -> Self::WithInvocationBuilder;
    |     --------------------------------------------------------------------- definition of `on_invocation` from trait
...
287 |             + Sync
    |               ^^^^ impl has extra requirement `F: Sync`

error[E0276]: impl has stricter requirements than trait
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:285:52
    |
102 |     fn on_invocation<F>(self, handler: F) -> Self::WithInvocationBuilder;
    |     --------------------------------------------------------------------- definition of `on_invocation` from trait
...
285 |         F: Fn(&Conversation, &Emitter, Req, &D) -> AsyncStream<()>
    |                                                    ^^^^^^^^^^^^^^^ impl has extra requirement `for<'a, 'b, 'c, 'd> F: FnOnce(&'a function_calling::Conversation<'b>, &'c Emitter, Req, &'d D)`

error[E0276]: impl has stricter requirements than trait
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:327:79
    |
108 |     fn on_error<F>(self, handler: F) -> Self::WithErrorBuilder;
    |     ----------------------------------------------------------- definition of `on_error` from trait
...
327 |         F: Fn(&Conversation, &Emitter, &AnthropicError, &D) -> ChainControl + Send + Sync + 'static,
    |                                                                               ^^^^ impl has extra requirement `F: std::marker::Send`

error[E0276]: impl has stricter requirements than trait
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:327:86
    |
108 |     fn on_error<F>(self, handler: F) -> Self::WithErrorBuilder;
    |     ----------------------------------------------------------- definition of `on_error` from trait
...
327 |         F: Fn(&Conversation, &Emitter, &AnthropicError, &D) -> ChainControl + Send + Sync + 'static,
    |                                                                                      ^^^^ impl has extra requirement `F: Sync`

error[E0276]: impl has stricter requirements than trait
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:352:12
    |
114 |     fn on_result<F>(self, handler: F) -> Self::WithResultBuilder;
    |     ------------------------------------------------------------- definition of `on_result` from trait
...
352 |         F: Fn(&Conversation, &Emitter, Res, &D) -> ChainControl + Send + Sync + 'static,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `for<'a, 'b, 'c, 'd> F: Fn(&'a function_calling::Conversation<'b>, &'c Emitter, Res, &'d D)`

error[E0276]: impl has stricter requirements than trait
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:352:67
    |
114 |     fn on_result<F>(self, handler: F) -> Self::WithResultBuilder;
    |     ------------------------------------------------------------- definition of `on_result` from trait
...
352 |         F: Fn(&Conversation, &Emitter, Res, &D) -> ChainControl + Send + Sync + 'static,
    |                                                                   ^^^^ impl has extra requirement `F: std::marker::Send`

error[E0276]: impl has stricter requirements than trait
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:352:74
    |
114 |     fn on_result<F>(self, handler: F) -> Self::WithResultBuilder;
    |     ------------------------------------------------------------- definition of `on_result` from trait
...
352 |         F: Fn(&Conversation, &Emitter, Res, &D) -> ChainControl + Send + Sync + 'static,
    |                                                                          ^^^^ impl has extra requirement `F: Sync`

error[E0276]: impl has stricter requirements than trait
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:352:52
    |
114 |     fn on_result<F>(self, handler: F) -> Self::WithResultBuilder;
    |     ------------------------------------------------------------- definition of `on_result` from trait
...
352 |         F: Fn(&Conversation, &Emitter, Res, &D) -> ChainControl + Send + Sync + 'static,
    |                                                    ^^^^^^^^^^^^ impl has extra requirement `for<'a, 'b, 'c, 'd> F: FnOnce(&'a function_calling::Conversation<'b>, &'c Emitter, Res, &'d D)`

error[E0277]: `D` cannot be sent between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:372:25
    |
372 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `D` cannot be sent between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:395:19
    |
395 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
396 | where
397 |     D: Send + Sync + 'static,
    |        ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:119:24
    |
119 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `D` with trait `Send`
    |
371 | impl<D: std::marker::Send, Req, Res> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |       +++++++++++++++++++

error[E0277]: `D` cannot be shared between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:372:25
    |
372 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `D` cannot be shared between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:395:19
    |
395 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
396 | where
397 |     D: Send + Sync + 'static,
    |               ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:119:24
    |
119 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `D` with trait `Sync`
    |
371 | impl<D: std::marker::Sync, Req, Res> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |       +++++++++++++++++++

error[E0277]: the trait bound `for<'de> Req: Deserialize<'de>` is not satisfied
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:372:25
    |
372 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ the trait `for<'de> Deserialize<'de>` is not implemented for `Req`
    |
    = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `Req` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:395:19
    |
395 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
398 |     Req: for<'de> Deserialize<'de> + Send + Sync + 'static,
    |          ------------------------- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:119:24
    |
119 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Req` with trait `Deserialize`
    |
371 | impl<D, Req: for<'de> image_processing::_::_serde::Deserialize<'de>, Res> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++

error[E0277]: `Req` cannot be sent between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:372:25
    |
372 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `Req` cannot be sent between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:395:19
    |
395 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
398 |     Req: for<'de> Deserialize<'de> + Send + Sync + 'static,
    |                                      ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:119:24
    |
119 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Req` with trait `Send`
    |
371 | impl<D, Req: std::marker::Send, Res> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |            +++++++++++++++++++

error[E0277]: `Req` cannot be shared between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:372:25
    |
372 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `Req` cannot be shared between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:395:19
    |
395 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
398 |     Req: for<'de> Deserialize<'de> + Send + Sync + 'static,
    |                                             ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:119:24
    |
119 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Req` with trait `Sync`
    |
371 | impl<D, Req: std::marker::Sync, Res> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |            +++++++++++++++++++

error[E0277]: the trait bound `Res: Serialize` is not satisfied
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:372:25
    |
372 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ the trait `Serialize` is not implemented for `Res`
    |
    = note: for local types consider adding `#[derive(serde::Serialize)]` to your `Res` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:395:19
    |
395 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
399 |     Res: Serialize + Send + Sync + 'static,
    |          --------- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:119:24
    |
119 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Res` with trait `Serialize`
    |
371 | impl<D, Req, Res: image_processing::_::_serde::Serialize> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |                 ++++++++++++++++++++++++++++++++++++++++

error[E0277]: `Res` cannot be sent between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:372:25
    |
372 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `Res` cannot be sent between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:395:19
    |
395 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
399 |     Res: Serialize + Send + Sync + 'static,
    |                      ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:119:24
    |
119 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Res` with trait `Send`
    |
371 | impl<D, Req, Res: std::marker::Send> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |                 +++++++++++++++++++

error[E0277]: `Res` cannot be shared between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:372:25
    |
372 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `Res` cannot be shared between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:395:19
    |
395 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
399 |     Res: Serialize + Send + Sync + 'static,
    |                             ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:119:24
    |
119 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Res` with trait `Sync`
    |
371 | impl<D, Req, Res: std::marker::Sync> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |                 +++++++++++++++++++

error[E0782]: expected a type, found a trait
   --> packages/provider/src/clients/azure/client.rs:581:18
    |
581 |     type Model = CompletionModel;
    |                  ^^^^^^^^^^^^^^^

error[E0782]: expected a type, found a trait
   --> packages/provider/src/clients/azure/client.rs:594:48
    |
594 |     fn completion_model(&self, model: &str) -> CompletionModel {
    |                                                ^^^^^^^^^^^^^^^
    |
help: use `impl CompletionModel` to return an opaque type, as long as you return a single underlying type
    |
594 |     fn completion_model(&self, model: &str) -> impl CompletionModel {
    |                                                ++++
help: alternatively, you can return an owned trait object
    |
594 |     fn completion_model(&self, model: &str) -> Box<dyn CompletionModel> {
    |                                                +++++++                +

error[E0782]: expected a type, found a trait
  --> packages/provider/src/clients/azure/completion.rs:71:6
   |
71 | impl CompletionModel {
   |      ^^^^^^^^^^^^^^^
   |
help: you can add the `dyn` keyword if you want a trait object
   |
71 | impl dyn CompletionModel {
   |      +++
help: you might have intended to implement this trait for a given type
   |
71 | impl CompletionModel for /* Type */ {
   |                      ++++++++++++++

error[E0782]: expected a type, found a trait
  --> packages/provider/src/clients/azure/completion.rs:82:38
   |
82 | impl completion::CompletionModel for CompletionModel {
   |                                      ^^^^^^^^^^^^^^^
   |
help: you can add the `dyn` keyword if you want a trait object
   |
82 | impl completion::CompletionModel for dyn CompletionModel {
   |                                      +++

error[E0782]: expected a type, found a trait
   --> packages/provider/src/clients/azure/completion.rs:105:6
    |
105 | impl CompletionModel {
    |      ^^^^^^^^^^^^^^^
    |
help: you can add the `dyn` keyword if you want a trait object
    |
105 | impl dyn CompletionModel {
    |      +++
help: you might have intended to implement this trait for a given type
    |
105 | impl CompletionModel for /* Type */ {
    |                      ++++++++++++++

error[E0782]: expected a type, found a trait
  --> packages/provider/src/clients/azure/streaming.rs:33:6
   |
33 | impl CompletionModel {
   |      ^^^^^^^^^^^^^^^
   |
help: you can add the `dyn` keyword if you want a trait object
   |
33 | impl dyn CompletionModel {
   |      +++
help: you might have intended to implement this trait for a given type
   |
33 | impl CompletionModel for /* Type */ {
   |                      ++++++++++++++

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> packages/provider/src/clients/bedrock/client.rs:227:44
    |
227 |     fn test_connection(&self) -> AsyncTask<Result<(), Box<dyn std::error::Error + Send + Sync>>> {
    |                                            ^^^^^^   ------------------------------------------ help: remove the unnecessary generic argument
    |                                            |
    |                                            expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> packages/provider/src/clients/bedrock/error.rs:20:10
    |
20  | pub type Result<T> = std::result::Result<T, BedrockError>;
    |          ^^^^^^ -

error[E0053]: method `test_connection` has an incompatible type for trait
   --> packages/provider/src/clients/bedrock/client.rs:227:34
    |
227 |     fn test_connection(&self) -> AsyncTask<Result<(), Box<dyn std::error::Error + Send + Sync>>> {
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Box<dyn Error + Send + Sync>`, found `BedrockError`
    |
note: type in trait
   --> packages/provider/src/client.rs:37:34
    |
37  |     fn test_connection(&self) -> AsyncTask<Result<(), Box<dyn std::error::Error + Send + Sync>>>;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected signature `fn(&BedrockClient) -> fluent_ai_domain::AsyncTask<std::result::Result<_, Box<(dyn StdError + std::marker::Send + Sync + 'static)>>>`
               found signature `fn(&BedrockClient) -> fluent_ai_domain::AsyncTask<std::result::Result<_, BedrockError>>`
help: change the output type to match the trait
    |
227 -     fn test_connection(&self) -> AsyncTask<Result<(), Box<dyn std::error::Error + Send + Sync>>> {
227 +     fn test_connection(&self) -> fluent_ai_domain::AsyncTask<std::result::Result<(), Box<(dyn StdError + std::marker::Send + Sync + 'static)>>> {
    |

error[E0049]: method `prompt` has 0 type parameters but its trait declaration has 1 type parameter
   --> packages/provider/src/clients/bedrock/completion.rs:383:14
    |
383 |     fn prompt(&self, prompt: fluent_ai_domain::prompt::Prompt) -> AsyncStream<CompletionChunk> {
    |              ^ found 0 type parameters
    |
   ::: packages/provider/src/completion_provider.rs:133:27
    |
133 |     fn prompt(self, text: impl AsRef<str>) -> AsyncStream<CompletionChunk>;
    |                           ---------------
    |                           |
    |                           expected 1 type parameter
    |                           `impl Trait` introduces an implicit type parameter

error[E0046]: not all trait items implemented, missing: `new`, `api_key`, `system_prompt`, `temperature`, `max_tokens`, `top_p`, `frequency_penalty`, `presence_penalty`, `chat_history`, `documents`, `tools`, `additional_params`, `on_chunk`
   --> packages/provider/src/clients/bedrock/completion.rs:378:1
    |
378 |   impl CompletionProvider for BedrockCompletionBuilder {
    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `new`, `api_key`, `system_prompt`, `temperature`, `max_tokens`, `top_p`, `frequency_penalty`, `presence_penalty`, `chat_history`, `documents`, `tools`, `additional_params`, `on_chunk` in implementation
    |
   ::: packages/provider/src/completion_provider.rs:76:5
    |
76  |       fn new(api_key: String, model_name: &'static str) -> Result<Self, CompletionError>;
    |       ----------------------------------------------------------------------------------- `new` from trait
...
79  |       fn api_key(self, key: impl Into<String>) -> Self;
    |       ------------------------------------------------- `api_key` from trait
...
90  |       fn system_prompt(self, prompt: impl Into<String>) -> Self;
    |       ---------------------------------------------------------- `system_prompt` from trait
...
93  |       fn temperature(self, temp: f64) -> Self;
    |       ---------------------------------------- `temperature` from trait
...
96  |       fn max_tokens(self, tokens: u32) -> Self;
    |       ----------------------------------------- `max_tokens` from trait
...
99  |       fn top_p(self, p: f64) -> Self;
    |       ------------------------------- `top_p` from trait
...
102 |       fn frequency_penalty(self, penalty: f64) -> Self;
    |       ------------------------------------------------- `frequency_penalty` from trait
...
105 |       fn presence_penalty(self, penalty: f64) -> Self;
    |       ------------------------------------------------ `presence_penalty` from trait
...
108 |       fn chat_history(self, history: ZeroOneOrMany<Message>) -> Result<Self, CompletionError>;
    |       ---------------------------------------------------------------------------------------- `chat_history` from trait
...
111 |       fn documents(self, docs: ZeroOneOrMany<Document>) -> Result<Self, CompletionError>;
    |       ----------------------------------------------------------------------------------- `documents` from trait
...
114 |       fn tools(self, tools: ZeroOneOrMany<ToolDefinition>) -> Result<Self, CompletionError>;
    |       -------------------------------------------------------------------------------------- `tools` from trait
...
117 |       fn additional_params(self, params: Value) -> Self;
    |       -------------------------------------------------- `additional_params` from trait
...
127 | /     fn on_chunk<F>(self, handler: F) -> Self
128 | |     where
129 | |         F: Fn(Result<CompletionChunk, CompletionError>) + Send + Sync + 'static;
    | |________________________________________________________________________________- `on_chunk` from trait

error[E0107]: missing generics for struct `completion_provider::CompletionResponse`
   --> packages/provider/src/clients/bedrock/completion.rs:379:21
    |
379 |     type Response = CompletionResponse;
    |                     ^^^^^^^^^^^^^^^^^^ expected 1 generic argument
    |
note: struct defined here, with 1 generic parameter: `T`
   --> packages/provider/src/completion_provider.rs:289:12
    |
289 | pub struct CompletionResponse<T> {
    |            ^^^^^^^^^^^^^^^^^^ -
help: add missing generic argument
    |
379 |     type Response = CompletionResponse<T>;
    |                                       +++

error[E0107]: missing generics for struct `completion_provider::StreamingResponse`
   --> packages/provider/src/clients/bedrock/completion.rs:380:30
    |
380 |     type StreamingResponse = StreamingResponse;
    |                              ^^^^^^^^^^^^^^^^^ expected 1 generic argument
    |
note: struct defined here, with 1 generic parameter: `T`
   --> packages/provider/src/completion_provider.rs:344:12
    |
344 | pub struct StreamingResponse<T> {
    |            ^^^^^^^^^^^^^^^^^ -
help: add missing generic argument
    |
380 |     type StreamingResponse = StreamingResponse<T>;
    |                                               +++

error[E0107]: struct takes 0 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/gemini/completion.rs:779:55
    |
779 | impl TryFrom<GenerateContentResponse> for completion::CompletionResponse<GenerateContentResponse> {
    |                                                       ^^^^^^^^^^^^^^^^^^ ----------------------- help: remove the unnecessary generic argument
    |                                                       |
    |                                                       expected 0 generic arguments
    |
note: struct defined here, with 0 generic parameters
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/response.rs:15:12
    |
15  | pub struct CompletionResponse<'a> {
    |            ^^^^^^^^^^^^^^^^^^

error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate
  --> packages/provider/src/clients/mistral/completion.rs:83:1
   |
83 | impl TryFrom<message::Message> for Vec<Message> {
   | ^^^^^-------------------------^^^^^------------
   |      |                             |
   |      |                             `Vec` is not defined in the current crate
   |      `fluent_ai_domain::Message` is not defined in the current crate
   |
   = note: impl doesn't have any local type before any uncovered type parameters
   = note: for more information see https://doc.rust-lang.org/reference/items/implementations.html#orphan-rules
   = note: define and implement a trait or new type instead

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> packages/provider/src/embeddings/mod.rs:45:10
    |
45  |     ) -> Result<Vec<Embedding>, EmbeddingError>;
    |          ^^^^^^               ---------------- help: remove the unnecessary generic argument
    |          |
    |          expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> packages/provider/src/embeddings/mod.rs:124:10
    |
124 | pub type Result<T> = std::result::Result<T, EmbeddingError>;
    |          ^^^^^^ -

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> packages/provider/src/transcription/mod.rs:25:10
    |
25  |     ) -> Result<TranscriptionResponse<Self::Response>, TranscriptionError>;
    |          ^^^^^^ expected 1 generic argument          -------------------- help: remove the unnecessary generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> packages/provider/src/transcription/mod.rs:127:10
    |
127 | pub type Result<T> = std::result::Result<T, TranscriptionError>;
    |          ^^^^^^ -

error[E0782]: expected a type, found a trait
  --> packages/provider/src/clients/groq/streaming.rs:26:9
   |
26 |         crate::streaming::StreamingCompletionResponse<StreamingCompletionResponse>,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: you can add the `dyn` keyword if you want a trait object
   |
26 |         dyn crate::streaming::StreamingCompletionResponse<StreamingCompletionResponse>,
   |         +++

error[E0049]: method `on_chunk` has 0 type parameters but its trait declaration has 1 type parameter
   --> packages/provider/src/clients/openai/completion.rs:241:16
    |
241 |     fn on_chunk(mut self, handler: ChunkHandler) -> Self {
    |                ^ found 0 type parameters
    |
   ::: packages/provider/src/completion_provider.rs:127:17
    |
127 |     fn on_chunk<F>(self, handler: F) -> Self
    |                 - expected 1 type parameter

error[E0277]: the trait bound `std::string::String: From<impl Into<String>>` is not satisfied
   --> packages/provider/src/clients/openai/completion.rs:249:34
    |
249 |     fn prompt(self, prompt: impl Into<String>) -> AsyncStream<CompletionChunk> {
    |                                  ^^^^^^^^^^^^ the trait `From<impl Into<String>>` is not implemented for `std::string::String`
    |
    = note: required for `impl Into<String>` to implement `Into<std::string::String>`
note: the requirement `impl Into<String>: Into<std::string::String>` appears on the `impl`'s method `prompt` but not on the corresponding trait's method
   --> packages/provider/src/completion_provider.rs:133:8
    |
74  | pub trait CompletionProvider: Clone + Send + Sync + 'static {
    |           ------------------ in this trait
...
133 |     fn prompt(self, text: impl AsRef<str>) -> AsyncStream<CompletionChunk>;
    |        ^^^^^^ this trait's method doesn't have the requirement `impl Into<String>: Into<std::string::String>`

error[E0782]: expected a type, found a trait
  --> packages/provider/src/clients/together/streaming.rs:11:6
   |
11 | impl CompletionModel {
   |      ^^^^^^^^^^^^^^^
   |
help: you can add the `dyn` keyword if you want a trait object
   |
11 | impl dyn CompletionModel {
   |      +++
help: you might have intended to implement this trait for a given type
   |
11 | impl CompletionModel for /* Type */ {
   |                      ++++++++++++++

error[E0782]: expected a type, found a trait
   --> packages/provider/src/clients/xai/completion.rs:135:30
    |
135 |     type StreamingResponse = StreamingCompletionResponse;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0782]: expected a type, found a trait
  --> packages/provider/src/clients/xai/streaming.rs:21:6
   |
21 | impl CompletionModel {
   |      ^^^^^^^^^^^^^^^
   |
help: you can add the `dyn` keyword if you want a trait object
   |
21 | impl dyn CompletionModel {
   |      +++
help: you might have intended to implement this trait for a given type
   |
21 | impl CompletionModel for /* Type */ {
   |                      ++++++++++++++

error[E0046]: not all trait items implemented, missing: `text`, `speaker_id`, `timestamp`, `is_partial`
   --> packages/provider/src/http3_streaming.rs:363:1
    |
144 |     fn text(&self) -> &str;
    |     ----------------------- `text` from trait
...
150 |     fn speaker_id(&self) -> Option<&str>;
    |     ------------------------------------- `speaker_id` from trait
...
153 |     fn timestamp(&self) -> Option<(f32, f32)>;
    |     ------------------------------------------ `timestamp` from trait
...
156 |     fn is_partial(&self) -> bool;
    |     ----------------------------- `is_partial` from trait
...
363 | impl TranscriptionChunk for TranscriptionChunkImpl {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `text`, `speaker_id`, `timestamp`, `is_partial` in implementation

error[E0053]: method `filename` has an incompatible type for trait
   --> packages/provider/src/http3_streaming.rs:432:27
    |
432 |     fn filename(&self) -> Option<&str> {
    |                           ^^^^^^^^^^^^ expected `&str`, found `std::option::Option<&str>`
    |
note: type in trait
   --> packages/provider/src/http3_streaming.rs:111:27
    |
111 |     fn filename(&self) -> &str;
    |                           ^^^^
    = note: expected signature `fn(&DownloadChunkImpl) -> &str`
               found signature `fn(&DownloadChunkImpl) -> std::option::Option<&str>`
help: change the output type to match the trait
    |
432 -     fn filename(&self) -> Option<&str> {
432 +     fn filename(&self) -> &str {
    |

error[E0046]: not all trait items implemented, missing: `downloaded_bytes`, `total_bytes`, `speed_bps`, `eta_seconds`, `file_metadata`
   --> packages/provider/src/http3_streaming.rs:431:1
    |
114 |     fn downloaded_bytes(&self) -> u64;
    |     ---------------------------------- `downloaded_bytes` from trait
...
117 |     fn total_bytes(&self) -> Option<u64>;
    |     ------------------------------------- `total_bytes` from trait
...
120 |     fn speed_bps(&self) -> Option<u64>;
    |     ----------------------------------- `speed_bps` from trait
...
123 |     fn eta_seconds(&self) -> Option<u64>;
    |     ------------------------------------- `eta_seconds` from trait
...
126 |     fn file_metadata(&self) -> Option<&Value>;
    |     ------------------------------------------ `file_metadata` from trait
...
431 | impl DownloadChunk for DownloadChunkImpl {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `downloaded_bytes`, `total_bytes`, `speed_bps`, `eta_seconds`, `file_metadata` in implementation

error[E0433]: failed to resolve: use of undeclared type `PromptError`
   --> packages/provider/src/clients/azure/client.rs:504:57
    |
504 |             Err(e) => AsyncTask::spawn(async move { Err(PromptError::from(e)) })}
    |                                                         ^^^^^^^^^^^ use of undeclared type `PromptError`

error[E0433]: failed to resolve: use of undeclared type `PromptError`
   --> packages/provider/src/clients/gemini/client.rs:530:28
    |
530 |             .ok_or_else(|| PromptError::MissingPrompt)?;
    |                            ^^^^^^^^^^^ use of undeclared type `PromptError`

error[E0433]: failed to resolve: use of undeclared type `GeminiFinishReason`
   --> packages/provider/src/clients/gemini/gemini_types.rs:133:13
    |
133 |             GeminiFinishReason::Stop => Self::Stop,
    |             ^^^^^^^^^^^^^^^^^^
    |             |
    |             use of undeclared type `GeminiFinishReason`
    |             help: an enum with a similar name exists: `FinishReason`

error[E0433]: failed to resolve: use of undeclared type `GeminiFinishReason`
   --> packages/provider/src/clients/gemini/gemini_types.rs:134:13
    |
134 |             GeminiFinishReason::MaxTokens => Self::Length,
    |             ^^^^^^^^^^^^^^^^^^
    |             |
    |             use of undeclared type `GeminiFinishReason`
    |             help: an enum with a similar name exists: `FinishReason`

error[E0433]: failed to resolve: use of undeclared type `GeminiFinishReason`
   --> packages/provider/src/clients/gemini/gemini_types.rs:135:13
    |
135 |             GeminiFinishReason::Safety
    |             ^^^^^^^^^^^^^^^^^^
    |             |
    |             use of undeclared type `GeminiFinishReason`
    |             help: an enum with a similar name exists: `FinishReason`

error[E0433]: failed to resolve: use of undeclared type `GeminiFinishReason`
   --> packages/provider/src/clients/gemini/gemini_types.rs:136:15
    |
136 |             | GeminiFinishReason::Blocklist
    |               ^^^^^^^^^^^^^^^^^^
    |               |
    |               use of undeclared type `GeminiFinishReason`
    |               help: an enum with a similar name exists: `FinishReason`

error[E0433]: failed to resolve: use of undeclared type `GeminiFinishReason`
   --> packages/provider/src/clients/gemini/gemini_types.rs:137:15
    |
137 |             | GeminiFinishReason::ProhibitedContent => Self::ContentFilter,
    |               ^^^^^^^^^^^^^^^^^^
    |               |
    |               use of undeclared type `GeminiFinishReason`
    |               help: an enum with a similar name exists: `FinishReason`

error[E0433]: failed to resolve: use of undeclared type `Http3Builders`
   --> packages/provider/src/clients/openrouter/completion.rs:119:23
    |
119 |         let builder = Http3Builders::openrouter();
    |                       ^^^^^^^^^^^^^ use of undeclared type `Http3Builders`

error[E0433]: failed to resolve: use of undeclared type `Http3Builders`
   --> packages/provider/src/clients/together/completion.rs:153:23
    |
153 |         let builder = Http3Builders::together();
    |                       ^^^^^^^^^^^^^ use of undeclared type `Http3Builders`

error[E0433]: failed to resolve: use of undeclared type `Http3Builders`
  --> packages/provider/src/clients/xai/completion.rs:47:23
   |
47 |         let builder = Http3Builders::xai();
   |                       ^^^^^^^^^^^^^ use of undeclared type `Http3Builders`

Some errors have detailed explanations: E0046, E0049, E0053, E0091, E0106, E0107, E0117, E0252, E0276...
For more information about an error, try `rustc --explain E0046`.
warning: `fluent_ai_provider` (lib) generated 189 warnings
error: could not compile `fluent_ai_provider` (lib) due to 959 previous errors; 189 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: unused variable: `sender`
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/integrations/external.rs:62:52
   |
62 |             return AsyncStream::with_channel(move |sender| {
   |                                                    ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`
   |
   = note: `#[warn(unused_variables)]` on by default

error: lifetime may not live long enough
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/integrations/external.rs:306:13
    |
294 |     config: &IntegrationConfig,
    |             - let's call the lifetime of this reference `'1`
...
306 |             map
    |             ^^^ returning this value requires that `'1` must outlive `'static`

warning: unused variable: `context_variables`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/processor.rs:208:9
    |
208 |         context_variables: HashMap<Arc<str>, Arc<str>>,
    |         ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context_variables`

warning: unused variable: `processor`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/processor.rs:238:13
    |
238 |         let processor = self.clone();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_processor`

warning: unused variable: `macro_def`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/processor.rs:235:9
    |
235 |         macro_def: StoredMacro,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_macro_def`

warning: unused variable: `context_variables`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/processor.rs:236:9
    |
236 |         context_variables: HashMap<Arc<str>, Arc<str>>,
    |         ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context_variables`

warning: unused variable: `sender`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/processor.rs:240:41
    |
240 |         AsyncStream::with_channel(move |sender| {
    |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `processor`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/processor.rs:257:13
    |
257 |         let processor = self.clone();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_processor`

warning: unused variable: `execution_context`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/processor.rs:278:17
    |
278 |             let execution_context = if let Ok(global_vars) = variables.try_read() {
    |                 ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_execution_context`

warning: unused variable: `current_time`
  --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/system.rs:63:17
   |
63 |             let current_time = match std::time::SystemTime::now().duration_since(std::time::UNIX_EPOCH) {
   |                 ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_current_time`

error[E0596]: cannot borrow `session.actions` as mutable, as it is behind a `&` reference
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/system.rs:129:25
    |
127 |                 if let Some(session) = sessions.get(&session_id) {
    |                             ------- consider changing this binding's type to be: `&mut types::candle_chat::chat::macros::types::MacroRecordingSession`
128 |                     if session.state == MacroRecordingState::Recording {
129 |                         session.actions.push(action);
    |                         ^^^^^^^^^^^^^^^ `session` is a `&` reference, so the data it refers to cannot be borrowed as mutable

warning: unused variable: `action`
   --> packages/fluent-ai-candle/src/types/candle_chat/chat/macros/system.rs:339:21
    |
339 |                 let action = &macro_def.actions[session.current_action];
    |                     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_action`

error[E0521]: borrowed data escapes outside of method
   --> packages/fluent-ai-candle/src/types/candle_chat/search/tags.rs:247:9
    |
246 |       pub fn auto_tag_message_stream(&self, message: CandleMessage) -> AsyncStream<Arc<str>> {
    |                                      -----
    |                                      |
    |                                      `self` is a reference that is only valid in the method body
    |                                      let's call the lifetime of this reference `'1`
247 | /         AsyncStream::with_channel(move |sender| {
248 | |             let content = message.content.to_lowercase();
249 | |
250 | |             if let Ok(rules) = self.auto_tagging_rules.try_read() {
...   |
267 | |         })
    | |          ^
    | |          |
    | |__________`self` escapes the method body here
    |            argument requires that `'1` must outlive `'static`

error[E0596]: cannot borrow `export_stream` as mutable, as it is not declared as mutable
   --> packages/fluent-ai-candle/src/types/candle_chat/search/history_export.rs:412:37
    |
412 |             while let Some(chunk) = export_stream.try_next() {
    |                                     ^^^^^^^^^^^^^ cannot borrow as mutable
    |
help: consider changing this to be mutable
    |
409 |         let mut export_stream = exporter.export_messages(search_messages);
    |             +++

Some errors have detailed explanations: E0061, E0063, E0277, E0282, E0308, E0521, E0560, E0596, E0599...
For more information about an error, try `rustc --explain E0061`.
warning: `fluent_ai_candle` (lib) generated 13 warnings
error: could not compile `fluent_ai_candle` (lib) due to 94 previous errors; 13 warnings emitted
