[package]
name = "fluent_ai_candle"
version = "0.1.0"
edition = "2021"
description = "High-performance candle integration for fluent-ai completion system"
license = "MIT OR Apache-2.0"

[dependencies]

progresshub = { path = "../../../progresshub/tui" }

# Candle dependencies (optional, enabled by features)
candle-core = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false }
candle-nn = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false }
candle-transformers = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false }
candle-flash-attn = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false, optional = true }
candle-onnx = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false, optional = true }
candle-datasets = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false, optional = true }

# — Optional acceleration dependencies —
half = { version = "2.6", optional = true }
rubato     = { version = "0.16.2", optional = true }                                                 # FFT resampler
symphonia = { version = "0.5", optional = true }
image = { version = "0.25", optional = true }
palette = { version = "0.7.6", optional = true }
enterpolation = { version = "0.3.0", optional = true }
tokenizers = { version = "0.21.2", optional = true }
safetensors = { version = "0.6.0", optional = true }
dioxus = { git = "https://github.com/DioxusLabs/dioxus", branch = "main", optional = true }
js-sys = { version = "0.3", optional = true }
wasm-bindgen = { version = "0.2", optional = true }
gloo-timers = { version = "0.3", optional = true, features = ["futures"] }
cpal = { version = "0.16.0", optional = true }


# Zero-allocation data structures
arrayvec = "0.7.4"
smallvec = "1.11.2"

# Lock-free concurrency
crossbeam = "0.8.3"
crossbeam-channel = "0.5.8"
crossbeam-skiplist = "0.1.3"
arc-swap = "1.6.0"

# Performance optimizations
memmap2 = "0.9.0"
wide = "0.7.13"
parking_lot = "0.12.1"

# Async runtime
tokio = { version = "1.35", features = ["full"] }
futures = "0.3.30"

# Random number generation
fastrand = "2.0.1"
rand = "0.9.2"

# Serialization
serde = { version = "1.0.193", features = ["derive"] }
serde_json = "1.0.108"

# Error handling
thiserror = "2.0.12"
anyhow = "1.0.75"

# Logging
tracing = "0.1.40"

# Security
zeroize = "1.6.0"

# Local dependencies


[features]
default = ["microphone", "metal"]  # macOS-optimized defaults with Metal acceleration
# --- Candle backend features (required for all candle crates) -----
cuda = ["candle-core/cuda", "candle-nn/cuda", "dep:cudarc", "dep:half", "dep:bindgen_cuda", "candle-transformers/cuda"]
cudnn = ["candle-core/cudnn", "candle-nn/cudnn", "candle-transformers/cudnn"]
metal = ["candle-core/metal", "candle-nn/metal", "candle-transformers/metal"]
accelerate = ["dep:accelerate-src", "candle-core/accelerate", "candle-nn/accelerate", "candle-transformers/accelerate"]
mkl = ["dep:intel-mkl-src", "candle-core/mkl", "candle-nn/mkl", "candle-transformers/mkl"]
flash-attn = ["cuda", "dep:candle-flash-attn", "candle-transformers/flash-attn"]
nccl = ["cuda", "cudarc/nccl", "dep:half"]
onnx = ["dep:candle-onnx"]
# UI features
ui = ["dioxus", "js-sys", "wasm-bindgen", "gloo-timers"]

# Audio processing features
microphone = ["dep:cpal", "dep:rubato"]
encodec = ["dep:cpal", "dep:symphonia", "dep:rubato"]
mimi = ["dep:cpal", "dep:symphonia", "dep:rubato"]
snac = ["dep:cpal", "dep:symphonia", "dep:rubato"]
depth_anything_v2 = ["dep:palette", "dep:enterpolation"]

# OS-specific acceleration dependencies
[target.'cfg(all(target_os = "linux", target_arch = "x86_64"))'.dependencies]
cudarc = { version = "0.16.6", optional = true, default-features = false, features = ["cublas", "cublaslt", "cudnn", "curand", "dynamic-linking", "f16", "std"] }
intel-mkl-src = { version = "0.8", optional = true }
bindgen_cuda = { version = "0.1.5", optional = true }

[target.'cfg(all(target_os = "windows", target_arch = "x86_64"))'.dependencies]
cudarc = { version = "0.16.6", optional = true, default-features = false, features = ["cublas", "cublaslt", "cudnn", "curand", "dynamic-linking", "f16", "std"] }
intel-mkl-src = { version = "0.8", optional = true }
bindgen_cuda = { version = "0.1.5", optional = true }

[target.'cfg(target_os = "macos")'.dependencies]
accelerate-src = { version = "0.3", optional = true }



[dev-dependencies]
criterion = "0.6.0"
tempfile = "3.8.1"
