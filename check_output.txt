   Compiling model-info v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/model-info)
   Compiling sweetmcp-pingora v0.3.1 (/Volumes/samsung_t9/fluent-ai/packages/sweetmcp/packages/pingora)
warning: function `create_default_configuration` is never used
   --> packages/sweetmcp/packages/daemon/src/installer/config.rs:536:8
    |
536 | pub fn create_default_configuration(config_path: &Path) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function `validate_existing_wildcard_cert` is never used
  --> packages/sweetmcp/packages/daemon/src/installer/uninstall.rs:57:8
   |
57 | pub fn validate_existing_wildcard_cert(cert_path: &Path) -> Result<()> {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `add_sweetmcp_host_entries` is never used
   --> packages/sweetmcp/packages/daemon/src/installer/uninstall.rs:252:4
    |
252 | fn add_sweetmcp_host_entries() -> Result<()> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `get_installed_daemon_path` is never used
   --> packages/sweetmcp/packages/daemon/src/installer/uninstall.rs:308:4
    |
308 | fn get_installed_daemon_path() -> PathBuf {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `timeout` is never read
  --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/core.rs:24:16
   |
18 | pub struct McpBridge {
   |            --------- field in this struct
...
24 |     pub(super) timeout: Duration,
   |                ^^^^^^^
   |
   = note: `McpBridge` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple associated items are never used
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/core.rs:48:12
    |
27  | impl McpBridge {
    | -------------- associated items in this implementation
...
48  |     pub fn with_client_config(
    |            ^^^^^^^^^^^^^^^^^^
...
78  |     pub fn timeout(&self) -> Duration {
    |            ^^^^^^^
...
83  |     pub fn set_server_url(&mut self, url: String) {
    |            ^^^^^^^^^^^^^^
...
88  |     pub fn set_timeout(&mut self, timeout: Duration) {
    |            ^^^^^^^^^^^
...
113 |     pub fn get_connection_stats(&self) -> ConnectionStats {
    |            ^^^^^^^^^^^^^^^^^^^^
...
198 |     pub fn validate_config(&self) -> Result<()> {
    |            ^^^^^^^^^^^^^^^
...
226 |     pub fn get_config_summary(&self) -> BridgeConfig {
    |            ^^^^^^^^^^^^^^^^^^

warning: struct `ConnectionStats` is never constructed
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/core.rs:237:12
    |
237 | pub struct ConnectionStats {
    |            ^^^^^^^^^^^^^^^

warning: struct `BridgeConfig` is never constructed
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/core.rs:250:12
    |
250 | pub struct BridgeConfig {
    |            ^^^^^^^^^^^^

warning: struct `McpBridgeBuilder` is never constructed
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/core.rs:267:12
    |
267 | pub struct McpBridgeBuilder {
    |            ^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/core.rs:277:12
    |
275 | impl McpBridgeBuilder {
    | --------------------- associated items in this implementation
276 |     /// Create a new builder
277 |     pub fn new() -> Self {
    |            ^^^
...
288 |     pub fn server_url(mut self, url: impl Into<String>) -> Self {
    |            ^^^^^^^^^^
...
294 |     pub fn timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^
...
300 |     pub fn max_idle_connections(mut self, max: usize) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^
...
306 |     pub fn keepalive_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
312 |     pub fn user_agent(mut self, agent: impl Into<String>) -> Self {
    |            ^^^^^^^^^^
...
318 |     pub fn build(self) -> Result<McpBridge> {
    |            ^^^^^

warning: multiple methods are never used
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/forwarding.rs:68:18
    |
14  | impl McpBridge {
    | -------------- methods in this implementation
...
68  |     pub async fn forward_batch_requests(&self, requests: Vec<Value>) -> Vec<Value> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
123 |     pub async fn forward_request_with_retry(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
176 |     pub async fn forward_request_with_timeout(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
200 |     pub async fn forward_streaming_request(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
...
216 |     pub fn get_forwarding_stats(&self) -> ForwardingStats {
    |            ^^^^^^^^^^^^^^^^^^^^
...
229 |     pub fn process_response(&self, response: Value, original_request: &Value) -> Value {
    |            ^^^^^^^^^^^^^^^^
...
260 |     pub async fn handle_connection_error(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
307 |     pub fn validate_response(&self, response: &Value) -> Result<()> {
    |            ^^^^^^^^^^^^^^^^^

warning: struct `ForwardingStats` is never constructed
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/forwarding.rs:343:12
    |
343 | pub struct ForwardingStats {
    |            ^^^^^^^^^^^^^^^

warning: methods `success_rate`, `failure_rate`, and `is_healthy` are never used
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/forwarding.rs:358:12
    |
356 | impl ForwardingStats {
    | -------------------- methods in this implementation
357 |     /// Calculate success rate as percentage
358 |     pub fn success_rate(&self) -> f64 {
    |            ^^^^^^^^^^^^
...
367 |     pub fn failure_rate(&self) -> f64 {
    |            ^^^^^^^^^^^^
...
372 |     pub fn is_healthy(&self) -> bool {
    |            ^^^^^^^^^^

warning: function `validate_batch_requests` is never used
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/validation.rs:349:8
    |
349 | pub fn validate_batch_requests(requests: &[Value]) -> Vec<Result<(), anyhow::Error>> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: function `validate_request_size` is never used
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/validation.rs:378:8
    |
378 | pub fn validate_request_size(request_text: &str) -> Result<(), anyhow::Error> {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `validate_security` is never used
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/validation.rs:393:8
    |
393 | pub fn validate_security(request: &Value) -> Result<(), anyhow::Error> {
    |        ^^^^^^^^^^^^^^^^^

warning: function `get_json_depth` is never used
   --> packages/sweetmcp/packages/daemon/src/service/sse/bridge/validation.rs:418:4
    |
418 | fn get_json_depth(value: &Value) -> usize {
    |    ^^^^^^^^^^^^^^

warning: associated items `encode_multiple`, `comment`, and `keep_alive` are never used
  --> packages/sweetmcp/packages/daemon/src/service/sse/encoder.rs:57:12
   |
16 | impl SseEncoder {
   | --------------- associated items in this implementation
...
57 |     pub fn encode_multiple(&self, events: &[SseEvent]) -> String {
   |            ^^^^^^^^^^^^^^^
...
64 |     pub fn comment(text: &str) -> String {
   |            ^^^^^^^
...
69 |     pub fn keep_alive() -> String {
   |            ^^^^^^^^^^

warning: associated items `data_only`, `message`, `error`, `is_ping`, and `is_error` are never used
   --> packages/sweetmcp/packages/daemon/src/service/sse/events.rs:59:12
    |
48  | impl SseEvent {
    | ------------- associated items in this implementation
...
59  |     pub fn data_only(data: impl Into<String>) -> Self {
    |            ^^^^^^^^^
...
74  |     pub fn message(json_rpc: impl Into<String>) -> Self {
    |            ^^^^^^^
...
84  |     pub fn error(error_msg: impl Into<String>) -> Self {
    |            ^^^^^
...
95  |     pub fn is_ping(&self) -> bool {
    |            ^^^^^^^
...
100 |     pub fn is_error(&self) -> bool {
    |            ^^^^^^^^

warning: fields `user_agent` and `connection_id` are never read
  --> packages/sweetmcp/packages/daemon/src/service/sse/session.rs:33:9
   |
29 | pub struct ClientInfo {
   |            ---------- fields in this struct
...
33 |     pub user_agent: Option<String>,
   |         ^^^^^^^^^^
34 |     /// Client-provided connection info
35 |     pub connection_id: Option<String>,
   |         ^^^^^^^^^^^^^
   |
   = note: `ClientInfo` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `remove_session` and `session_ids` are never used
   --> packages/sweetmcp/packages/daemon/src/service/sse/session.rs:141:18
    |
80  | impl SessionManager {
    | ------------------- methods in this implementation
...
141 |     pub async fn remove_session(&self, session_id: &str) -> bool {
    |                  ^^^^^^^^^^^^^^
...
163 |     pub async fn session_ids(&self) -> Vec<String> {
    |                  ^^^^^^^^^^^

warning: variants `Windows` and `Linux` are never constructed
  --> packages/sweetmcp/packages/daemon/src/signing/mod.rs:45:5
   |
32 | pub enum PlatformConfig {
   |          -------------- variants in this enum
...
45 |     Windows {
   |     ^^^^^^^
...
55 |     Linux {
   |     ^^^^^
   |
   = note: `PlatformConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: function `import_certificate` is never used
   --> packages/sweetmcp/packages/daemon/src/signing/macos.rs:189:8
    |
189 | pub fn import_certificate(cert_path: &Path, password: Option<&str>) -> Result<String> {
    |        ^^^^^^^^^^^^^^^^^^

warning: function `cleanup_keychain` is never used
   --> packages/sweetmcp/packages/daemon/src/signing/macos.rs:284:8
    |
284 | pub fn cleanup_keychain() -> Result<()> {
    |        ^^^^^^^^^^^^^^^^

warning: multiple variants are never constructed
  --> packages/sweetmcp/packages/daemon/src/state_machine.rs:26:5
   |
23 | pub enum Event {
   |          ----- variants in this enum
...
26 |     CmdStop,
   |     ^^^^^^^
27 |     CmdRestart,
   |     ^^^^^^^^^^
...
30 |     StartedOk,
   |     ^^^^^^^^^
31 |     StartErr,
   |     ^^^^^^^^
32 |     ProcExit, // unexpected process exit
   |     ^^^^^^^^
33 |     HealthOk,
   |     ^^^^^^^^
34 |     HealthBad,
   |     ^^^^^^^^^
35 |     StopDone,
   |     ^^^^^^^^
   |
   = note: `Event` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: `sweetmcp-daemon` (bin "sweetmcp-daemon") generated 25 warnings
    Checking fluent_ai_candle v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/candle)
    Checking fluent_ai_domain v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/domain)
warning: fields `provider` and `model_names` are never read
   --> packages/domain/src/model/cache.rs:112:5
    |
111 | struct WarmRequest {
    |        ----------- fields in this struct
112 |     provider: String,
    |     ^^^^^^^^
113 |     model_names: SmallVec<String, WARM_BATCH_SIZE>,
    |     ^^^^^^^^^^^
    |
    = note: `WarmRequest` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
    = note: `#[warn(dead_code)]` on by default

warning: field `cleanup_handle` is never read
   --> packages/domain/src/model/cache.rs:129:5
    |
117 | struct CacheData {
    |        --------- field in this struct
...
129 |     cleanup_handle: Option<tokio::task::JoinHandle<()>>,
    |     ^^^^^^^^^^^^^^

warning: constant `VALIDATION_TIMEOUT` is never used
  --> packages/domain/src/model/model_validation.rs:19:7
   |
19 | const VALIDATION_TIMEOUT: Duration = Duration::from_secs(10);
   |       ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:543:5
    |
543 |     pub max_template_size: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> packages/domain/src/lib.rs:6:9
    |
6   | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:544:5
    |
544 |     pub max_variables: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:545:5
    |
545 |     pub allow_nested_templates: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:546:5
    |
546 |     pub cache_compiled: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:547:5
    |
547 |     pub optimize_templates: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:548:5
    |
548 |     pub security_mode: SecurityMode,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:554:5
    |
554 |     Strict,   // No external access, limited functions
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:555:5
    |
555 |     Normal,   // Standard functions allowed
    |     ^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:556:5
    |
556 |     Relaxed,  // Most functions allowed
    |     ^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/chat/templates/core.rs:557:5
    |
557 |     Disabled, // All functions allowed
    |     ^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:576:5
    |
576 |     pub name: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:577:5
    |
577 |     pub description: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:578:5
    |
578 |     pub input_variables: HashMap<Arc<str>, Arc<str>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:579:5
    |
579 |     pub expected_output: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:585:5
    |
585 |     pub name: Arc<str>,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:586:5
    |
586 |     pub color: Option<Arc<str>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/core.rs:587:5
    |
587 |     pub description: Option<Arc<str>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> packages/domain/src/chat/templates/core.rs:591:5
    |
591 |     pub fn new(name: impl Into<Arc<str>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:599:5
    |
599 |     pub fn with_color(mut self, color: impl Into<Arc<str>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/chat/templates/core.rs:604:5
    |
604 |     pub fn with_description(mut self, description: impl Into<Arc<str>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/parser.rs:14:5
   |
14 |     pub max_depth: usize,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/parser.rs:15:5
   |
15 |     pub max_tokens: usize,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/parser.rs:16:5
   |
16 |     pub allow_expressions: bool,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/parser.rs:17:5
   |
17 |     pub allow_functions: bool,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/chat/templates/parser.rs:18:5
   |
18 |     pub strict_variables: bool}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> packages/domain/src/chat/templates/parser.rs:37:5
   |
37 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> packages/domain/src/chat/templates/parser.rs:42:5
   |
42 |     pub fn with_config(config: ParserConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/parser.rs:268:5
    |
268 |     pub parsed_count: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/parser.rs:269:5
    |
269 |     pub total_parse_time_us: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/parser.rs:270:5
    |
270 |     pub error_count: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/chat/templates/parser.rs:271:5
    |
271 |     pub peak_memory_bytes: usize}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> packages/domain/src/completion/mod.rs:27:1
   |
27 | pub type CompletionResult<T> = CompletionCoreResult<T>;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> packages/domain/src/completion/mod.rs:28:1
   |
28 | pub type StreamingResponse = StreamingCoreResponse;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/completion/candle.rs:52:29
   |
52 |     ContextLengthExceeded { current: u32, max: u32 },
   |                             ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/completion/candle.rs:52:43
   |
52 |     ContextLengthExceeded { current: u32, max: u32 },
   |                                           ^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/completion/types.rs:75:5
   |
75 |     pub name: String,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/completion/types.rs:76:5
   |
76 |     pub description: String,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/completion/types.rs:77:5
   |
77 |     pub parameters: Value}
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:136:21
    |
136 |     ToolCallStart { id: String, name: String },
    |                     ^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:136:33
    |
136 |     ToolCallStart { id: String, name: String },
    |                                 ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:140:9
    |
140 |         id: String,
    |         ^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:141:9
    |
141 |         name: String,
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:142:9
    |
142 |         partial_input: String},
    |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:146:9
    |
146 |         id: String,
    |         ^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:147:9
    |
147 |         name: String,
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:148:9
    |
148 |         input: String},
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:152:9
    |
152 |         text: String,
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:153:9
    |
153 |         finish_reason: Option<FinishReason>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/chunk.rs:154:9
    |
154 |         usage: Option<Usage>},
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> packages/domain/src/context/chunk.rs:218:5
    |
218 |     pub fn new(content: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> packages/domain/src/context/chunk.rs:228:5
    |
228 |     pub fn new(content: impl Into<String>, role: crate::chat::message::MessageRole) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/extraction/error.rs:20:15
   |
20 |     Timeout { duration: Duration },
   |               ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/extraction/error.rs:24:21
   |
24 |     InvalidFormat { actual: String },
   |                     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/extraction/error.rs:28:21
   |
28 |     MissingFields { fields: Vec<String> },
   |                     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/context/extraction/error.rs:32:24
   |
32 |     ValidationFailed { reason: String },
   |                        ^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/context/loader.rs:215:1
    |
215 | pub type DefaultLoader<T> = LoaderImpl<T>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/context/loader.rs:218:1
    |
218 | pub type FileLoader<T> = LoaderImpl<T>;
    | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:113:5
    |
113 |     ProviderStopped {
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:129:5
    |
129 |     ContextLoadCompleted {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:140:5
    |
140 |     ContextLoadFailed {
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:158:5
    |
158 |     MemorySearchCompleted {
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:267:5
    |
267 |     pub successful_operations: AtomicU64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:268:5
    |
268 |     pub failed_operations: AtomicU64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:269:5
    |
269 |     pub total_processing_time_nanos: AtomicU64}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:365:5
    |
365 |     pub name: String,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:366:5
    |
366 |     pub version: String,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:367:5
    |
367 |     pub vector_dimension: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:368:5
    |
368 |     pub max_input_length: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:369:5
    |
369 |     pub supported_languages: Vec<String>}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:395:5
    |
395 |     pub name: String,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:396:5
    |
396 |     pub version: String,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:397:5
    |
397 |     pub storage_type: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:398:5
    |
398 |     pub max_memory_nodes: Option<usize>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:399:5
    |
399 |     pub supported_operations: Vec<String>}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:610:5
    |
610 |     pub processor_id: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:611:5
    |
611 |     pub context_requests: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:612:5
    |
612 |     pub active_contexts: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:613:5
    |
613 |     pub total_contexts_processed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:614:5
    |
614 |     pub successful_contexts: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:615:5
    |
615 |     pub failed_contexts: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:616:5
    |
616 |     pub total_documents_loaded: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:617:5
    |
617 |     pub success_rate: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/context/provider.rs:618:5
    |
618 |     pub average_processing_time_nanos: u64}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:629:5
    |
629 |     File(ImmutableFileContext),
    |     ^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:630:5
    |
630 |     Files(ImmutableFilesContext),
    |     ^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:631:5
    |
631 |     Directory(ImmutableDirectoryContext),
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/context/provider.rs:632:5
    |
632 |     Github(ImmutableGithubContext)}
    |     ^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/context/provider.rs:967:1
    |
967 | pub type FilesContext = ImmutableFilesContext;
    | ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/context/provider.rs:970:1
    |
970 | pub type DirectoryContext = ImmutableDirectoryContext;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> packages/domain/src/context/provider.rs:973:1
    |
973 | pub type GithubContext = ImmutableGithubContext;
    | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> packages/domain/src/context/provider.rs:976:1
    |
976 | pub trait EmbeddingModel: ImmutableEmbeddingModel {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> packages/domain/src/context/provider.rs:979:1
    |
979 | pub trait MemoryManager: ImmutableMemoryManager {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/core/mod.rs:43:5
   |
43 |     SendError,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/core/mod.rs:45:5
   |
45 |     ReceiveError,
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/core/mod.rs:47:5
   |
47 |     Closed}
   |     ^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:199:5
    |
199 |     pub prompt: &'a str,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:200:5
    |
200 |     pub system_prompt: Option<&'a str>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:201:5
    |
201 |     pub conversation_history: &'a [&'a str],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:202:5
    |
202 |     pub tools: &'a [&'a str],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:203:5
    |
203 |     pub metadata: Option<&'a str>}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:512:5
    |
512 |     pub total_requests: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:513:5
    |
513 |     pub active_requests: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:514:5
    |
514 |     pub successful_requests: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:515:5
    |
515 |     pub failed_requests: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/engine.rs:516:5
    |
516 |     pub is_healthy: bool}
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:107:5
    |
107 |     pub fn get_state(&self) -> CircuitBreakerState {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:811:5
    |
811 |     fn into_zero_alloc_error(self) -> ZeroAllocError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:900:5
    |
900 | /     fn map_zero_alloc_err<F>(self, f: F) -> ZeroAllocResult<T>
901 | |     where
902 | |         F: FnOnce() -> ZeroAllocError;
    | |______________________________________^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:904:5
    |
904 |     fn with_error_metadata(self, key: &str, value: &str) -> ZeroAllocResult<T>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:906:5
    |
906 |     fn with_error_code(self, code: u64) -> ZeroAllocResult<T>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> packages/domain/src/error.rs:908:5
    |
908 |     fn record_error(self) -> ZeroAllocResult<T>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/http/auth.rs:878:26
    |
878 |     InvalidTokenPrefix { expected: String, actual: String },
    |                          ^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> packages/domain/src/http/auth.rs:37:9
    |
37  | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/http/auth.rs:878:44
    |
878 |     InvalidTokenPrefix { expected: String, actual: String },
    |                                            ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/http/requests/completion.rs:820:16
    |
820 |     Required { function: FunctionChoice },
    |                ^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> packages/domain/src/http/requests/mod.rs:22:9
    |
22  | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for a static
  --> packages/domain/src/init/globals.rs:44:1
   |
44 | pub static CIRCUIT_BREAKER_LAST_RESET: std::sync::atomic::AtomicU64 =
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> packages/domain/src/init/globals.rs:48:1
   |
48 | / thread_local! {
49 | |     pub static LOCAL_CONFIG: std::cell::RefCell<Option<Arc<MemoryConfig>>> =
50 | |         std::cell::RefCell::new(None);
51 | | }
   | |_^
   |
   = note: this warning originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: missing documentation for an associated type
  --> packages/domain/src/memory/mod.rs:87:5
   |
87 |     type Error;
   |     ^^^^^^^^^^

warning: missing documentation for an associated type
  --> packages/domain/src/memory/mod.rs:88:5
   |
88 |     type MemoryNode;
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/memory/mod.rs:90:5
   |
90 |     fn store_memory(&self, memory: Self::MemoryNode) -> Result<(), Self::Error>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> packages/domain/src/memory/mod.rs:96:1
   |
96 | pub type Error = crate::memory::primitives::MemoryError;
   | ^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> packages/domain/src/memory/mod.rs:99:1
   |
99 | pub type VectorStoreError = Error;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> packages/domain/src/memory/config/llm.rs:165:5
    |
165 |     ValidationError(String)}
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> packages/domain/src/memory/manager.rs:28:1
   |
28 | pub struct MemoryConfig {
   | ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/manager.rs:29:5
   |
29 |     pub database_url: String,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/manager.rs:30:5
   |
30 |     pub embedding_dimension: usize}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
  --> packages/domain/src/memory/manager.rs:40:1
   |
40 | pub trait MemoryManagerTrait: Send + Sync {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> packages/domain/src/memory/manager.rs:44:1
   |
44 | pub struct SurrealDBMemoryManager {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:60:5
   |
60 |     pub avx2: bool,
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:61:5
   |
61 |     pub avx512f: bool,
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:62:5
   |
62 |     pub avx512bw: bool,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:63:5
   |
63 |     pub avx512vl: bool,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:64:5
   |
64 |     pub fma: bool,
   |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:65:5
   |
65 |     pub sse42: bool,
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:66:5
   |
66 |     pub neon: bool,
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/ops.rs:67:5
   |
67 |     pub architecture: CpuArchitecture}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/memory/ops.rs:72:5
   |
72 |     X86_64,
   |     ^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/memory/ops.rs:73:5
   |
73 |     AArch64,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/memory/ops.rs:74:5
   |
74 |     Other}
   |     ^^^^^

warning: missing documentation for an associated function
  --> packages/domain/src/memory/ops.rs:78:5
   |
78 |     pub fn detect() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:51:9
   |
51 |         content: String,
   |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:52:9
   |
52 |         memory_type: MemoryType},
   |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:54:14
   |
54 |     Recall { query: String, limit: Option<usize> },
   |              ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:54:29
   |
54 |     Recall { query: String, limit: Option<usize> },
   |                             ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:56:20
   |
56 |     VectorSearch { vector: Vec<f32>, limit: usize },
   |                    ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:56:38
   |
56 |     VectorSearch { vector: Vec<f32>, limit: usize },
   |                                      ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:58:17
   |
58 |     GetMemory { id: String },
   |                 ^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:60:20
   |
60 |     UpdateMemory { memory: MemoryNode },
   |                    ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/memory/tool.rs:62:20
   |
62 |     DeleteMemory { id: String }}
   |                    ^^^^^^^^^^

warning: missing documentation for a module
 --> packages/domain/src/model/mod.rs:9:1
  |
9 | pub mod adapter_impls;
  | ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a module
  --> packages/domain/src/model/mod.rs:10:1
   |
10 | pub mod unified_registry;
   | ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/unified_registry.rs:347:5
    |
347 |     pub total_models: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/unified_registry.rs:348:5
    |
348 |     pub total_providers: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/unified_registry.rs:349:5
    |
349 |     pub models_per_provider: HashMap<String, usize>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/error.rs:12:9
   |
12 |         provider: Cow<'static, str>,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/error.rs:13:9
   |
13 |         name: Cow<'static, str>},
   |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/error.rs:20:9
   |
20 |         provider: Cow<'static, str>,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/error.rs:21:9
   |
21 |         name: Cow<'static, str>},
   |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/provider_traits.rs:125:21
    |
125 |     ModelNotFound { provider: String, model: String },
    |                     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/provider_traits.rs:125:39
    |
125 |     ModelNotFound { provider: String, model: String },
    |                                       ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/provider_traits.rs:129:16
    |
129 |     ApiError { message: String },
    |                ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/provider_traits.rs:133:28
    |
133 |     AuthenticationFailed { provider: String, message: String },
    |                            ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/provider_traits.rs:133:46
    |
133 |     AuthenticationFailed { provider: String, message: String },
    |                                              ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/provider_traits.rs:137:20
    |
137 |     NetworkError { message: String },
    |                    ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/provider_traits.rs:141:18
    |
141 |     ParseError { message: String },
    |                  ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/provider_traits.rs:145:25
    |
145 |     RateLimitExceeded { provider: String },
    |                         ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/provider_traits.rs:149:26
    |
149 |     ConfigurationError { message: String },
    |                          ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/resolver.rs:118:21
    |
118 |     HasCapability { capability: String },
    |                     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/resolver.rs:121:18
    |
121 |     HasFeature { feature: String },
    |                  ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/resolver.rs:124:17
    |
124 |     EnvVarSet { name: String },
    |                 ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/resolver.rs:127:22
    |
127 |     FeatureEnabled { name: String }}
    |                      ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:15:20
   |
15 |     MissingField { field: String, model: String },
   |                    ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:15:35
   |
15 |     MissingField { field: String, model: String },
   |                                   ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:19:9
   |
19 |         field: String,
   |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:20:9
   |
20 |         value: String,
   |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:21:9
   |
21 |         expected: String},
   |         ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:24:24
   |
24 |     InconsistentData { description: String },
   |                        ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:27:23
   |
27 |     InvalidProvider { provider: String },
   |                       ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:30:24
   |
30 |     InvalidModelName { name: String },
   |                        ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:33:22
   |
33 |     InvalidPricing { description: String },
   |                      ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:36:25
   |
36 |     InvalidCapability { description: String },
   |                         ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/validation.rs:39:27
   |
39 |     UnsafeConfiguration { description: String }}
   |                           ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> packages/domain/src/model/model_registry.rs:20:1
   |
20 | pub struct ModelInfoProvider {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/model_registry.rs:21:5
   |
21 |     pub name: String,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/model_registry.rs:22:5
   |
22 |     pub max_context: u64,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/model_registry.rs:23:5
   |
23 |     pub pricing_input: f64,
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/model_registry.rs:24:5
   |
24 |     pub pricing_output: f64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/model_registry.rs:25:5
   |
25 |     pub is_thinking: bool,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> packages/domain/src/model/model_registry.rs:26:5
   |
26 |     pub required_temperature: Option<f64>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> packages/domain/src/model/model_registry.rs:30:1
   |
30 | pub enum Provider {
   | ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/model/model_registry.rs:31:5
   |
31 |     OpenAi,
   |     ^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/model/model_registry.rs:32:5
   |
32 |     Mistral,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/model/model_registry.rs:33:5
   |
33 |     Anthropic,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/model/model_registry.rs:34:5
   |
34 |     Together,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/model/model_registry.rs:35:5
   |
35 |     OpenRouter,
   |     ^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/model/model_registry.rs:36:5
   |
36 |     HuggingFace,
   |     ^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/model/model_registry.rs:37:5
   |
37 |     Xai,
   |     ^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/model_registry.rs:440:5
    |
440 |     pub total_models: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/model_registry.rs:441:5
    |
441 |     pub models_by_provider: HashMap<String, usize>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/model_registry.rs:442:5
    |
442 |     pub thinking_models: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/model_registry.rs:443:5
    |
443 |     pub high_context_models: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/model_registry.rs:444:5
    |
444 |     pub low_cost_models: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/cache.rs:101:5
    |
101 |     pub hits: u64,
    |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/cache.rs:102:5
    |
102 |     pub misses: u64,
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/cache.rs:103:5
    |
103 |     pub evictions: u64,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/cache.rs:104:5
    |
104 |     pub entries: usize,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/cache.rs:105:5
    |
105 |     pub memory_usage_bytes: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> packages/domain/src/model/cache.rs:106:5
    |
106 |     pub average_lookup_time_nanos: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
 --> packages/domain/src/prompt/mod.rs:6:1
  |
6 | pub struct Prompt {
  | ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
 --> packages/domain/src/prompt/mod.rs:7:5
  |
7 |     pub content: String,
  |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
 --> packages/domain/src/prompt/mod.rs:9:5
  |
9 |     pub role: MessageRole}
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> packages/domain/src/prompt/mod.rs:16:5
   |
16 |     pub fn new(content: impl Into<String>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/prompt/mod.rs:22:5
   |
22 |     pub fn content(&self) -> &str {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> packages/domain/src/tool/core.rs:23:5
   |
23 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> packages/domain/src/tool/core.rs:27:5
   |
27 |     pub fn push(&mut self, tool: ToolDefinition) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/tool/core.rs:35:5
   |
35 |     Typed(Box<dyn std::any::Any + Send + Sync>),
   |     ^^^^^

warning: missing documentation for a variant
  --> packages/domain/src/tool/core.rs:36:5
   |
36 |     Named(NamedTool)}
   |     ^^^^^

warning: `fluent_ai_domain` (lib) generated 219 warnings
    Checking fluent_ai v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/fluent-ai)
    Checking fluent_ai_memory v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/memory)
    Checking fluent_ai_provider v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/provider)
error[E0432]: unresolved import `crate::domain::memory::VectorStoreIndexDyn`
  --> packages/fluent-ai/src/vector_store/in_memory.rs:14:5
   |
14 | use crate::domain::memory::VectorStoreIndexDyn;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `VectorStoreIndexDyn` in `memory`

error[E0432]: unresolved imports `crate::domain::memory::VectorStoreIndex`, `crate::domain::memory::VectorStoreIndexDyn`
  --> packages/fluent-ai/src/vector_store/mod.rs:15:51
   |
15 | pub use crate::domain::memory::{VectorStoreError, VectorStoreIndex, VectorStoreIndexDyn};
   |                                                   ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^ no `VectorStoreIndexDyn` in `memory`
   |                                                   |
   |                                                   no `VectorStoreIndex` in `memory`
   |                                                   help: a similar name exists in the module: `VectorStoreType`

error[E0432]: unresolved imports `fluent_ai_domain::ChatMessageChunk`, `fluent_ai_domain::AgentConversation`
  --> packages/fluent-ai/src/agent/agent.rs:15:37
   |
15 | use fluent_ai_domain::{MessageRole, ChatMessageChunk as MessageChunk, AgentConversation, ZeroOneOrMany};
   |                                     ----------------^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^ no `AgentConversation` in the root
   |                                     |
   |                                     no `ChatMessageChunk` in the root
   |                                     help: a similar name exists in the module: `MessageChunk`
   |
   = help: consider importing one of these structs instead:
           crate::domain::chunk::ChatMessageChunk
           fluent_ai_domain::chunk::ChatMessageChunk
   = help: consider importing one of these structs instead:
           crate::domain::agent::AgentConversation
           crate::domain::agent::types::AgentConversation
           fluent_ai_domain::agent::AgentConversation
           fluent_ai_domain::agent::types::AgentConversation

error[E0432]: unresolved import `crate::domain::mcp_tool`
  --> packages/fluent-ai/src/agent/builder.rs:35:13
   |
35 |     domain::mcp_tool::Tool,
   |             ^^^^^^^^ could not find `mcp_tool` in `domain`

error[E0432]: unresolved imports `fluent_ai_async::AsyncStreamExt`, `fluent_ai_async::AsyncStreamTryExt`
  --> packages/fluent-ai/src/agent/completion.rs:21:23
   |
21 | use fluent_ai_async::{AsyncStreamExt, AsyncStreamTryExt};
   |                       ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^ no `AsyncStreamTryExt` in the root
   |                       |
   |                       no `AsyncStreamExt` in the root
   |                       help: a similar name exists in the module: `AsyncStream`

error[E0432]: unresolved imports `fluent_ai_domain::AgentConversation`, `fluent_ai_domain::AgentConversationMessage`, `fluent_ai_domain::AgentRole`, `fluent_ai_domain::AgentRoleAgent`, `fluent_ai_domain::AgentRoleImpl`, `fluent_ai_domain::ChatMessageChunk`, `fluent_ai_domain::CompletionProvider`, `fluent_ai_domain::Context`, `fluent_ai_domain::Tool`, `fluent_ai_domain::McpServer`, `fluent_ai_domain::Memory`, `fluent_ai_domain::AdditionalParams`, `fluent_ai_domain::Metadata`, `fluent_ai_domain::Conversation`, `fluent_ai_domain::completion::Message`, `fluent_ai_domain::chat::ChatLoop`
  --> packages/fluent-ai/src/builders/agent_role.rs:9:5
   |
9  |     AgentConversation, AgentConversationMessage, AgentRole, AgentRoleAgent, AgentRoleImpl,
   |     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^ no `AgentRoleImpl` in the root
   |     |                  |                         |          |
   |     |                  |                         |          no `AgentRoleAgent` in the root
   |     |                  |                         no `AgentRole` in the root
   |     |                  no `AgentConversationMessage` in the root
   |     no `AgentConversation` in the root
10 |     ChatMessageChunk, CompletionProvider, Context, Tool, McpServer, Memory, 
   |     ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^  ^^^^  ^^^^^^^^^  ^^^^^^
   |     |                 |                   |        |     |
   |     |                 |                   |        |     no `McpServer` in the root
   |     |                 |                   |        no `Tool` in the root
   |     |                 |                   no `Context` in the root
   |     |                 no `CompletionProvider` in the root
   |     no `ChatMessageChunk` in the root
11 |     AdditionalParams, Metadata, Conversation, MessageRole,
   |     ^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^
...
14 |     completion::{Message, CompletionModel},
   |                  ^^^^^^^
15 |     chat::ChatLoop,
   |     ^^^^^^^^^^^^^^
   |
   = help: consider importing one of these structs instead:
           crate::domain::agent::AgentConversation
           crate::domain::agent::types::AgentConversation
           fluent_ai_domain::agent::AgentConversation
           fluent_ai_domain::agent::types::AgentConversation
   = help: consider importing one of these structs instead:
           crate::domain::agent::AgentConversationMessage
           crate::domain::agent::types::AgentConversationMessage
           fluent_ai_domain::agent::AgentConversationMessage
           fluent_ai_domain::agent::types::AgentConversationMessage
   = help: consider importing one of these traits instead:
           crate::domain::agent::AgentRole
           fluent_ai_domain::agent::AgentRole
   = help: consider importing one of these structs instead:
           crate::domain::agent::AgentRoleAgent
           crate::domain::agent::types::AgentRoleAgent
           fluent_ai_domain::agent::AgentRoleAgent
           fluent_ai_domain::agent::types::AgentRoleAgent
   = help: consider importing one of these structs instead:
           crate::domain::agent::AgentRoleImpl
           fluent_ai_domain::agent::AgentRoleImpl
   = help: consider importing one of these structs instead:
           crate::domain::chunk::ChatMessageChunk
           fluent_ai_domain::chunk::ChatMessageChunk
   = help: consider importing this struct through its public re-export instead:
           crate::agent::CompletionProvider
   = help: consider importing one of these items instead:
           crate::domain::chat::templates::TemplateCategory::Context
           crate::domain::context::Context
           std::task::Context
           anyhow::Context
           fluent_ai_domain::chat::templates::TemplateCategory::Context
           fluent_ai_domain::context::Context
           ratatui::widgets::canvas::Context
           syntect::parsing::syntax_definition::Context
   = help: consider importing one of these items instead:
           crate::MessageRole::Tool
           crate::domain::ImmutableChatCommand::Tool
           crate::domain::chat::templates::TemplateCategory::Tool
           crate::domain::http::MessageRole::Tool
           crate::domain::tool::Tool
           crate::domain::tool::traits::Tool
           crate::domain::tool::types::Tool
           fluent_ai_domain::ImmutableChatCommand::Tool
           fluent_ai_domain::MessageRole::Tool
           fluent_ai_domain::chat::templates::TemplateCategory::Tool
           fluent_ai_domain::http::MessageRole::Tool
           fluent_ai_domain::tool::Tool
           fluent_ai_domain::tool::traits::Tool
           fluent_ai_domain::tool::types::Tool
help: a similar name exists in the module
   |
10 -     ChatMessageChunk, CompletionProvider, Context, Tool, McpServer, Memory, 
10 +     MessageChunk, CompletionProvider, Context, Tool, McpServer, Memory, 
   |
help: a similar name exists in the module
   |
10 -     ChatMessageChunk, CompletionProvider, Context, Tool, McpServer, Memory, 
10 +     ChatMessageChunk, CompletionModel, Context, Tool, McpServer, Memory, 
   |
help: a similar name exists in the module (notice the capitalization difference)
   |
10 -     ChatMessageChunk, CompletionProvider, Context, Tool, McpServer, Memory, 
10 +     ChatMessageChunk, CompletionProvider, context, Tool, McpServer, Memory, 
   |
help: a similar name exists in the module
   |
10 -     ChatMessageChunk, CompletionProvider, Context, Tool, McpServer, Memory, 
10 +     ChatMessageChunk, CompletionProvider, Context, tool, McpServer, Memory, 
   |

error[E0432]: unresolved imports `fluent_ai_domain::Context`, `fluent_ai_domain::Tool`
   --> packages/fluent-ai/src/builders/agent_role.rs:543:24
    |
543 | use fluent_ai_domain::{Context, Tool};
    |                        ^^^^^^^  ^^^^ no `Tool` in the root
    |                        |
    |                        no `Context` in the root
    |
    = help: consider importing one of these items instead:
            crate::domain::chat::templates::TemplateCategory::Context
            crate::domain::context::Context
            std::task::Context
            anyhow::Context
            fluent_ai_domain::chat::templates::TemplateCategory::Context
            fluent_ai_domain::context::Context
            ratatui::widgets::canvas::Context
            syntect::parsing::syntax_definition::Context
    = help: consider importing one of these items instead:
            crate::MessageRole::Tool
            crate::domain::ImmutableChatCommand::Tool
            crate::domain::chat::templates::TemplateCategory::Tool
            crate::domain::http::MessageRole::Tool
            crate::domain::tool::Tool
            crate::domain::tool::traits::Tool
            crate::domain::tool::types::Tool
            fluent_ai_domain::ImmutableChatCommand::Tool
            fluent_ai_domain::MessageRole::Tool
            fluent_ai_domain::chat::templates::TemplateCategory::Tool
            fluent_ai_domain::http::MessageRole::Tool
            fluent_ai_domain::tool::Tool
            fluent_ai_domain::tool::traits::Tool
            fluent_ai_domain::tool::types::Tool
help: a similar name exists in the module (notice the capitalization difference)
    |
543 - use fluent_ai_domain::{Context, Tool};
543 + use fluent_ai_domain::{context, Tool};
    |
help: a similar name exists in the module
    |
543 - use fluent_ai_domain::{Context, Tool};
543 + use fluent_ai_domain::{Context, tool};
    |

error[E0432]: unresolved import `fluent_ai_domain::chat::StreamingConversation`
 --> packages/fluent-ai/src/builders/chat/conversation_builder.rs:1:43
  |
1 | use fluent_ai_domain::chat::{MessageRole, StreamingConversation};
  |                                           ^^^^^^^^^^^^^^^^^^^^^ no `StreamingConversation` in `chat`
  |
  = help: consider importing one of these structs instead:
          crate::domain::chat::conversation::StreamingConversation
          fluent_ai_domain::chat::conversation::StreamingConversation

error[E0432]: unresolved imports `fluent_ai_domain::chat::EnhancedHistoryManager`, `fluent_ai_domain::chat::ConversationTagger`, `fluent_ai_domain::chat::HistoryExporter`, `fluent_ai_domain::chat::HistoryManagerStatistics`, `fluent_ai_domain::chat::SearchStatistics`
 --> packages/fluent-ai/src/builders/chat/history_manager_builder.rs:5:5
  |
5 |     EnhancedHistoryManager, ChatSearchIndex, ConversationTagger, 
  |     ^^^^^^^^^^^^^^^^^^^^^^                   ^^^^^^^^^^^^^^^^^^
  |     |                                        |
  |     |                                        no `ConversationTagger` in `chat`
  |     |                                        help: a similar name exists in the module: `Conversation`
  |     no `EnhancedHistoryManager` in `chat`
6 |     HistoryExporter, HistoryManagerStatistics, SearchStatistics
  |     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^ no `SearchStatistics` in `chat`
  |     |                |
  |     |                no `HistoryManagerStatistics` in `chat`
  |     no `HistoryExporter` in `chat`
  |
  = help: consider importing one of these structs instead:
          crate::domain::chat::search::EnhancedHistoryManager
          fluent_ai_domain::chat::search::EnhancedHistoryManager
  = help: consider importing one of these structs instead:
          crate::domain::chat::search::ConversationTagger
          fluent_ai_domain::chat::search::ConversationTagger
  = help: consider importing one of these structs instead:
          crate::domain::chat::search::HistoryExporter
          fluent_ai_domain::chat::search::HistoryExporter
  = help: consider importing one of these structs instead:
          crate::domain::chat::search::HistoryManagerStatistics
          fluent_ai_domain::chat::search::HistoryManagerStatistics
  = help: consider importing one of these structs instead:
          crate::domain::chat::search::SearchStatistics
          fluent_ai_domain::chat::search::SearchStatistics

error[E0432]: unresolved imports `fluent_ai_domain::chat::ChatMacro`, `fluent_ai_domain::chat::MacroExecutionConfig`, `fluent_ai_domain::chat::MacroMetadata`, `fluent_ai_domain::chat::MacroSystemError`
 --> packages/fluent-ai/src/builders/chat/macro_builder.rs:6:5
  |
6 |     ChatMacro, MacroAction, MacroExecutionConfig, MacroMetadata, MacroSystemError
  |     ^^^^^^^^^               ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^
  |     |                       |                     |              |
  |     |                       |                     |              no `MacroSystemError` in `chat`
  |     |                       |                     |              help: a similar name exists in the module: `MacroSystem`
  |     |                       |                     no `MacroMetadata` in `chat`
  |     |                       no `MacroExecutionConfig` in `chat`
  |     no `ChatMacro` in `chat`
  |
  = help: consider importing one of these structs instead:
          crate::domain::chat::macros::ChatMacro
          fluent_ai_domain::chat::macros::ChatMacro
  = help: consider importing one of these structs instead:
          crate::domain::chat::macros::MacroExecutionConfig
          fluent_ai_domain::chat::macros::MacroExecutionConfig
  = help: consider importing one of these structs instead:
          crate::domain::chat::macros::MacroMetadata
          fluent_ai_domain::chat::macros::MacroMetadata
  = help: consider importing one of these enums instead:
          crate::domain::chat::macros::MacroSystemError
          fluent_ai_domain::chat::macros::MacroSystemError

error[E0432]: unresolved imports `fluent_ai_domain::chat::TemplateCategory`, `fluent_ai_domain::chat::core`
 --> packages/fluent-ai/src/builders/chat/template_builder.rs:2:44
  |
2 | use fluent_ai_domain::chat::{ChatTemplate, TemplateCategory, core};
  |                                            ^^^^^^^^^^^^^^^^  ^^^^ no `core` in `chat`
  |                                            |
  |                                            no `TemplateCategory` in `chat`
  |                                            help: a similar name exists in the module: `TemplateManager`
  |
  = help: consider importing one of these enums instead:
          crate::domain::chat::templates::TemplateCategory
          fluent_ai_domain::chat::templates::TemplateCategory
  = help: consider importing one of these modules instead:
          crate::domain::agent::core
          crate::domain::chat::templates::core
          crate::domain::completion::core
          crate::domain::core
          crate::domain::embedding::core
          crate::domain::tool::core
          fluent_ai_domain::agent::core
          fluent_ai_domain::chat::templates::core
          fluent_ai_domain::completion::core
          fluent_ai_domain::core
          fluent_ai_domain::embedding::core
          fluent_ai_domain::tool::core

error[E0432]: unresolved import `fluent_ai_domain::model::RegisteredModel`
 --> packages/fluent-ai/src/builders/model/model_builder.rs:1:53
  |
1 | use fluent_ai_domain::model::{Model, ModelRegistry, RegisteredModel, Result};
  |                                                     ^^^^^^^^^^^^^^^ no `RegisteredModel` in `model`
  |
  = help: consider importing one of these structs instead:
          crate::domain::model::registry::RegisteredModel
          fluent_ai_domain::model::registry::RegisteredModel

error[E0432]: unresolved import `fluent_ai_http3::async_task`
 --> packages/fluent-ai/src/embedding/embedding.rs:8:22
  |
8 | use fluent_ai_http3::async_task::AsyncStream;
  |                      ^^^^^^^^^^ could not find `async_task` in `fluent_ai_http3`

error[E0432]: unresolved imports `crate::domain::message::AssistantContent`, `crate::domain::message::ToolFunction`
  --> packages/fluent-ai/src/extractor/mod.rs:21:23
   |
21 |     domain::message::{AssistantContent, Message, ToolCall, ToolFunction},
   |                       ^^^^^^^^^^^^^^^^                     ^^^^^^^^^^^^ no `ToolFunction` in `chat::message`
   |                       |
   |                       no `AssistantContent` in `chat::message`
   |
   = help: consider importing this enum through its public re-export instead:
           crate::completion::AssistantContent
   = help: consider importing this struct through its public re-export instead:
           crate::completion::ToolFunction

error[E0432]: unresolved import `std::task::AtomicWaker`
  --> packages/fluent-ai/src/runtime/async_stream.rs:20:5
   |
20 | use std::task::AtomicWaker;
   |     ^^^^^^^^^^^^^^^^^^^^^^ no `AtomicWaker` in `task`

error[E0432]: unresolved imports `fluent_ai_domain::McpTool`, `fluent_ai_domain::McpToolData`, `fluent_ai_domain::Tool`
 --> packages/fluent-ai/src/tools/mcp_executor.rs:5:24
  |
5 | use fluent_ai_domain::{McpTool, McpToolData, Tool};
  |                        ^^^^^^^  ^^^^^^^^^^^  ^^^^
  |                        |        |            |
  |                        |        |            no `Tool` in the root
  |                        |        |            help: a similar name exists in the module: `tool`
  |                        |        no `McpToolData` in the root
  |                        no `McpTool` in the root
  |
  = help: consider importing one of these traits instead:
          crate::domain::tool::McpTool
          fluent_ai_domain::tool::McpTool
  = help: consider importing one of these structs instead:
          crate::domain::tool::McpToolData
          fluent_ai_domain::tool::McpToolData
  = help: consider importing one of these items instead:
          crate::MessageRole::Tool
          crate::domain::ImmutableChatCommand::Tool
          crate::domain::chat::templates::TemplateCategory::Tool
          crate::domain::http::MessageRole::Tool
          crate::domain::tool::Tool
          crate::domain::tool::traits::Tool
          crate::domain::tool::types::Tool
          fluent_ai_domain::ImmutableChatCommand::Tool
          fluent_ai_domain::MessageRole::Tool
          fluent_ai_domain::chat::templates::TemplateCategory::Tool
          fluent_ai_domain::http::MessageRole::Tool
          fluent_ai_domain::tool::Tool
          fluent_ai_domain::tool::traits::Tool
          fluent_ai_domain::tool::types::Tool

error[E0432]: unresolved import `crate::tools::cylo_integration`
   --> packages/fluent-ai/src/tools/mcp_executor.rs:223:9
    |
223 |     use crate::tools::cylo_integration;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `cylo_integration` in `tools`
    |
help: consider importing this module instead
    |
223 |     use crate::tools::mcp_executor::cylo_integration;
    |                       ++++++++++++++

error[E0432]: unresolved imports `domain::CompletionRequest`, `domain::Embedding`, `domain::Image`, `domain::audio`
   --> packages/fluent-ai/src/lib.rs:158:12
    |
158 |     Audio, CompletionRequest, Document, Embedding, Image, Message, MessageChunk, MessageRole,
    |            ^^^^^^^^^^^^^^^^^            ^^^^^^^^^  ^^^^^ no `Image` in the root
    |            |                            |
    |            |                            no `Embedding` in the root
    |            no `CompletionRequest` in the root
159 |     audio::{AudioMediaType, ContentFormat as AudioContentFormat},
    |     ^^^^^ could not find `audio` in `domain`
    |
    = help: consider importing one of these structs instead:
            crate::client::CompletionRequest
            crate::completion::CompletionRequest
            crate::domain::completion::CompletionRequest
            crate::domain::engine::CompletionRequest
            crate::domain::http::CompletionRequest
            fluent_ai_domain::completion::CompletionRequest
            fluent_ai_domain::engine::CompletionRequest
            fluent_ai_domain::http::CompletionRequest
    = help: consider importing one of these items instead:
            crate::domain::Capability::Embedding
            crate::domain::UseCase::Embedding
            crate::domain::embedding::Embedding
            crate::domain::model::Embedding
            crate::embeddings::Embedding
            fluent_ai_domain::Capability::Embedding
            fluent_ai_domain::UseCase::Embedding
            fluent_ai_domain::embedding::Embedding
            fluent_ai_domain::model::Embedding
    = help: consider importing one of these items instead:
            crate::completion::Image
            crate::completion::MediaType::Image
            crate::completion::UserContent::Image
            crate::domain::image::Image
            crate::domain::memory::MemoryContent::Image
            crate::message::MediaType::Image
            fluent_ai_domain::image::Image
            fluent_ai_domain::memory::MemoryContent::Image
            fluent_ai_domain::message::MediaType::Image
            pulldown_cmark::Tag::Image
            pulldown_cmark::TagEnd::Image
help: a similar name exists in the module
    |
158 -     Audio, CompletionRequest, Document, Embedding, Image, Message, MessageChunk, MessageRole,
158 +     Audio, CompletionRequest, Document, embedding, Image, Message, MessageChunk, MessageRole,
    |
help: a similar name exists in the module (notice the capitalization difference)
    |
158 -     Audio, CompletionRequest, Document, Embedding, Image, Message, MessageChunk, MessageRole,
158 +     Audio, CompletionRequest, Document, Embedding, image, Message, MessageChunk, MessageRole,
    |

error[E0432]: unresolved import `domain::CompletionBackend`
   --> packages/fluent-ai/src/lib.rs:162:18
    |
162 | pub use domain::{CompletionBackend, CompletionModel};
    |                  ^^^^^^^^^^^^^^^^^ no `CompletionBackend` in the root
    |
    = help: consider importing one of these traits instead:
            crate::domain::completion::CompletionBackend
            fluent_ai_domain::completion::CompletionBackend

error[E0432]: unresolved imports `domain::Context`, `domain::NamedTool`, `domain::Perplexity`, `domain::Stdio`, `domain::ToolV2`
   --> packages/fluent-ai/src/lib.rs:163:18
    |
163 | pub use domain::{Context, Library, NamedTool, Perplexity, Stdio, ToolV2 as Tool};
    |                  ^^^^^^^           ^^^^^^^^^  ^^^^^^^^^^  ^^^^^  ^^^^^^^^^^^^^^ no `ToolV2` in the root
    |                  |                 |          |           |
    |                  |                 |          |           no `Stdio` in the root
    |                  |                 |          no `Perplexity` in the root
    |                  |                 no `NamedTool` in the root
    |                  no `Context` in the root
    |                  help: a similar name exists in the module (notice the capitalization): `context`
    |
    = help: consider importing one of these items instead:
            crate::domain::chat::templates::TemplateCategory::Context
            crate::domain::context::Context
            std::task::Context
            anyhow::Context
            fluent_ai_domain::chat::templates::TemplateCategory::Context
            fluent_ai_domain::context::Context
            ratatui::widgets::canvas::Context
            syntect::parsing::syntax_definition::Context
    = help: consider importing one of these structs instead:
            crate::domain::tool::NamedTool
            fluent_ai_domain::tool::NamedTool
    = help: consider importing one of these items instead:
            crate::domain::Provider::Perplexity
            crate::domain::tool::Perplexity
            fluent_ai_domain::Provider::Perplexity
            fluent_ai_domain::tool::Perplexity
    = help: consider importing one of these structs instead:
            crate::builders::Stdio
            crate::domain::agent::Stdio
            crate::domain::agent::types::Stdio
            std::process::Stdio
            fluent_ai_domain::agent::Stdio
            fluent_ai_domain::agent::types::Stdio

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_memory`
  --> packages/fluent-ai/src/memory/library.rs:12:5
   |
12 | use fluent_ai_memory::utils::config::DatabaseConfig;
   |     ^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_memory`
   |
help: there is a crate or module with a similar name
   |
12 - use fluent_ai_memory::utils::config::DatabaseConfig;
12 + use fluent_ai_domain::utils::config::DatabaseConfig;
   |

error[E0432]: unresolved import `crate::domain::conversation`
  --> packages/fluent-ai/src/prelude.rs:11:24
   |
11 | pub use crate::domain::conversation::{
   |                        ^^^^^^^^^^^^ could not find `conversation` in `domain`

error[E0432]: unresolved import `sweetmcp_memory`
  --> packages/fluent-ai/src/memory/mod.rs:17:9
   |
17 | pub use sweetmcp_memory::{
   |         ^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `sweetmcp_memory`
   |
   = help: if you wanted to use a crate named `sweetmcp_memory`, use `cargo add sweetmcp_memory` to add it to your `Cargo.toml`

error[E0432]: unresolved import `futures_util`
   --> packages/fluent-ai/src/memory/mod.rs:438:17
    |
438 |             use futures_util::StreamExt;
    |                 ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_memory`
  --> packages/fluent-ai/src/message_processing.rs:19:5
   |
19 | use fluent_ai_memory::vector::{
   |     ^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_memory`
   |
help: there is a crate or module with a similar name
   |
19 - use fluent_ai_memory::vector::{
19 + use fluent_ai_domain::vector::{
   |

error[E0432]: unresolved import `arc_swap`
  --> packages/fluent-ai/src/message_processing.rs:12:5
   |
12 | use arc_swap::ArcSwap;
   |     ^^^^^^^^ use of unresolved module or unlinked crate `arc_swap`
   |
   = help: if you wanted to use a crate named `arc_swap`, use `cargo add arc_swap` to add it to your `Cargo.toml`

error[E0432]: unresolved import `wide`
  --> packages/fluent-ai/src/message_processing.rs:24:5
   |
24 | use wide::f32x8;
   |     ^^^^ use of unresolved module or unlinked crate `wide`
   |
   = help: if you wanted to use a crate named `wide`, use `cargo add wide` to add it to your `Cargo.toml`

error[E0432]: unresolved import `crossbeam_skiplist`
  --> packages/fluent-ai/src/text_processing/pattern_matching.rs:14:5
   |
14 | use crossbeam_skiplist::SkipMap;
   |     ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `crossbeam_skiplist`
   |
help: there is a crate or module with a similar name
   |
14 - use crossbeam_skiplist::SkipMap;
14 + use crossbeam_utils::SkipMap;
   |

error[E0432]: unresolved import `fluent_ai_provider`
  --> packages/fluent-ai/src/agent/builder.rs:29:5
   |
29 | use fluent_ai_provider::Model;
   |     ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
   |
   = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0432]: unresolved import `fluent_ai_provider`
   --> packages/fluent-ai/src/agent/builder.rs:159:13
    |
159 |         use fluent_ai_provider::Models;
    |             ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
    |
    = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0432]: unresolved import `fluent_ai_provider`
   --> packages/fluent-ai/src/agent/builder.rs:456:13
    |
456 |         use fluent_ai_provider::Models;
    |             ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
    |
    = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `crossbeam`
  --> packages/fluent-ai/src/client/builder.rs:17:5
   |
17 | use crossbeam::{
   |     ^^^^^^^^^ use of unresolved module or unlinked crate `crossbeam`
   |
help: there is a crate or module with a similar name
   |
17 - use crossbeam::{
17 + use crossterm::{
   |

error[E0432]: unresolved import `crate::client::completion::Chat`
  --> packages/fluent-ai/src/agent/completion.rs:26:5
   |
26 |     client::completion::Chat,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^ no `Chat` in `client::completion`
   |
   = help: consider importing one of these items instead:
           crate::completion::Chat
           crate::domain::Capability::Chat
           crate::domain::UseCase::Chat
           crate::domain::chat::commands::ImportType::Chat
           crate::domain::chat::realtime::RealtimeMessageType::Chat
           crate::domain::chat::templates::TemplateCategory::Chat
           crate::message::MessageType::Chat
           fluent_ai_domain::Capability::Chat
           fluent_ai_domain::UseCase::Chat
           fluent_ai_domain::chat::commands::ImportType::Chat
           fluent_ai_domain::chat::realtime::RealtimeMessageType::Chat
           fluent_ai_domain::chat::templates::TemplateCategory::Chat
           fluent_ai_domain::message::MessageType::Chat

error[E0432]: unresolved import `crossbeam`
  --> packages/fluent-ai/src/client/builder.rs:17:5
   |
17 | use crossbeam::{
   |     ^^^^^^^^^ use of unresolved module or unlinked crate `crossbeam`
   |
help: there is a crate or module with a similar name
   |
17 - use crossbeam::{
17 + use crossterm::{
   |

error[E0432]: unresolved imports `crate::client::completion::CompletionClientDyn`, `crate::client::completion::CompletionModelHandle`
  --> packages/fluent-ai/src/client/builder.rs:25:22
   |
25 |         completion::{CompletionClientDyn, CompletionModelHandle},
   |                      ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^ no `CompletionModelHandle` in `client::completion`
   |                      |
   |                      no `CompletionClientDyn` in `client::completion`
   |
help: a similar name exists in the module
   |
25 -         completion::{CompletionClientDyn, CompletionModelHandle},
25 +         completion::{CompletionClient, CompletionModelHandle},
   |
help: a similar name exists in the module
   |
25 -         completion::{CompletionClientDyn, CompletionModelHandle},
25 +         completion::{CompletionClientDyn, CompletionModel},
   |

error[E0432]: unresolved import `completion::AsCompletion`
  --> packages/fluent-ai/src/client/mod.rs:24:22
   |
24 | pub use completion::{AsCompletion, *};
   |                      ^^^^^^^^^^^^ no `AsCompletion` in `client::completion`

error[E0432]: unresolved import `dashmap`
  --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:14:5
   |
14 | use dashmap::DashMap;
   |     ^^^^^^^ use of unresolved module or unlinked crate `dashmap`
   |
   = help: if you wanted to use a crate named `dashmap`, use `cargo add dashmap` to add it to your `Cargo.toml`

error[E0432]: unresolved import `candle_core`
 --> packages/fluent-ai/src/embedding/image.rs:6:5
  |
6 | use candle_core::{DType, Device, Tensor};
  |     ^^^^^^^^^^^ use of unresolved module or unlinked crate `candle_core`
  |
  = help: if you wanted to use a crate named `candle_core`, use `cargo add candle_core` to add it to your `Cargo.toml`

error[E0432]: unresolved import `candle_nn`
 --> packages/fluent-ai/src/embedding/image.rs:7:5
  |
7 | use candle_nn::VarBuilder;
  |     ^^^^^^^^^ use of unresolved module or unlinked crate `candle_nn`
  |
  = help: if you wanted to use a crate named `candle_nn`, use `cargo add candle_nn` to add it to your `Cargo.toml`

error[E0432]: unresolved import `dashmap`
  --> packages/fluent-ai/src/embedding/metrics/performance_monitor.rs:20:5
   |
20 | use dashmap::DashMap;
   |     ^^^^^^^ use of unresolved module or unlinked crate `dashmap`
   |
   = help: if you wanted to use a crate named `dashmap`, use `cargo add dashmap` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_memory`
  --> packages/fluent-ai/src/embedding/metrics/quality_analyzer.rs:20:5
   |
20 | use fluent_ai_memory::cognitive::quantum::router::{QuantumMetrics, QuantumRouter};
   |     ^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_memory`
   |
help: there is a crate or module with a similar name
   |
20 - use fluent_ai_memory::cognitive::quantum::router::{QuantumMetrics, QuantumRouter};
20 + use fluent_ai_domain::cognitive::quantum::router::{QuantumMetrics, QuantumRouter};
   |

error[E0432]: unresolved import `dashmap`
  --> packages/fluent-ai/src/embedding/metrics/quality_analyzer.rs:18:5
   |
18 | use dashmap::DashMap;
   |     ^^^^^^^ use of unresolved module or unlinked crate `dashmap`
   |
   = help: if you wanted to use a crate named `dashmap`, use `cargo add dashmap` to add it to your `Cargo.toml`

error[E0432]: unresolved import `crossbeam_skiplist`
 --> packages/fluent-ai/src/embedding/providers.rs:9:5
  |
9 | use crossbeam_skiplist::SkipMap;
  |     ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `crossbeam_skiplist`
  |
help: there is a crate or module with a similar name
  |
9 - use crossbeam_skiplist::SkipMap;
9 + use crossbeam_utils::SkipMap;
  |

error[E0432]: unresolved import `dashmap`
  --> packages/fluent-ai/src/embedding/resilience/circuit_breaker.rs:19:5
   |
19 | use dashmap::DashMap;
   |     ^^^^^^^ use of unresolved module or unlinked crate `dashmap`
   |
   = help: if you wanted to use a crate named `dashmap`, use `cargo add dashmap` to add it to your `Cargo.toml`

error[E0432]: unresolved imports `crate::builders::AudioBuilder`, `crate::builders::AudioBuilderWithHandler`, `crate::builders::ImageBuilder`, `crate::builders::ImageBuilderWithHandler`, `crate::builders::McpClientBuilder`, `crate::builders::McpToolBuilder`, `crate::builders::McpToolImpl`, `crate::builders::PromptBuilder`, `crate::builders::SecureMcpToolBuilder`, `crate::builders::VectorQueryBuilder`, `crate::builders::VectorStoreIndexExt`, `crate::builders::WorkflowBuilder`
  --> packages/fluent-ai/src/lib.rs:81:86
   |
81 |     AgentRoleBuilder, AgentRoleBuilderWithChunkHandler, AgentRoleBuilderWithHandler, AudioBuilder,
   |                                                                                      ^^^^^^^^^^^^ no `AudioBuilder` in `builders`
82 |     AudioBuilderWithHandler, ConversationBuilder, ImageBuilder, ImageBuilderWithHandler,
   |     ^^^^^^^^^^^^^^^^^^^^^^^                       ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^ no `ImageBuilderWithHandler` in `builders`
   |     |                                             |
   |     |                                             no `ImageBuilder` in `builders`
   |     no `AudioBuilderWithHandler` in `builders`
83 |     McpClientBuilder, McpServerBuilder, McpToolBuilder, McpToolImpl, ModelInfoBuilder,
   |     ^^^^^^^^^^^^^^^^                    ^^^^^^^^^^^^^^  ^^^^^^^^^^^ no `McpToolImpl` in `builders`
   |     |                                   |
   |     |                                   no `McpToolBuilder` in `builders`
   |     no `McpClientBuilder` in `builders`
84 |     PromptBuilder, SecureMcpToolBuilder, Stdio, VectorQueryBuilder, VectorStoreIndexExt,
   |     ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^         ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^
   |     |              |                            |
   |     |              |                            no `VectorQueryBuilder` in `builders`
   |     |              no `SecureMcpToolBuilder` in `builders`
   |     no `PromptBuilder` in `builders`
85 |     WorkflowBuilder};
   |     ^^^^^^^^^^^^^^^
   |
   = help: consider importing this struct through its public re-export instead:
           crate::tools::McpToolImpl
help: a similar name exists in the module
   |
81 -     AgentRoleBuilder, AgentRoleBuilderWithChunkHandler, AgentRoleBuilderWithHandler, AudioBuilder,
81 +     AgentRoleBuilder, AgentRoleBuilderWithChunkHandler, AgentRoleBuilderWithHandler, AgentBuilder,
   |
help: a similar name exists in the module
   |
82 -     AudioBuilderWithHandler, ConversationBuilder, ImageBuilder, ImageBuilderWithHandler,
82 +     AgentRoleBuilderWithHandler, ConversationBuilder, ImageBuilder, ImageBuilderWithHandler,
   |

error: cannot find macro `join` in this scope
  --> packages/fluent-ai/src/workflow/parallel.rs:46:9
   |
46 |         join!(self.left.call(input.clone()), self.right.call(input))
   |         ^^^^
   |
help: consider importing one of these macros
   |
16 + use std::future::join;
   |
16 + use tokio::join;
   |

error: cannot find macro `try_join` in this scope
  --> packages/fluent-ai/src/workflow/parallel.rs:65:9
   |
65 |         try_join!(
   |         ^^^^^^^^
   |
help: consider importing this macro
   |
16 + use tokio::try_join;
   |

error: cannot find macro `try_join` in this scope
   --> packages/fluent-ai/src/workflow/try_flow.rs:341:9
    |
341 |         try_join!(
    |         ^^^^^^^^
    |
help: consider importing this macro
    |
9   + use tokio::try_join;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_memory`
  --> packages/fluent-ai/src/memory/library.rs:92:20
   |
92 |             cache: fluent_ai_memory::utils::config::CacheConfig {
   |                    ^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_memory`
   |
help: there is a crate or module with a similar name
   |
92 -             cache: fluent_ai_memory::utils::config::CacheConfig {
92 +             cache: fluent_ai_domain::utils::config::CacheConfig {
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
  --> packages/fluent-ai/src/memory/library.rs:96:29
   |
96 |             provider_model: fluent_ai_provider::completion_provider::ModelConfig {
   |                             ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
   |
   = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_memory`
   --> packages/fluent-ai/src/memory/library.rs:104:22
    |
104 |             logging: fluent_ai_memory::utils::config::LoggingConfig {
    |                      ^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_memory`
    |
help: there is a crate or module with a similar name
    |
104 -             logging: fluent_ai_memory::utils::config::LoggingConfig {
104 +             logging: fluent_ai_domain::utils::config::LoggingConfig {
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/memory/library.rs:256:9
    |
256 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/memory/library.rs:270:9
    |
270 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/memory/library.rs:284:9
    |
284 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/memory/library.rs:298:9
    |
298 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
  --> packages/fluent-ai/src/memory/mod.rs:99:9
   |
99 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
   |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
   |
   = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/memory/mod.rs:109:9
    |
109 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/memory/mod.rs:119:9
    |
119 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/memory/mod.rs:129:9
    |
129 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures`
   --> packages/fluent-ai/src/memory/mod.rs:135:18
    |
135 |         Box::new(futures::stream::empty())
    |                  ^^^^^^^ use of unresolved module or unlinked crate `futures`
    |
    = help: if you wanted to use a crate named `futures`, use `cargo add futures` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures`
   --> packages/fluent-ai/src/memory/mod.rs:141:18
    |
141 |         Box::new(futures::stream::empty())
    |                  ^^^^^^^ use of unresolved module or unlinked crate `futures`
    |
    = help: if you wanted to use a crate named `futures`, use `cargo add futures` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures`
   --> packages/fluent-ai/src/memory/mod.rs:148:18
    |
148 |         Box::new(futures::stream::empty())
    |                  ^^^^^^^ use of unresolved module or unlinked crate `futures`
    |
    = help: if you wanted to use a crate named `futures`, use `cargo add futures` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/middleware/caching.rs:376:9
    |
376 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/middleware/caching.rs:398:9
    |
398 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/middleware/performance.rs:120:9
    |
120 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/middleware/performance.rs:144:9
    |
144 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/middleware/security.rs:154:9
    |
154 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/middleware/security.rs:170:9
    |
170 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures`
   --> packages/fluent-ai/src/workflow/prompt_enhancement.rs:456:23
    |
456 |         let results = futures::future::join_all(generation_futures).await;
    |                       ^^^^^^^ use of unresolved module or unlinked crate `futures`
    |
    = help: if you wanted to use a crate named `futures`, use `cargo add futures` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures`
   --> packages/fluent-ai/src/workflow/prompt_enhancement.rs:506:23
    |
506 |         let results = futures::future::join_all(review_futures).await;
    |                       ^^^^^^^ use of unresolved module or unlinked crate `futures`
    |
    = help: if you wanted to use a crate named `futures`, use `cargo add futures` to add it to your `Cargo.toml`

error[E0432]: unresolved import `futures_util`
  --> packages/memory/src/api/handlers.rs:11:5
   |
11 | use futures_util::StreamExt;
   |     ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
   |
   = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`

error[E0432]: unresolved imports `fluent_ai_domain::completion::CompletionError`, `fluent_ai_domain::completion::CompletionProvider`
  --> packages/memory/src/cognitive/committee/committee_evaluators.rs:16:18
   |
16 |     completion::{CompletionError, CompletionProvider}};
   |                  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^ no `CompletionProvider` in `completion`
   |                  |
   |                  no `CompletionError` in `completion`
   |
   = help: consider importing this variant instead:
           fluent_ai_domain::context::ExtractionError::CompletionError
   = help: consider importing one of these items instead:
           crate::Error::CompletionProvider
           crate::utils::config::CompletionProvider
help: a similar name exists in the module
   |
16 |     completion::{CompletionCoreError, CompletionProvider}};
   |                            ++++
help: a similar name exists in the module
   |
16 -     completion::{CompletionError, CompletionProvider}};
16 +     completion::{CompletionError, CompletionModel}};
   |

error[E0432]: unresolved imports `cyrup_sugars::CompletionResponse`, `cyrup_sugars::ResponseMetadata`, `cyrup_sugars::TokenUsage`
  --> packages/memory/src/cognitive/common/models.rs:10:20
   |
10 | use cyrup_sugars::{CompletionResponse, ResponseMetadata, TokenUsage};
   |                    ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^ no `TokenUsage` in the root
   |                    |                   |
   |                    |                   no `ResponseMetadata` in the root
   |                    no `CompletionResponse` in the root
   |
   = help: consider importing one of these structs instead:
           fluent_ai_domain::completion::CompletionResponse
           fluent_ai_domain::http::CompletionResponse
   = help: consider importing this trait instead:
           fluent_ai_domain::embedding::TokenUsage

error[E0432]: unresolved imports `fluent_ai_domain::completion::CompletionProvider`, `fluent_ai_domain::model::ModelConfig`
  --> packages/memory/src/cognitive/common/models.rs:13:39
   |
13 | use fluent_ai_domain::{chat::Message, completion::CompletionProvider, model::ModelConfig};
   |                                       ^^^^^^^^^^^^------------------  ^^^^^^^^^^^^^^^^^^ no `ModelConfig` in `model`
   |                                       |           |
   |                                       |           help: a similar name exists in the module: `CompletionModel`
   |                                       no `CompletionProvider` in `completion`
   |
   = help: consider importing one of these items instead:
           crate::Error::CompletionProvider
           crate::utils::config::CompletionProvider
   = help: consider importing this struct instead:
           fluent_ai_domain::chat::config::ModelConfig

error[E0432]: unresolved import `fluent_ai_simd::compute_softmax`
  --> packages/memory/src/cognitive/attention.rs:16:22
   |
16 | use fluent_ai_simd::{compute_softmax, smart_cosine_similarity};
   |                      ^^^^^^^^^^^^^^^ no `compute_softmax` in the root

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
  --> packages/memory/src/cognitive/committee/committee_evaluators.rs:18:5
   |
18 | use fluent_ai_provider::{anthropic::AnthropicClient, openai::OpenAIClient};
   |     ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
   |
   = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0432]: unresolved imports `fluent_ai_domain::completion::CompletionProvider`, `fluent_ai_domain::model::ModelConfig`
  --> packages/memory/src/cognitive/manager.rs:18:39
   |
18 | use fluent_ai_domain::{chat::Message, completion::CompletionProvider, model::ModelConfig};
   |                                       ^^^^^^^^^^^^------------------  ^^^^^^^^^^^^^^^^^^ no `ModelConfig` in `model`
   |                                       |           |
   |                                       |           help: a similar name exists in the module: `CompletionModel`
   |                                       no `CompletionProvider` in `completion`
   |
   = help: consider importing one of these items instead:
           crate::Error::CompletionProvider
           crate::utils::config::CompletionProvider
   = help: consider importing this struct instead:
           fluent_ai_domain::chat::config::ModelConfig

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
 --> packages/memory/src/cognitive/committee/orchestrator.rs:6:5
  |
6 | use futures_util::stream::{FuturesUnordered, StreamExt};
  |     ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
  |
  = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`

error[E0432]: unresolved import `futures_util`
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:224:13
    |
224 |         use futures_util::StreamExt;
    |             ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`

error[E0432]: unresolved import `futures_util`
   --> packages/memory/src/cognitive/common/models.rs:145:13
    |
145 |         use futures_util::StreamExt;
    |             ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
  --> packages/memory/src/cognitive/manager.rs:20:5
   |
20 | use fluent_ai_provider::{anthropic::AnthropicClient, openai::OpenAIClient};
   |     ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
   |
   = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0432]: unresolved import `futures_util`
   --> packages/memory/src/cognitive/common/models.rs:173:13
    |
173 |         use futures_util::StreamExt;
    |             ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`

error[E0432]: unresolved import `futures_util`
 --> packages/memory/src/graph/graph_db.rs:7:5
  |
7 | use futures_util::Stream;
  |     ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
  |
  = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
 --> packages/memory/src/memory/ops/retrieval.rs:7:5
  |
7 | use futures_util::stream::StreamExt;
  |     ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
  |
  = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`

error[E0432]: unresolved import `futures_util`
   --> packages/memory/src/memory/ops/query.rs:152:13
    |
152 |         use futures_util::StreamExt;
    |             ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`

error: cannot find macro `json` in this scope
   --> packages/memory/src/memory/systems/episodic.rs:126:55
    |
126 |         metadata.add_attribute("version".to_string(), json!("1.0"));
    |                                                       ^^^^
    |
help: consider importing this macro
    |
7   + use serde_json::json;
    |

error[E0432]: unresolved import `fluent_ai_domain::model::info::ModelInfoBuilder`
 --> packages/provider/src/clients/anthropic/discovery.rs:9:23
  |
9 |     info::{ModelInfo, ModelInfoBuilder},
  |                       ^^^^^^^^^^^^^^^^ no `ModelInfoBuilder` in `model::info`

error[E0432]: unresolved import `fluent_ai_domain::completion::CompletionRequestBuilder`
  --> packages/provider/src/clients/xai/client.rs:17:70
   |
17 |     self, CompletionCoreError as CompletionError, CompletionRequest, CompletionRequestBuilder};
   |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^
   |                                                                      |
   |                                                                      no `CompletionRequestBuilder` in `completion`
   |                                                                      help: a similar name exists in the module: `CompletionRequestError`

error[E0432]: unresolved import `crate::completion_provider::CompletionResponse`
  --> packages/provider/src/clients/xai/completion.rs:21:51
   |
21 | use crate::completion_provider::{CompletionError, CompletionResponse as DomainCompletionResponse};
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `CompletionResponse` in `completion_provider`
   |
   = help: consider importing one of these structs instead:
           crate::clients::mistral::completion::CompletionResponse
           crate::clients::xai::completion::completion::CompletionResponse
           crate::domain::http::CompletionResponse
           fluent_ai_domain::completion::CompletionResponse
           fluent_ai_domain::http::CompletionResponse

error[E0432]: unresolved import `crate::completion_provider::ResponseMetadata`
  --> packages/provider/src/streaming/mod.rs:14:51
   |
14 | use crate::completion_provider::{CompletionError, ResponseMetadata};
   |                                                   ^^^^^^^^^^^^^^^^ no `ResponseMetadata` in `completion_provider`

error[E0432]: unresolved imports `crate::domain::CompletionChunk`, `crate::domain::FinishReason`, `crate::domain::ToolDefinition`
  --> packages/provider/src/clients/anthropic/completion.rs:17:21
   |
17 | use crate::domain::{CompletionChunk, FinishReason, Usage, ToolDefinition, Document, Message};
   |                     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^         ^^^^^^^^^^^^^^ no `ToolDefinition` in the root
   |                     |                |
   |                     |                no `FinishReason` in the root
   |                     no `CompletionChunk` in the root
   |                     help: a similar name exists in the module: `CompletionModel`
   |
   = help: consider importing one of these items instead:
           crate::domain::chunk::CompletionChunk
           crate::domain::http::CompletionChunk
           fluent_ai_domain::chunk::CompletionChunk
           fluent_ai_domain::http::CompletionChunk
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
  --> packages/provider/src/clients/huggingface/streaming.rs:53:1
   |
53 | struct CompletionChunk {
   | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
   = help: consider importing one of these enums instead:
           crate::clients::candle::FinishReason
           crate::domain::chunk::FinishReason
           crate::domain::http::FinishReason
           fluent_ai_domain::chunk::FinishReason
           fluent_ai_domain::http::FinishReason
   = help: consider importing one of these items instead:
           crate::domain::completion::ToolDefinition
           crate::domain::http::ToolDefinition
           crate::domain::tool::ToolDefinition
           fluent_ai_domain::completion::ToolDefinition
           fluent_ai_domain::http::ToolDefinition
           fluent_ai_domain::tool::ToolDefinition

error[E0432]: unresolved imports `crate::domain::CompletionChunk`, `crate::domain::FinishReason`, `crate::domain::ToolDefinition`
  --> packages/provider/src/clients/openai/completion.rs:16:21
   |
16 | use crate::domain::{CompletionChunk, FinishReason, Usage, ToolDefinition, Document, Message, AsyncTask, spawn_async};
   |                     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^         ^^^^^^^^^^^^^^ no `ToolDefinition` in the root
   |                     |                |
   |                     |                no `FinishReason` in the root
   |                     no `CompletionChunk` in the root
   |                     help: a similar name exists in the module: `CompletionModel`
   |
   = help: consider importing one of these items instead:
           crate::domain::chunk::CompletionChunk
           crate::domain::http::CompletionChunk
           fluent_ai_domain::chunk::CompletionChunk
           fluent_ai_domain::http::CompletionChunk
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
  --> packages/provider/src/clients/huggingface/streaming.rs:53:1
   |
53 | struct CompletionChunk {
   | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
   = help: consider importing one of these enums instead:
           crate::clients::candle::FinishReason
           crate::domain::chunk::FinishReason
           crate::domain::http::FinishReason
           fluent_ai_domain::chunk::FinishReason
           fluent_ai_domain::http::FinishReason
   = help: consider importing one of these items instead:
           crate::domain::completion::ToolDefinition
           crate::domain::http::ToolDefinition
           crate::domain::tool::ToolDefinition
           fluent_ai_domain::completion::ToolDefinition
           fluent_ai_domain::http::ToolDefinition
           fluent_ai_domain::tool::ToolDefinition

error[E0365]: `CompletionCoreError` is private, and cannot be re-exported
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ re-export of private `CompletionCoreError`
   |
   = note: consider declaring type or module `CompletionCoreError` with `pub`

error[E0432]: unresolved import `crate::domain::ToolFunction`
  --> packages/provider/src/clients/openai/messages.rs:13:72
   |
13 |     Message as DomainMessage, MessageRole, ToolCall as DomainToolCall, ToolFunction};
   |                                                                        ^^^^^^^^^^^^ no `ToolFunction` in the root

error[E0407]: method `name` is not a member of trait `Agent`
  --> packages/fluent-ai/src/engine/fluent_engine.rs:82:5
   |
82 | /     fn name(&self) -> &str {
83 | |         self.role.name()
84 | |     }
   | |_____^ not a member of trait `Agent`

error[E0432]: unresolved imports `super::types::AnthropicChatRequest`, `super::types::AnthropicStreamingChoice`, `super::types::AnthropicStreamingChunk`, `super::types::AnthropicStreamingDelta`, `super::types::AnthropicThinkingConfig`, `super::types::AnthropicTool`, `super::types::AnthropicToolResult`, `super::types::AnthropicToolUse`
  --> packages/provider/src/clients/anthropic/completion.rs:23:28
   |
23 |     AnthropicCacheControl, AnthropicChatRequest, AnthropicContent, AnthropicContentBlock,
   |                            ^^^^^^^^^^^^^^^^^^^^ no `AnthropicChatRequest` in `clients::anthropic::types`
24 |     AnthropicMessage, AnthropicStreamingChoice, AnthropicStreamingChunk,
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^ no `AnthropicStreamingChunk` in `clients::anthropic::types`
   |                       |
   |                       no `AnthropicStreamingChoice` in `clients::anthropic::types`
25 |     AnthropicStreamingDelta, AnthropicSystemMessage, AnthropicThinkingConfig, AnthropicTool,
   |     ^^^^^^^^^^^^^^^^^^^^^^^                          ^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^ no `AnthropicTool` in `clients::anthropic::types`
   |     |                                                |
   |     |                                                no `AnthropicThinkingConfig` in `clients::anthropic::types`
   |     no `AnthropicStreamingDelta` in `clients::anthropic::types`
26 |     AnthropicToolResult, AnthropicToolUse, AnthropicUsage
   |     ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^ no `AnthropicToolUse` in `clients::anthropic::types`
   |     |
   |     no `AnthropicToolResult` in `clients::anthropic::types`
   |
help: a similar name exists in the module
   |
24 -     AnthropicMessage, AnthropicStreamingChoice, AnthropicStreamingChunk,
24 +     AnthropicMessage, AnthropicStreamChunk, AnthropicStreamingChunk,
   |
help: a similar name exists in the module
   |
24 -     AnthropicMessage, AnthropicStreamingChoice, AnthropicStreamingChunk,
24 +     AnthropicMessage, AnthropicStreamingChoice, AnthropicStreamChunk,
   |

error[E0432]: unresolved import `crate::discovery`
  --> packages/provider/src/clients/anthropic/discovery.rs:15:12
   |
15 | use crate::discovery::{DiscoveryError, DiscoveryResult, ProviderModelDiscovery};
   |            ^^^^^^^^^
   |            |
   |            unresolved import
   |            help: a similar path exists: `clients::anthropic::discovery`

error[E0432]: unresolved import `super::completion::AnthropicCompletionRequest`
  --> packages/provider/src/clients/anthropic/requests.rs:12:5
   |
12 | use super::completion::AnthropicCompletionRequest;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `AnthropicCompletionRequest` in `clients::anthropic::completion`
   |
help: a similar name exists in the module
   |
12 - use super::completion::AnthropicCompletionRequest;
12 + use super::completion::AnthropicCompletionBuilder;
   |
help: consider importing this struct through its public re-export instead
   |
12 - use super::completion::AnthropicCompletionRequest;
12 + use crate::clients::AnthropicCompletionRequest;
   |

error[E0432]: unresolved imports `function_calling::ToolRegistry`, `function_calling::ToolWithDeps`, `function_calling::ToolWithInvocation`, `function_calling::ToolWithRequestSchema`, `function_calling::ToolWithSchemas`, `function_calling::TypedTool`, `function_calling::TypedToolStorage`, `function_calling::TypedToolTrait`
  --> packages/provider/src/clients/anthropic/tools/mod.rs:32:17
   |
32 |     ToolOutput, ToolRegistry, ToolResult, ToolWithDeps, ToolWithInvocation, ToolWithRequestSchema,
   |                 ^^^^^^^^^^^^              ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^ no `ToolWithRequestSchema` in `clients::anthropic::tools::function_calling`
   |                 |                         |             |
   |                 |                         |             no `ToolWithInvocation` in `clients::anthropic::tools::function_calling`
   |                 |                         no `ToolWithDeps` in `clients::anthropic::tools::function_calling`
   |                 no `ToolRegistry` in `clients::anthropic::tools::function_calling`
33 |     ToolWithSchemas, TypedTool, TypedToolStorage, TypedToolTrait};
   |     ^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^ no `TypedToolTrait` in `clients::anthropic::tools::function_calling`
   |     |                |          |
   |     |                |          no `TypedToolStorage` in `clients::anthropic::tools::function_calling`
   |     |                no `TypedTool` in `clients::anthropic::tools::function_calling`
   |     no `ToolWithSchemas` in `clients::anthropic::tools::function_calling`
   |
help: a similar name exists in the module
   |
32 -     ToolOutput, ToolRegistry, ToolResult, ToolWithDeps, ToolWithInvocation, ToolWithRequestSchema,
32 +     ToolOutput, ToolRegistry, ToolResult, ToolWithDeps, WithInvocation, ToolWithRequestSchema,
   |
help: a similar name exists in the module
   |
32 -     ToolOutput, ToolRegistry, ToolResult, ToolWithDeps, ToolWithInvocation, ToolWithRequestSchema,
32 +     ToolOutput, ToolRegistry, ToolResult, ToolWithDeps, ToolWithInvocation, WithRequestSchema,
   |
help: a similar name exists in the module
   |
33 -     ToolWithSchemas, TypedTool, TypedToolStorage, TypedToolTrait};
33 +     ToolWithSchemas, NamedTool, TypedToolStorage, TypedToolTrait};
   |
help: a similar name exists in the module
   |
33 -     ToolWithSchemas, TypedTool, TypedToolStorage, TypedToolTrait};
33 +     ToolWithSchemas, TypedTool, ToolStorage, TypedToolTrait};
   |

error[E0432]: unresolved imports `super::models::CandleDevice`, `super::models::CandleModelInfo`
  --> packages/provider/src/clients/candle/client.rs:25:21
   |
25 | use super::models::{CandleDevice, CandleModel, CandleModelInfo};
   |                     ^^^^^^^^^^^^               ^^^^^^^^^^^^^^^
   |                     |                          |
   |                     |                          no `CandleModelInfo` in `clients::candle::models`
   |                     |                          help: a similar name exists in the module: `CandleModel`
   |                     no `CandleDevice` in `clients::candle::models`

error[E0432]: unresolved import `super::models::CandleDevice`
  --> packages/provider/src/clients/candle/device_manager.rs:16:5
   |
16 | use super::models::CandleDevice;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `CandleDevice` in `clients::candle::models`

error[E0432]: unresolved import `super::models::CandleDevice`
  --> packages/provider/src/clients/candle/error.rs:12:21
   |
12 | use super::models::{CandleDevice, CandleModel};
   |                     ^^^^^^^^^^^^ no `CandleDevice` in `clients::candle::models`

error[E0432]: unresolved import `super::models::CandleDevice`
  --> packages/provider/src/clients/candle/model_repo.rs:20:21
   |
20 | use super::models::{CandleDevice, CandleModel};
   |                     ^^^^^^^^^^^^ no `CandleDevice` in `clients::candle::models`

error[E0432]: unresolved import `models::CandleModelInfo`
  --> packages/provider/src/clients/candle/mod.rs:29:31
   |
29 | pub use models::{CandleModel, CandleModelInfo};
   |                               ^^^^^^^^^^^^^^^
   |                               |
   |                               no `CandleModelInfo` in `clients::candle::models`
   |                               help: a similar name exists in the module: `CandleModel`

error[E0432]: unresolved import `super::completion::CompletionModel`
 --> packages/provider/src/clients/huggingface/streaming.rs:8:5
  |
8 | use super::completion::CompletionModel;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `CompletionModel` in `clients::huggingface::completion`
  |
help: a similar name exists in the module
  |
8 - use super::completion::CompletionModel;
8 + use super::completion::CompletionChunk;
  |
help: consider importing one of these items instead
  |
8 - use super::completion::CompletionModel;
8 + use crate::CompletionModel;
  |
8 - use super::completion::CompletionModel;
8 + use crate::clients::mistral::CompletionModel;
  |
8 - use super::completion::CompletionModel;
8 + use crate::clients::xai::CompletionModel;
  |
8 - use super::completion::CompletionModel;
8 + use fluent_ai_domain::CompletionModel;
  |

error[E0432]: unresolved import `super::completion::ApiResponse`
 --> packages/provider/src/clients/huggingface/transcription.rs:7:5
  |
7 | use super::completion::ApiResponse;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `ApiResponse` in `clients::huggingface::completion`
  |
help: consider importing one of these items instead
  |
7 - use super::completion::ApiResponse;
7 + use crate::clients::anthropic::ApiResponse;
  |
7 - use super::completion::ApiResponse;
7 + use crate::clients::together::client::together_ai_api_types::ApiResponse;
  |

error[E0432]: unresolved imports `completion::GEMMA_2`, `completion::META_LLAMA_3_1`, `completion::PHI_4`, `completion::QWEN_QVQ_PREVIEW`, `completion::QWEN2_5`, `completion::QWEN2_5_CODER`, `completion::QWEN2_VL`, `completion::SMALLTHINKER_PREVIEW`, `completion::available_models`
  --> packages/provider/src/clients/huggingface/mod.rs:30:5
   |
30 |     GEMMA_2, HuggingFaceChoice, HuggingFaceCompletionBuilder, HuggingFaceCompletionRequest,
   |     ^^^^^^^ no `GEMMA_2` in `clients::huggingface::completion`
...
33 |     META_LLAMA_3_1, PHI_4, QWEN_QVQ_PREVIEW, QWEN2_5, QWEN2_5_CODER, QWEN2_VL,
   |     ^^^^^^^^^^^^^^  ^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^ no `QWEN2_VL` in `clients::huggingface::completion`
   |     |               |      |                 |        |
   |     |               |      |                 |        no `QWEN2_5_CODER` in `clients::huggingface::completion`
   |     |               |      |                 no `QWEN2_5` in `clients::huggingface::completion`
   |     |               |      no `QWEN_QVQ_PREVIEW` in `clients::huggingface::completion`
   |     |               no `PHI_4` in `clients::huggingface::completion`
   |     no `META_LLAMA_3_1` in `clients::huggingface::completion`
34 |     SMALLTHINKER_PREVIEW, available_models, completion_builder};
   |     ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^ no `available_models` in `clients::huggingface::completion`
   |     |
   |     no `SMALLTHINKER_PREVIEW` in `clients::huggingface::completion`

error[E0432]: unresolved imports `super::completion::CODESTRAL`, `super::completion::CODESTRAL_MAMBA`, `super::completion::MINISTRAL_3B`, `super::completion::MINISTRAL_8B`, `super::completion::MISTRAL_LARGE`, `super::completion::MISTRAL_NEMO`, `super::completion::MISTRAL_SABA`, `super::completion::MISTRAL_SMALL`, `super::completion::PIXTRAL_LARGE`, `super::completion::PIXTRAL_SMALL`
  --> packages/provider/src/clients/mistral/client.rs:16:5
   |
16 |     CODESTRAL, CODESTRAL_MAMBA, MINISTRAL_3B, MINISTRAL_8B, MISTRAL_LARGE, MISTRAL_NEMO,
   |     ^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^^ no `MISTRAL_NEMO` in `clients::mistral::completion`
   |     |          |                |             |             |
   |     |          |                |             |             no `MISTRAL_LARGE` in `clients::mistral::completion`
   |     |          |                |             no `MINISTRAL_8B` in `clients::mistral::completion`
   |     |          |                no `MINISTRAL_3B` in `clients::mistral::completion`
   |     |          no `CODESTRAL_MAMBA` in `clients::mistral::completion`
   |     no `CODESTRAL` in `clients::mistral::completion`
17 |     MISTRAL_SABA, MISTRAL_SMALL, PIXTRAL_LARGE, PIXTRAL_SMALL};
   |     ^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^^^ no `PIXTRAL_SMALL` in `clients::mistral::completion`
   |     |             |              |
   |     |             |              no `PIXTRAL_LARGE` in `clients::mistral::completion`
   |     |             no `MISTRAL_SMALL` in `clients::mistral::completion`
   |     no `MISTRAL_SABA` in `clients::mistral::completion`

error[E0432]: unresolved imports `super::client::Client`, `super::client::Usage`
  --> packages/provider/src/clients/mistral/completion.rs:11:21
   |
11 | use super::client::{Client, Usage};
   |                     ^^^^^^  ^^^^^ no `Usage` in `clients::mistral::client`
   |                     |
   |                     no `Client` in `clients::mistral::client`
   |
   = help: consider importing one of these structs instead:
           crate::builders::Client
           crate::clients::huggingface::Client
           crate::clients::together::Client
           crate::clients::xai::Client
           crate::domain::tool::mcp::Client
           fluent_ai_domain::tool::mcp::Client
           progresshub::Client
           progresshub::bandwidth::dns::Client
   = help: consider importing one of these items instead:
           crate::clients::together::embedding::Usage
           crate::domain::Usage
           crate::domain::chat::commands::StatsType::Usage
           fluent_ai_domain::Usage
           fluent_ai_domain::chat::commands::StatsType::Usage

error[E0432]: unresolved import `crate::streaming::RawStreamingChoice`
  --> packages/provider/src/clients/mistral/completion.rs:12:24
   |
12 | use crate::streaming::{RawStreamingChoice, StreamingCompletionResponse};
   |                        ^^^^^^^^^^^^^^^^^^ no `RawStreamingChoice` in `streaming`

error[E0432]: unresolved import `crate::clients::mistral::client::ApiResponse`
  --> packages/provider/src/clients/mistral/completion.rs:13:24
   |
13 | use crate::{OneOrMany, clients::mistral::client::ApiResponse, json_util};
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `ApiResponse` in `clients::mistral::client`
   |
   = help: consider importing one of these items instead:
           crate::clients::anthropic::ApiResponse
           crate::clients::together::client::together_ai_api_types::ApiResponse

error[E0432]: unresolved imports `super::client::ApiResponse`, `super::client::Client`, `super::client::Usage`
 --> packages/provider/src/clients/mistral/embedding.rs:5:21
  |
5 | use super::client::{ApiResponse, Client, Usage};
  |                     ^^^^^^^^^^^  ^^^^^^  ^^^^^ no `Usage` in `clients::mistral::client`
  |                     |            |
  |                     |            no `Client` in `clients::mistral::client`
  |                     no `ApiResponse` in `clients::mistral::client`
  |
  = help: consider importing one of these items instead:
          crate::clients::anthropic::ApiResponse
          crate::clients::together::client::together_ai_api_types::ApiResponse
  = help: consider importing one of these structs instead:
          crate::builders::Client
          crate::clients::huggingface::Client
          crate::clients::together::Client
          crate::clients::xai::Client
          crate::domain::tool::mcp::Client
          fluent_ai_domain::tool::mcp::Client
          progresshub::Client
          progresshub::bandwidth::dns::Client
  = help: consider importing one of these items instead:
          crate::clients::together::embedding::Usage
          crate::domain::Usage
          crate::domain::chat::commands::StatsType::Usage
          fluent_ai_domain::Usage
          fluent_ai_domain::chat::commands::StatsType::Usage

error[E0432]: unresolved import `client::Client`
 --> packages/provider/src/clients/mistral/mod.rs:6:18
  |
6 | pub use client::{Client, MistralCompletionBuilder};
  |                  ^^^^^^ no `Client` in `clients::mistral::client`
  |
  = help: consider importing one of these structs instead:
          crate::builders::Client
          crate::clients::huggingface::Client
          crate::clients::together::Client
          crate::clients::xai::Client
          crate::domain::tool::mcp::Client
          fluent_ai_domain::tool::mcp::Client
          progresshub::Client
          progresshub::bandwidth::dns::Client

error[E0432]: unresolved import `embedding::EmbeddingModel`
  --> packages/provider/src/clients/mistral/mod.rs:11:9
   |
11 | pub use embedding::EmbeddingModel;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ no `EmbeddingModel` in `clients::mistral::embedding`
   |
help: consider importing one of these items instead
   |
11 - pub use embedding::EmbeddingModel;
11 + pub use crate::EmbeddingModel;
   |
11 - pub use embedding::EmbeddingModel;
11 + pub use crate::domain::context::EmbeddingModel;
   |
11 | pub use crate::domain::embedding::EmbeddingModel;
   |         +++++++++++++++
11 - pub use embedding::EmbeddingModel;
11 + pub use crate::embeddings::EmbeddingModel;
   |
     and 3 other candidates

error[E0432]: unresolved import `audio::OpenAIAudioClient`
  --> packages/provider/src/clients/openai/mod.rs:31:17
   |
31 | pub use audio::{OpenAIAudioClient, TranscriptionResponse};
   |                 ^^^^^^^^^^^^^^^^^ no `OpenAIAudioClient` in `clients::openai::audio`

error[E0432]: unresolved import `client::OpenAIProvider`
  --> packages/provider/src/clients/openai/mod.rs:33:32
   |
33 | pub use client::{OpenAIClient, OpenAIProvider};
   |                                ^^^^^^^^^^^^^^ no `OpenAIProvider` in `clients::openai::client`

error[E0432]: unresolved imports `completion::CompletionResponse`, `completion::OpenAICompletionRequest`, `completion::OpenAICompletionResponse`
  --> packages/provider/src/clients/openai/mod.rs:35:5
   |
35 |     CompletionResponse, OpenAICompletionBuilder, OpenAICompletionRequest, OpenAICompletionResponse};
   |     ^^^^^^^^^^^^^^^^^^                           ^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAICompletionResponse` in `clients::openai::completion`
   |     |                                            |
   |     |                                            no `OpenAICompletionRequest` in `clients::openai::completion`
   |     no `CompletionResponse` in `clients::openai::completion`
   |
   = help: consider importing one of these structs instead:
           crate::clients::mistral::completion::CompletionResponse
           crate::domain::completion::CompletionResponse
           crate::domain::http::CompletionResponse
           fluent_ai_domain::completion::CompletionResponse
           fluent_ai_domain::http::CompletionResponse
   = help: consider importing this struct through its public re-export instead:
           crate::clients::OpenAICompletionRequest
help: a similar name exists in the module
   |
35 -     CompletionResponse, OpenAICompletionBuilder, OpenAICompletionRequest, OpenAICompletionResponse};
35 +     CompletionResponse, OpenAICompletionBuilder, OpenAICompletionBuilder, OpenAICompletionResponse};
   |
help: a similar name exists in the module
   |
35 -     CompletionResponse, OpenAICompletionBuilder, OpenAICompletionRequest, OpenAICompletionResponse};
35 +     CompletionResponse, OpenAICompletionBuilder, OpenAICompletionRequest, OpenAICompletionBuilder};
   |

error[E0432]: unresolved import `embeddings::OpenAIEmbeddingClient`
  --> packages/provider/src/clients/openai/mod.rs:37:9
   |
37 | pub use embeddings::OpenAIEmbeddingClient;
   |         ^^^^^^^^^^^^---------------------
   |         |           |
   |         |           help: a similar name exists in the module: `OpenAIEmbeddingRequest`
   |         no `OpenAIEmbeddingClient` in `clients::openai::embeddings`

error[E0432]: unresolved import `streaming::OpenAIStream`
  --> packages/provider/src/clients/openai/mod.rs:45:5
   |
45 |     OpenAIStream, StreamingChoice, StreamingCompletionResponse, StreamingMessage,
   |     ^^^^^^^^^^^^ no `OpenAIStream` in `clients::openai::streaming`

error[E0432]: unresolved import `vision::OpenAIVisionClient`
  --> packages/provider/src/clients/openai/mod.rs:47:9
   |
47 | pub use vision::OpenAIVisionClient;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ no `OpenAIVisionClient` in `clients::openai::vision`

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/openai/discovery.rs:14:12
   |
14 | use crate::model::{
   |            ^^^^^
   |            |
   |            unresolved import
   |            help: a similar path exists: `fluent_ai_domain::model`

error[E0432]: unresolved import `crate::discovery`
  --> packages/provider/src/clients/openai/discovery.rs:12:12
   |
12 | use crate::discovery::{DiscoveryError, DiscoveryResult, ProviderModelDiscovery};
   |            ^^^^^^^^^
   |            |
   |            unresolved import
   |            help: a similar path exists: `clients::anthropic::discovery`

error[E0432]: unresolved imports `super::completion::LLAMA_3_2_11B_VISION_INSTRUCT_TURBO`, `super::embedding::EmbeddingModel`
  --> packages/provider/src/clients/together/client.rs:20:35
   |
20 |     completion::{CompletionModel, LLAMA_3_2_11B_VISION_INSTRUCT_TURBO},
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `LLAMA_3_2_11B_VISION_INSTRUCT_TURBO` in `clients::together::completion`
21 |     embedding::{EmbeddingModel, M2_BERT_80M_8K_RETRIEVAL}};
   |                 ^^^^^^^^^^^^^^ no `EmbeddingModel` in `clients::together::embedding`
   |
   = help: consider importing one of these items instead:
           crate::EmbeddingModel
           crate::clients::mistral::EmbeddingModel
           crate::domain::context::EmbeddingModel
           crate::domain::embedding::EmbeddingModel
           crate::embeddings::EmbeddingModel
           candle_transformers::models::stella_en_v5::EmbeddingModel
           fluent_ai_domain::context::EmbeddingModel
           fluent_ai_domain::embedding::EmbeddingModel

error[E0403]: the name `F` is already used for a generic parameter in this item's generic parameters
   --> packages/fluent-ai/src/agent/agent.rs:213:30
    |
57  | impl<M: CompletionModel, F> Agent<M, F>
    |                          - first use of `F`
...
213 |     pub fn chat_with_closure<F>(&self, closure: F) -> Result<(), String>
    |                              ^ already used

error[E0432]: unresolved imports `crate::completion`, `crate::completion`, `crate::message`
  --> packages/provider/src/clients/together/client.rs:24:5
   |
24 |     completion::{
   |     ^^^^^^^^^^ unresolved import
25 |         self, CompletionError, CompletionRequest, CompletionRequestBuilder, Prompt, PromptError},
   |         ^^^^ no `completion` in the root
26 |     json_util,
27 |     message::Message};
   |     ^^^^^^^ unresolved import
   |
   = help: consider importing one of these modules instead:
           crate::clients::anthropic::completion
           crate::clients::huggingface::completion
           crate::clients::mistral::completion
           crate::clients::together::completion
           crate::clients::xai::completion
           crate::domain::completion
           crate::domain::http::requests::completion
           crate::domain::http::responses::completion
           fluent_ai_domain::completion
           fluent_ai_domain::http::requests::completion
           fluent_ai_domain::http::responses::completion
note: module `crate::clients::openai::completion` exists but is inaccessible
  --> packages/provider/src/clients/openai/mod.rs:55:1
   |
55 | mod completion;
   | ^^^^^^^^^^^^^^^ not accessible
help: a similar path exists
   |
24 |     fluent_ai_domain::completion::{
   |     ++++++++++++++++++
help: a similar path exists
   |
27 |     fluent_ai_domain::message::Message};
   |     ++++++++++++++++++

error[E0432]: unresolved import `crate::completion`
 --> packages/provider/src/clients/together/streaming.rs:8:5
  |
8 |     completion::{CompletionError, CompletionRequest},
  |     ^^^^^^^^^^
  |     |
  |     unresolved import
  |     help: a similar path exists: `fluent_ai_domain::completion`

error[E0407]: method `complete` is not a member of trait `CompletionModel`
   --> packages/fluent-ai/src/agent/builder.rs:104:5
    |
104 | /     fn complete(
105 | |         &self,
106 | |         prompt: &str,
107 | |     ) -> crate::domain::AsyncTask<Result<String, crate::completion::CompletionError>> {
...   |
113 | |         })
114 | |     }
    | |_____^ not a member of trait `CompletionModel`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
   --> packages/fluent-ai/src/agent/builder.rs:209:42
    |
209 |         Self::new_with_model(model_name, fluent_ai_provider::Models::Gpt4OMini)
    |                                          ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
    |
    = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0432]: unresolved import `crate::openai`
  --> packages/provider/src/clients/together/types.rs:16:16
   |
16 | pub use crate::openai::{
   |                ^^^^^^
   |                |
   |                unresolved import
   |                help: a similar path exists: `clients::openai`

error[E0432]: unresolved import `super::completion::GROK_3`
  --> packages/provider/src/clients/xai/client.rs:27:42
   |
27 | use super::completion::{CompletionModel, GROK_3};
   |                                          ^^^^^^ no `GROK_3` in `clients::xai::completion`

error[E0432]: unresolved imports `super::types::XaiChatRequest`, `super::types::XaiChatResponse`, `super::types::XaiChoice`, `super::types::XaiContent`, `super::types::XaiFunction`, `super::types::XaiMessage`, `super::types::XaiResponseMessage`, `super::types::XaiStreamingChunk`, `super::types::XaiTool`, `super::types::XaiUsage`
  --> packages/provider/src/clients/xai/completion.rs:11:5
   |
11 |     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
   |     ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^ no `XaiMessage` in `clients::xai::types`
   |     |               |                |          |           |
   |     |               |                |          |           no `XaiFunction` in `clients::xai::types`
   |     |               |                |          no `XaiContent` in `clients::xai::types`
   |     |               |                no `XaiChoice` in `clients::xai::types`
   |     |               no `XaiChatResponse` in `clients::xai::types`
   |     no `XaiChatRequest` in `clients::xai::types`
12 |     XaiResponseMessage, XaiStreamingChunk, XaiTool, XaiUsage};
   |     ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^  ^^^^^^^^ no `XaiUsage` in `clients::xai::types`
   |     |                   |                  |
   |     |                   |                  no `XaiTool` in `clients::xai::types`
   |     |                   no `XaiStreamingChunk` in `clients::xai::types`
   |     no `XaiResponseMessage` in `clients::xai::types`
   |
help: a similar name exists in the module
   |
11 -     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
11 +     XAIChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
   |
help: a similar name exists in the module
   |
11 -     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
11 +     XaiChatRequest, XAIChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
   |
help: a similar name exists in the module
   |
11 -     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
11 +     XaiChatRequest, XaiChatResponse, XAIChoice, XaiContent, XaiFunction, XaiMessage,
   |
help: a similar name exists in the module
   |
11 -     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
11 +     XaiChatRequest, XaiChatResponse, XaiChoice, XAIContent, XaiFunction, XaiMessage,
   |
help: a similar name exists in the module
   |
11 -     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
11 +     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XAIFunction, XaiMessage,
   |
help: a similar name exists in the module
   |
11 -     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XaiMessage,
11 +     XaiChatRequest, XaiChatResponse, XaiChoice, XaiContent, XaiFunction, XAIMessage,
   |
help: a similar name exists in the module
   |
12 -     XaiResponseMessage, XaiStreamingChunk, XaiTool, XaiUsage};
12 +     XAIResponseMessage, XaiStreamingChunk, XaiTool, XaiUsage};
   |
help: a similar name exists in the module
   |
12 -     XaiResponseMessage, XaiStreamingChunk, XaiTool, XaiUsage};
12 +     XaiResponseMessage, XAIStreamingChunk, XaiTool, XaiUsage};
   |
help: a similar name exists in the module
   |
12 -     XaiResponseMessage, XaiStreamingChunk, XaiTool, XaiUsage};
12 +     XaiResponseMessage, XaiStreamingChunk, XAITool, XaiUsage};
   |
help: a similar name exists in the module
   |
12 -     XaiResponseMessage, XaiStreamingChunk, XaiTool, XaiUsage};
12 +     XaiResponseMessage, XaiStreamingChunk, XaiTool, XAIUsage};
   |

error[E0432]: unresolved import `crate::openai`
  --> packages/provider/src/clients/xai/types.rs:15:16
   |
15 | pub use crate::openai::{
   |                ^^^^^^
   |                |
   |                unresolved import
   |                help: a similar path exists: `clients::openai`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
  --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:49:9
   |
49 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
   |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
   |
   = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
  --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:62:9
   |
62 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
   |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
   |
   = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
  --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:75:9
   |
75 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
   |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
   |
   = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
  --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:87:9
   |
87 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
   |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
   |
   = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0106]: missing lifetime specifier
  --> packages/provider/src/clients/anthropic/responses.rs:30:26
   |
30 |     ) -> AnthropicResult<CompletionResponse> {
   |                          ^^^^^^^^^^^^^^^^^^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime, but this is uncommon unless you're returning a borrowed value from a `const` or a `static`, or if you will only have owned values
   |
30 |     ) -> AnthropicResult<CompletionResponse<'static>> {
   |                                            +++++++++

error[E0106]: missing lifetime specifier
   --> packages/provider/src/clients/anthropic/responses.rs:292:79
    |
292 | pub fn process_completion_response(response: HttpResponse) -> AnthropicResult<CompletionResponse> {
    |                                                                               ^^^^^^^^^^^^^^^^^^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime, but this is uncommon unless you're returning a borrowed value from a `const` or a `static`, or if you will only have owned values
    |
292 | pub fn process_completion_response(response: HttpResponse) -> AnthropicResult<CompletionResponse<'static>> {
    |                                                                                                 +++++++++

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `candle_transformers`
   --> packages/fluent-ai/src/embedding/image.rs:164:13
    |
164 |     config: candle_transformers::models::clip::ClipConfig}
    |             ^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `candle_transformers`
    |
    = help: if you wanted to use a crate named `candle_transformers`, use `cargo add candle_transformers` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `candle_transformers`
   --> packages/fluent-ai/src/embedding/image.rs:174:22
    |
174 |         let config = candle_transformers::models::clip::ClipConfig::vit_base_patch32();
    |                      ^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `candle_transformers`
    |
    = help: if you wanted to use a crate named `candle_transformers`, use `cargo add candle_transformers` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `candle_transformers`
   --> packages/fluent-ai/src/embedding/image.rs:190:22
    |
190 |         let config = candle_transformers::models::clip::ClipConfig::vit_base_patch32();
    |                      ^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `candle_transformers`
    |
    = help: if you wanted to use a crate named `candle_transformers`, use `cargo add candle_transformers` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `image`
   --> packages/fluent-ai/src/embedding/image.rs:232:13
    |
232 |             image::DynamicImage::ImageRgb8(image::ImageBuffer::from_fn(
    |             ^^^^^ use of unresolved module or unlinked crate `image`
    |
help: to make use of source file packages/fluent-ai/src/embedding/image.rs, use `mod image` in this file to declare the module
   --> packages/fluent-ai/src/lib.rs:17:1
    |
17  + mod image;
    |

error[E0407]: method `with_attribute` is not a member of trait `Entity`
   --> packages/memory/src/graph/entity.rs:133:5
    |
133 |       fn with_attribute(mut self, name: &str, value: Value) -> Self {
    |       ^  -------------- help: there is an associated function with a similar name: `get_attribute`
    |  _____|
    | |
134 | |         self.attributes.insert(name.to_string(), value);
135 | |         self
136 | |     }
    | |_____^ not a member of trait `Entity`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `image`
   --> packages/fluent-ai/src/embedding/image.rs:232:44
    |
232 |             image::DynamicImage::ImageRgb8(image::ImageBuffer::from_fn(
    |                                            ^^^^^ use of unresolved module or unlinked crate `image`
    |
help: to make use of source file packages/fluent-ai/src/embedding/image.rs, use `mod image` in this file to declare the module
   --> packages/fluent-ai/src/lib.rs:17:1
    |
17  + mod image;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `image`
   --> packages/fluent-ai/src/embedding/image.rs:241:13
    |
241 |             image::DynamicImage::ImageRgb8(resized_image.to_rgb8())
    |             ^^^^^ use of unresolved module or unlinked crate `image`
    |
help: to make use of source file packages/fluent-ai/src/embedding/image.rs, use `mod image` in this file to declare the module
   --> packages/fluent-ai/src/lib.rs:17:1
    |
17  + mod image;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/embedding/providers.rs:801:9
    |
801 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: could not find `UserContent` in `message`
  --> packages/provider/src/clients/mistral/completion.rs:84:69
   |
84 |                     .partition(|content| matches!(content, message::UserContent::ToolResult(_)));
   |                                                                     ^^^^^^^^^^^ could not find `UserContent` in `message`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/embedding/providers.rs:813:9
    |
813 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: could not find `UserContent` in `message`
  --> packages/provider/src/clients/mistral/completion.rs:89:34
   |
89 |                         message::UserContent::Text(message::Text { text }) => {
   |                                  ^^^^^^^^^^^ could not find `UserContent` in `message`

error[E0726]: implicit elided lifetime not allowed here
   --> packages/provider/src/clients/mistral/completion.rs:297:38
    |
297 | impl TryFrom<CompletionResponse> for completion::CompletionResponse {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected lifetime parameter
    |
help: indicate the anonymous lifetime
    |
297 | impl TryFrom<CompletionResponse> for completion::CompletionResponse<'_> {
    |                                                                    ++++

error[E0437]: type `Response` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/mistral/completion.rs:347:5
    |
347 |     type Response = CompletionResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0437]: type `StreamingResponse` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/mistral/completion.rs:348:5
    |
348 |     type StreamingResponse = CompletionResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0407]: method `completion` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/mistral/completion.rs:351:5
    |
351 | /     async fn completion(
352 | |         &self,
353 | |         completion_request: CompletionRequest,
354 | |     ) -> Result<completion::CompletionResponse<CompletionResponse>, CompletionError> {
...   |
390 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0407]: method `stream` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/mistral/completion.rs:393:5
    |
393 | /     async fn stream(
394 | |         &self,
395 | |         request: CompletionRequest,
396 | |     ) -> Result<StreamingCompletionResponse<Self::StreamingResponse>, CompletionError> {
...   |
417 | |         Ok(StreamingCompletionResponse::stream(stream))
418 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/embedding/providers.rs:868:9
    |
868 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/embedding/providers.rs:879:9
    |
879 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/embedding/providers.rs:891:9
    |
891 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/embedding/providers.rs:906:9
    |
906 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/embedding/providers.rs:918:9
    |
918 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/embedding/providers.rs:926:9
    |
926 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `crossbeam_skiplist`
    --> packages/fluent-ai/src/embedding/providers.rs:1138:23
     |
1138 |             l1_cache: crossbeam_skiplist::SkipMap::new(),
     |                       ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `crossbeam_skiplist`
     |
help: there is a crate or module with a similar name
     |
1138 -             l1_cache: crossbeam_skiplist::SkipMap::new(),
1138 +             l1_cache: crossbeam_utils::SkipMap::new(),
     |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tokio_stream`
   --> packages/fluent-ai/src/tools/mcp_executor.rs:203:9
    |
203 |         tokio_stream::wrappers::UnboundedReceiverStream::new(rx)
    |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `tokio_stream`
    |
    = help: if you wanted to use a crate named `tokio_stream`, use `cargo add tokio_stream` to add it to your `Cargo.toml`

error[E0405]: cannot find trait `Stream` in this scope
   --> packages/fluent-ai/src/async_task/stream.rs:108:27
    |
108 | impl<T, const CAP: usize> Stream for AsyncStream<T, CAP> {
    |                           ^^^^^^ not found in this scope

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/async_task/thread_pool.rs:12:31
   |
12 |     waker_registry: Arc<Mutex<HashMap<u64, Waker>>>}
   |                               ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/fluent-ai/src/async_task/thread_pool.rs:17:49
   |
17 |             waker_registry: Arc::new(Mutex::new(HashMap::new()))}
   |                                                 ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_memory`
  --> packages/fluent-ai/src/memory/library.rs:87:27
   |
87 |             vector_store: fluent_ai_memory::utils::config::VectorStoreConfig {
   |                           ^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_memory`
   |
help: there is a crate or module with a similar name
   |
87 -             vector_store: fluent_ai_memory::utils::config::VectorStoreConfig {
87 +             vector_store: fluent_ai_domain::utils::config::VectorStoreConfig {
   |
help: consider importing one of these modules
   |
7  + use crate::domain::memory::config;
   |
7  + use fluent_ai_domain::memory::config;
   |
help: if you import `config`, refer to it directly
   |
87 -             vector_store: fluent_ai_memory::utils::config::VectorStoreConfig {
87 +             vector_store: config::VectorStoreConfig {
   |

error[E0405]: cannot find trait `Stream` in this scope
   --> packages/fluent-ai/src/memory/mod.rs:134:18
    |
134 |     ) -> Box<dyn Stream<Item = Result<MemoryNode, Error>> + Send + Unpin> {
    |                  ^^^^^^ not found in this scope

error[E0405]: cannot find trait `Stream` in this scope
   --> packages/fluent-ai/src/memory/mod.rs:140:18
    |
140 |     ) -> Box<dyn Stream<Item = Result<MemoryNode, Error>> + Send + Unpin> {
    |                  ^^^^^^ not found in this scope

error[E0405]: cannot find trait `Stream` in this scope
   --> packages/fluent-ai/src/memory/mod.rs:147:18
    |
147 |     ) -> Box<dyn Stream<Item = Result<MemoryNode, Error>> + Send + Unpin> {
    |                  ^^^^^^ not found in this scope

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/middleware/caching.rs:237:23
    |
237 |     cache: Arc<RwLock<HashMap<CacheKey, CacheEntry>>>,
    |                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/middleware/caching.rs:251:41
    |
251 |             cache: Arc::new(RwLock::new(HashMap::with_capacity(max_size))),
    |                                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0405]: cannot find trait `Stream` in this scope
  --> packages/fluent-ai/src/streaming/streaming.rs:36:8
   |
36 |     S: Stream + Send + Unpin + 'static,
   |        ^^^^^^ not found in this scope

error[E0405]: cannot find trait `Stream` in this scope
  --> packages/fluent-ai/src/streaming/streaming.rs:90:24
   |
90 | impl<R: Clone + Unpin> Stream for StreamingCompletionResponse<R> {
   |                        ^^^^^^ not found in this scope

error[E0405]: cannot find trait `Stream` in this scope
   --> packages/fluent-ai/src/streaming/streaming.rs:151:24
    |
151 | impl<R: Clone + Unpin> Stream for StreamingResultDyn<R> {
    |                        ^^^^^^ not found in this scope

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/fluent-ai/src/text_processing/types.rs:29:14
   |
29 |     content: ArrayVec<u8, MAX_TOKEN_LENGTH>,
   |              ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
6  + use arrayvec::ArrayVec;
   |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
  --> packages/fluent-ai/src/text_processing/types.rs:47:33
   |
47 |         let mut token_content = ArrayVec::new();
   |                                 ^^^^^^^^ use of undeclared type `ArrayVec`
   |
help: consider importing this struct
   |
6  + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/types.rs:126:23
    |
126 |     pub matched_text: ArrayVec<u8, MAX_PATTERN_LENGTH>,
    |                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/fluent-ai/src/text_processing/types.rs:143:32
    |
143 |         let mut text_content = ArrayVec::new();
    |                                ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
  --> packages/fluent-ai/src/text_processing/tokenizer.rs:46:26
   |
46 |                 content: ArrayVec::new(),
   |                          ^^^^^^^^ use of undeclared type `ArrayVec`
   |
help: consider importing this struct
   |
6  + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/fluent-ai/src/text_processing/tokenizer.rs:65:17
   |
65 |     ) -> Result<ArrayVec<Token, MAX_TOKENS_PER_BATCH>, TextProcessingError> {
   |                 ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
6  + use arrayvec::ArrayVec;
   |

error[E0425]: cannot find value `CPU_FEATURES` in this scope
  --> packages/fluent-ai/src/text_processing/tokenizer.rs:73:19
   |
73 |             match CPU_FEATURES.architecture {
   |                   ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `CPU_FEATURES` in this scope
  --> packages/fluent-ai/src/text_processing/tokenizer.rs:79:45
   |
79 |                 CpuArchitecture::AArch64 if CPU_FEATURES.features.neon => {
   |                                             ^^^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/tokenizer.rs:216:17
    |
216 |     ) -> Result<ArrayVec<Token, MAX_TOKENS_PER_BATCH>, TextProcessingError> {
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0407]: method `new` is not a member of trait `MemoryType`
   --> packages/memory/src/memory/systems/episodic.rs:124:5
    |
124 | /     fn new(id: &str, name: &str, description: &str) -> Self {
125 | |         let mut metadata = MemoryMetadata::with_type(MemoryTypeEnum::Episodic);
126 | |         metadata.add_attribute("version".to_string(), json!("1.0"));
...   |
136 | |             events: Arc::new(ArcSwap::new(Arc::new(SkipMap::new())))}
137 | |     }
    | |_____^ not a member of trait `MemoryType`

error[E0407]: method `from_memory` is not a member of trait `MemoryType`
   --> packages/memory/src/memory/systems/episodic.rs:139:5
    |
139 | /     fn from_memory(memory: &BaseMemory) -> Result<Self> {
140 | |         let events: SkipMap<DateTime<Utc>, EpisodicEvent> = match &memory.content {
141 | |             MemoryContent::Json(val) => serde_json::from_value(val.clone())?,
142 | |             MemoryContent::Text(s) => serde_json::from_str(s)?,
...   |
152 | |             events: Arc::new(ArcSwap::new(Arc::new(events)))})
153 | |     }
    | |_____^ not a member of trait `MemoryType`

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/fluent-ai/src/text_processing/tokenizer.rs:219:26
    |
219 |         let mut tokens = ArrayVec::new();
    |                          ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0407]: method `to_memory` is not a member of trait `MemoryType`
   --> packages/memory/src/memory/systems/episodic.rs:155:5
    |
155 | /     fn to_memory(&self) -> Result<BaseMemory> {
156 | |         let mut memory = self.base.clone();
157 | |         let events_guard = self.events.load();
158 | |         let events_map: HashMap<_, _> = events_guard
...   |
163 | |         Ok(memory)
164 | |     }
    | |_____^ not a member of trait `MemoryType`

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/tokenizer.rs:308:17
    |
308 |     ) -> Result<ArrayVec<Token, MAX_TOKENS_PER_BATCH>, TextProcessingError> {
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0407]: method `memory_type` is not a member of trait `MemoryType`
   --> packages/memory/src/memory/systems/episodic.rs:178:5
    |
178 | /     fn memory_type(&self) -> MemoryTypeEnum {
179 | |         MemoryTypeEnum::Episodic
180 | |     }
    | |_____^ not a member of trait `MemoryType`

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/tokenizer.rs:318:17
    |
318 |     ) -> Result<ArrayVec<Token, MAX_TOKENS_PER_BATCH>, TextProcessingError> {
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/fluent-ai/src/text_processing/tokenizer.rs:319:26
    |
319 |         let mut tokens = ArrayVec::new();
    |                          ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/tokenizer.rs:450:39
    |
450 | pub fn tokenize(text: &str) -> Result<ArrayVec<Token, MAX_TOKENS_PER_BATCH>, TextProcessingError> {
    |                                       ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/fluent-ai/src/text_processing/pattern_matching.rs:36:14
   |
36 |     content: ArrayVec<u8, MAX_PATTERN_LENGTH>,
   |              ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
6  + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/fluent-ai/src/text_processing/pattern_matching.rs:38:31
   |
38 |     boyer_moore_table: Option<ArrayVec<usize, 256>>,
   |                               ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
6  + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/fluent-ai/src/text_processing/pattern_matching.rs:39:23
   |
39 |     kmp_table: Option<ArrayVec<isize, MAX_PATTERN_LENGTH>>,
   |                       ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
6  + use arrayvec::ArrayVec;
   |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
  --> packages/fluent-ai/src/text_processing/pattern_matching.rs:86:27
   |
86 |         let mut content = ArrayVec::new();
   |                           ^^^^^^^^ use of undeclared type `ArrayVec`
   |
help: consider importing this struct
   |
6  + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/pattern_matching.rs:138:17
    |
138 |     ) -> Result<ArrayVec<PatternMatch, MAX_PATTERNS_PER_SET>, TextProcessingError> {
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/fluent-ai/src/text_processing/pattern_matching.rs:142:27
    |
142 |         let mut matches = ArrayVec::new();
    |                           ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/pattern_matching.rs:429:58
    |
429 |     fn build_boyer_moore_table(&self, pattern: &[u8]) -> ArrayVec<usize, 256> {
    |                                                          ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/fluent-ai/src/text_processing/pattern_matching.rs:430:25
    |
430 |         let mut table = ArrayVec::new();
    |                         ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/pattern_matching.rs:449:50
    |
449 |     fn build_kmp_table(&self, pattern: &[u8]) -> ArrayVec<isize, MAX_PATTERN_LENGTH> {
    |                                                  ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/fluent-ai/src/text_processing/pattern_matching.rs:450:25
    |
450 |         let mut table = ArrayVec::new();
    |                         ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/pattern_matching.rs:542:13
    |
542 | ) -> Result<ArrayVec<PatternMatch, MAX_PATTERNS_PER_SET>, TextProcessingError> {
    |             ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/moderation.rs:644:12
    |
644 |     crate::async_task::spawn_async(async move {
    |            ^^^^^^^^^^ unresolved import
    |
help: a struct with a similar name exists
    |
644 -     crate::async_task::spawn_async(async move {
644 +     crate::AsyncTask::spawn_async(async move {
    |
help: a similar path exists
    |
644 |     crate::fluent_ai_domain::async_task::spawn_async(async move {
    |            ++++++++++++++++++

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/text_processing/analysis.rs:18:45
   |
18 |     word_frequency_cache: std::sync::RwLock<HashMap<String, u32>>}
   |                                             ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/fluent-ai/src/text_processing/analysis.rs:33:58
   |
33 |             word_frequency_cache: std::sync::RwLock::new(HashMap::new())}
   |                                                          ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/analysis.rs:140:51
    |
140 |     fn calculate_complexity_score(&self, tokens: &ArrayVec<Token, MAX_TOKENS_PER_BATCH>) -> f32 {
    |                                                   ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/text_processing/analysis.rs:199:17
    |
199 |     ) -> Result<HashMap<String, u32>, TextProcessingError> {
    |                 ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/text_processing/analysis.rs:201:33
    |
201 |         let mut frequency_map = HashMap::new();
    |                                 ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/analysis.rs:221:17
    |
221 |     ) -> Result<ArrayVec<(String, u32), 32>, TextProcessingError> {
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/fluent-ai/src/text_processing/analysis.rs:228:26
    |
228 |         let mut result = ArrayVec::new();
    |                          ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/analysis.rs:285:17
    |
285 |     ) -> Result<ArrayVec<String, 16>, TextProcessingError> {
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/fluent-ai/src/text_processing/analysis.rs:287:27
    |
287 |         let mut phrases = ArrayVec::new();
    |                           ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/text_processing/analysis.rs:391:53
    |
391 | pub fn analyze_word_frequency(text: &str) -> Result<HashMap<String, u32>, TextProcessingError> {
    |                                                     ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/analysis.rs:400:13
    |
400 | ) -> Result<ArrayVec<(String, u32), 32>, TextProcessingError> {
    |             ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/analysis.rs:415:13
    |
415 | ) -> Result<ArrayVec<String, 16>, TextProcessingError> {
    |             ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/fluent-ai/src/text_processing/mod.rs:63:17
   |
63 |     ) -> Result<ArrayVec<Token, MAX_TOKENS_PER_BATCH>, TextProcessingError> {
   |                 ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
11 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/fluent-ai/src/text_processing/mod.rs:79:17
   |
79 |     ) -> Result<ArrayVec<PatternMatch, MAX_PATTERNS_PER_SET>, TextProcessingError> {
   |                 ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
11 + use arrayvec::ArrayVec;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/mod.rs:131:13
    |
131 |             ArrayVec<Token, MAX_TOKENS_PER_BATCH>,
    |             ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
11  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/mod.rs:132:13
    |
132 |             ArrayVec<PatternMatch, MAX_PATTERNS_PER_SET>,
    |             ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
11  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/mod.rs:164:9
    |
164 |         ArrayVec<Token, MAX_TOKENS_PER_BATCH>,
    |         ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
11  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/mod.rs:165:9
    |
165 |         ArrayVec<PatternMatch, MAX_PATTERNS_PER_SET>,
    |         ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
11  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/mod.rs:189:13
    |
189 | ) -> Result<ArrayVec<f32, 64>, TextProcessingError> {
    |             ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
11  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/fluent-ai/src/text_processing/mod.rs:194:24
    |
194 |     let mut features = ArrayVec::new();
    |                        ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
11  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/mod.rs:258:9
    |
258 |         ArrayVec<Token, MAX_TOKENS_PER_BATCH>,
    |         ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
11  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/text_processing/mod.rs:259:9
    |
259 |         ArrayVec<PatternMatch, MAX_PATTERNS_PER_SET>,
    |         ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
11  + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/engine/mod.rs:58:14
   |
58 |     engines: HashMap<String, Arc<dyn Engine>>}
   |              ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
4  + use crate::HashMap;
   |
4  + use crate::prelude::external::HashMap;
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/fluent-ai/src/engine/mod.rs:63:22
   |
63 |             engines: HashMap::new()}
   |                      ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these items
   |
4  + use crate::HashMap;
   |
4  + use crate::prelude::external::HashMap;
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0412]: cannot find type `AgentBuilder` in module `agent`
  --> packages/fluent-ai/src/fluent.rs:44:42
   |
44 |     pub fn agent(model: Model) -> agent::AgentBuilder {
   |                                          ^^^^^^^^^^^^ not found in `agent`
   |
help: consider importing one of these items
   |
1  + use crate::AgentBuilder;
   |
1  + use crate::agent::AgentBuilder;
   |
help: if you import `AgentBuilder`, refer to it directly
   |
44 -     pub fn agent(model: Model) -> agent::AgentBuilder {
44 +     pub fn agent(model: Model) -> AgentBuilder {
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `agent_role`
  --> packages/fluent-ai/src/fluent.rs:49:51
   |
49 |     pub fn agent_role(name: impl Into<String>) -> agent_role::AgentRoleBuilder {
   |                                                   ^^^^^^^^^^ use of unresolved module or unlinked crate `agent_role`
   |
   = help: if you wanted to use a crate named `agent_role`, use `cargo add agent_role` to add it to your `Cargo.toml`
help: consider importing this module through its public re-export
   |
1  + use crate::agent_role;
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `agent_role`
  --> packages/fluent-ai/src/fluent.rs:50:9
   |
50 |         agent_role::AgentRoleBuilder::new(name)
   |         ^^^^^^^^^^ use of unresolved module or unlinked crate `agent_role`
   |
   = help: if you wanted to use a crate named `agent_role`, use `cargo add agent_role` to add it to your `Cargo.toml`
help: consider importing this trait through its public re-export
   |
1  + use crate::AgentRoleBuilder;
   |
help: if you import `AgentRoleBuilder`, refer to it directly
   |
50 -         agent_role::AgentRoleBuilder::new(name)
50 +         AgentRoleBuilder::new(name)
   |

error[E0412]: cannot find type `CompletionRequestBuilder` in module `completion`
  --> packages/fluent-ai/src/fluent.rs:54:72
   |
54 |     pub fn completion(system_prompt: impl Into<String>) -> completion::CompletionRequestBuilder {
   |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^
   |
  ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/request.rs:40:1
   |
40 | pub enum CompletionRequestError {
   | ------------------------------- similarly named enum `CompletionRequestError` defined here
   |
help: an enum with a similar name exists
   |
54 -     pub fn completion(system_prompt: impl Into<String>) -> completion::CompletionRequestBuilder {
54 +     pub fn completion(system_prompt: impl Into<String>) -> completion::CompletionRequestError {
   |
help: consider importing one of these structs
   |
1  + use crate::CompletionRequestBuilder;
   |
1  + use crate::client::CompletionRequestBuilder;
   |
1  + use crate::completion::CompletionRequestBuilder;
   |
1  + use crate::completion::request_builder::CompletionRequestBuilder;
   |
help: if you import `CompletionRequestBuilder`, refer to it directly
   |
54 -     pub fn completion(system_prompt: impl Into<String>) -> completion::CompletionRequestBuilder {
54 +     pub fn completion(system_prompt: impl Into<String>) -> CompletionRequestBuilder {
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `extractor`
  --> packages/fluent-ai/src/fluent.rs:64:10
   |
64 |     ) -> extractor::ExtractorBuilder<T, M> {
   |          ^^^^^^^^^ use of unresolved module or unlinked crate `extractor`
   |
help: to make use of source file packages/fluent-ai/src/extractor/mod.rs, use `mod extractor` in this file to declare the module
  --> packages/fluent-ai/src/lib.rs:17:1
   |
17 + mod extractor;
   |
help: consider importing this module
   |
1  + use crate::extractor;
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `extractor`
  --> packages/fluent-ai/src/fluent.rs:65:9
   |
65 |         extractor::ExtractorImpl::<T>::extract_with(model)
   |         ^^^^^^^^^ use of unresolved module or unlinked crate `extractor`
   |
help: to make use of source file packages/fluent-ai/src/extractor/mod.rs, use `mod extractor` in this file to declare the module
  --> packages/fluent-ai/src/lib.rs:17:1
   |
17 + mod extractor;
   |
help: consider importing one of these structs
   |
1  + use crate::fluent::context::ExtractorImpl;
   |
1  + use fluent_ai_domain::context::ExtractorImpl;
   |
help: if you import `ExtractorImpl`, refer to it directly
   |
65 -         extractor::ExtractorImpl::<T>::extract_with(model)
65 +         ExtractorImpl::<T>::extract_with(model)
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `loader`
  --> packages/fluent-ai/src/fluent.rs:70:9
   |
70 |         loader::LoaderImpl::files_matching(pattern)
   |         ^^^^^^ use of unresolved module or unlinked crate `loader`
   |
   = help: if you wanted to use a crate named `loader`, use `cargo add loader` to add it to your `Cargo.toml`
help: consider importing one of these structs
   |
1  + use crate::fluent::context::LoaderImpl;
   |
1  + use fluent_ai_domain::context::LoaderImpl;
   |
help: if you import `LoaderImpl`, refer to it directly
   |
70 -         loader::LoaderImpl::files_matching(pattern)
70 +         LoaderImpl::files_matching(pattern)
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `conversation`
  --> packages/fluent-ai/src/fluent.rs:80:9
   |
80 |         conversation::ConversationBuilder::new()
   |         ^^^^^^^^^^^^ use of unresolved module or unlinked crate `conversation`
   |
   = help: if you wanted to use a crate named `conversation`, use `cargo add conversation` to add it to your `Cargo.toml`
help: consider importing this struct through its public re-export
   |
1  + use crate::ConversationBuilder;
   |
help: if you import `ConversationBuilder`, refer to it directly
   |
80 -         conversation::ConversationBuilder::new()
80 +         ConversationBuilder::new()
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/vector_store/in_memory.rs:84:14
   |
84 |     entries: HashMap<String, VectorEntry>,
   |              ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/vector_store/in_memory.rs:90:18
   |
90 |     id_to_index: HashMap<String, usize>,
   |                  ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/in_memory.rs:106:22
    |
106 |             entries: HashMap::with_capacity(capacity),
    |                      ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/in_memory.rs:109:26
    |
109 |             id_to_index: HashMap::with_capacity(capacity),
    |                          ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `VectorStoreError`
   --> packages/fluent-ai/src/vector_store/in_memory.rs:289:28
    |
289 |                 return Err(VectorStoreError::InsertionFailed(format!(
    |                            ^^^^^^^^^^^^^^^^ use of undeclared type `VectorStoreError`
    |
help: consider importing one of these items
    |
6   + use crate::domain::embedding::service::VectorStoreError;
    |
6   + use crate::vector_store::VectorStoreError;
    |
6   + use fluent_ai_domain::embedding::service::VectorStoreError;
    |
6   + use fluent_ai_domain::memory::VectorStoreError;
    |

error[E0433]: failed to resolve: use of undeclared type `VectorStoreError`
   --> packages/fluent-ai/src/vector_store/in_memory.rs:330:28
    |
330 |                 return Err(VectorStoreError::InsertionFailed(format!(
    |                            ^^^^^^^^^^^^^^^^ use of undeclared type `VectorStoreError`
    |
help: consider importing one of these items
    |
6   + use crate::domain::embedding::service::VectorStoreError;
    |
6   + use crate::vector_store::VectorStoreError;
    |
6   + use fluent_ai_domain::embedding::service::VectorStoreError;
    |
6   + use fluent_ai_domain::memory::VectorStoreError;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/vector_store/index.rs:111:18
    |
111 |     id_to_index: HashMap<String, usize>,
    |                  ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/index.rs:119:26
    |
119 |             id_to_index: HashMap::new(),
    |                          ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/vector_store/index.rs:230:22
    |
230 |     hash_tables: Vec<HashMap<Vec<u32>, Vec<String>>>,
    |                      ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:671:12
    |
671 |     crate::async_task::spawn_async(async move {
    |            ^^^^^^^^^^ unresolved import
    |
help: a struct with a similar name exists
    |
671 -     crate::async_task::spawn_async(async move {
671 +     crate::AsyncTask::spawn_async(async move {
    |
help: a similar path exists
    |
671 |     crate::fluent_ai_domain::async_task::spawn_async(async move {
    |            ++++++++++++++++++

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/vector_store/index.rs:234:14
    |
234 |     entries: HashMap<String, VectorEntry>,
    |              ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/index.rs:270:30
    |
270 |             hash_tables.push(HashMap::new());
    |                              ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/index.rs:276:22
    |
276 |             entries: HashMap::new(),
    |                      ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/vector_store/similarity_search.rs:35:28
   |
35 |     pub reranking_weights: HashMap<SimilarityMetric, f32>,
   |                            ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/vector_store/similarity_search.rs:39:27
   |
39 |     pub metadata_filters: HashMap<String, serde_json::Value>}
   |                           ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:714:12
    |
714 |     crate::async_task::spawn_async(async move {
    |            ^^^^^^^^^^ unresolved import
    |
help: a struct with a similar name exists
    |
714 -     crate::async_task::spawn_async(async move {
714 +     crate::AsyncTask::spawn_async(async move {
    |
help: a similar path exists
    |
714 |     crate::fluent_ai_domain::async_task::spawn_async(async move {
    |            ++++++++++++++++++

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/fluent-ai/src/vector_store/similarity_search.rs:50:32
   |
50 |             reranking_weights: HashMap::new(),
   |                                ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/fluent-ai/src/vector_store/similarity_search.rs:52:31
   |
52 |             metadata_filters: HashMap::new()}
   |                               ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:769:12
    |
769 |     crate::async_task::spawn_async(async move {
    |            ^^^^^^^^^^ unresolved import
    |
help: a struct with a similar name exists
    |
769 -     crate::async_task::spawn_async(async move {
769 +     crate::AsyncTask::spawn_async(async move {
    |
help: a similar path exists
    |
769 |     crate::fluent_ai_domain::async_task::spawn_async(async move {
    |            ++++++++++++++++++

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/vector_store/similarity_search.rs:86:24
   |
86 |     pub metric_scores: HashMap<SimilarityMetric, f32>,
   |                        ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/similarity_search.rs:209:40
    |
209 |             let mut combined_results = HashMap::new();
    |                                        ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/similarity_search.rs:308:36
    |
308 |                 let mut metadata = HashMap::new();
    |                                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/vector_store/similarity_search.rs:386:19
    |
386 |         filters: &HashMap<String, serde_json::Value>,
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/similarity_search.rs:529:41
    |
529 |                 let mut metric_scores = HashMap::new();
    |                                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/similarity_search.rs:634:35
    |
634 |                 let mut weights = HashMap::new();
    |                                   ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
621 +     use crate::HashMap;
    |
621 +     use crate::prelude::external::HashMap;
    |
621 +     use std::collections::HashMap;
    |
621 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/similarity_search.rs:640:31
    |
640 |             metadata_filters: HashMap::new()}
    |                               ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
621 +     use crate::HashMap;
    |
621 +     use crate::prelude::external::HashMap;
    |
621 +     use std::collections::HashMap;
    |
621 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/similarity_search.rs:653:32
    |
653 |             reranking_weights: HashMap::new(),
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
621 +     use crate::HashMap;
    |
621 +     use crate::prelude::external::HashMap;
    |
621 +     use std::collections::HashMap;
    |
621 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/similarity_search.rs:655:31
    |
655 |             metadata_filters: HashMap::new()}
    |                               ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
621 +     use crate::HashMap;
    |
621 +     use crate::prelude::external::HashMap;
    |
621 +     use std::collections::HashMap;
    |
621 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/similarity_search.rs:669:35
    |
669 |                 let mut weights = HashMap::new();
    |                                   ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
621 +     use crate::HashMap;
    |
621 +     use crate::prelude::external::HashMap;
    |
621 +     use std::collections::HashMap;
    |
621 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/vector_store/similarity_search.rs:675:31
    |
675 |             metadata_filters: HashMap::new()}
    |                               ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
621 +     use crate::HashMap;
    |
621 +     use crate::prelude::external::HashMap;
    |
621 +     use std::collections::HashMap;
    |
621 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `FuturesUnordered` in this scope
  --> packages/fluent-ai/src/agent/completion.rs:83:28
   |
83 |                 .collect::<FuturesUnordered<_>>()
   |                            ^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/agent/completion.rs:118:55
    |
118 | ...                   additional_props: HashMap::new()})
    |                                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
12  + use crate::HashMap;
    |
12  + use crate::prelude::external::HashMap;
    |
12  + use std::collections::HashMap;
    |
12  + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `FuturesUnordered` in this scope
   --> packages/fluent-ai/src/agent/completion.rs:124:24
    |
124 |             .collect::<FuturesUnordered<_>>()
    |                        ^^^^^^^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `FuturesUnordered` in this scope
   --> packages/fluent-ai/src/agent/completion.rs:149:24
    |
149 |             .collect::<FuturesUnordered<_>>()
    |                        ^^^^^^^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `FuturesUnordered` in this scope
   --> packages/fluent-ai/src/agent/completion.rs:159:24
    |
159 |             .collect::<FuturesUnordered<_>>()
    |                        ^^^^^^^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `FuturesUnordered` in this scope
   --> packages/fluent-ai/src/agent/completion.rs:169:24
    |
169 |             .collect::<FuturesUnordered<_>>()
    |                        ^^^^^^^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `PromptRequest` in this scope
   --> packages/fluent-ai/src/agent/completion.rs:190:28
    |
190 |     type PromptedBuilder = PromptRequest<'static, M>;
    |                            ^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct through its public re-export
    |
12  + use crate::agent::PromptRequest;
    |

error[E0422]: cannot find struct, variant or union type `PromptRequest` in this scope
   --> packages/fluent-ai/src/agent/completion.rs:195:30
    |
195 |         let prompt_request = PromptRequest {
    |                              ^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct through its public re-export
    |
12  + use crate::agent::PromptRequest;
    |

error[E0412]: cannot find type `PromptRequest` in this scope
   --> packages/fluent-ai/src/agent/completion.rs:205:28
    |
205 |     type PromptedBuilder = PromptRequest<'static, M>;
    |                            ^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct through its public re-export
    |
12  + use crate::agent::PromptRequest;
    |

error[E0433]: failed to resolve: use of undeclared type `PromptRequest`
   --> packages/fluent-ai/src/agent/completion.rs:208:12
    |
208 |         Ok(PromptRequest::new(self, prompt.to_string()))
    |            ^^^^^^^^^^^^^ use of undeclared type `PromptRequest`
    |
help: consider importing this struct through its public re-export
    |
12  + use crate::agent::PromptRequest;
    |

error[E0412]: cannot find type `AsyncStream` in this scope
   --> packages/fluent-ai/src/agent/completion.rs:218:10
    |
218 |     ) -> AsyncStream<ChatMessageChunk> {
    |          ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
12  + use crate::AsyncStream;
    |
12  + use crate::domain::AsyncStream;
    |
12  + use crate::prelude::prelude::AsyncStream;
    |
12  + use crate::runtime::AsyncStream;
    |
      and 3 other candidates

error[E0412]: cannot find type `ChatMessageChunk` in this scope
   --> packages/fluent-ai/src/agent/completion.rs:218:22
    |
218 |     ) -> AsyncStream<ChatMessageChunk> {
    |                      ^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
12  + use crate::domain::chunk::ChatMessageChunk;
    |
12  + use fluent_ai_domain::chunk::ChatMessageChunk;
    |

error[E0433]: failed to resolve: use of undeclared type `PromptRequest`
   --> packages/fluent-ai/src/agent/completion.rs:219:30
    |
219 |         let prompt_request = PromptRequest::new(self, prompt).with_history(&mut chat_history);
    |                              ^^^^^^^^^^^^^ use of undeclared type `PromptRequest`
    |
help: consider importing this struct through its public re-export
    |
12  + use crate::agent::PromptRequest;
    |

error[E0433]: failed to resolve: use of undeclared type `AsyncStream`
   --> packages/fluent-ai/src/agent/completion.rs:221:9
    |
221 |         AsyncStream::with_channel(move |sender| {
    |         ^^^^^^^^^^^ use of undeclared type `AsyncStream`
    |
help: consider importing one of these structs
    |
12  + use crate::AsyncStream;
    |
12  + use crate::domain::AsyncStream;
    |
12  + use crate::prelude::prelude::AsyncStream;
    |
12  + use crate::runtime::AsyncStream;
    |
      and 3 other candidates

error[E0422]: cannot find struct, variant or union type `ChatMessageChunk` in this scope
   --> packages/fluent-ai/src/agent/completion.rs:248:33
    |
248 |                     let chunk = ChatMessageChunk { text, done: true };
    |                                 ^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
12  + use crate::domain::chunk::ChatMessageChunk;
    |
12  + use fluent_ai_domain::chunk::ChatMessageChunk;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `runtime`
   --> packages/fluent-ai/src/agent/prompt.rs:173:9
    |
173 |         runtime::spawn_async(self.drive())
    |         ^^^^^^^ use of unresolved module or unlinked crate `runtime`
    |
    = help: if you wanted to use a crate named `runtime`, use `cargo add runtime` to add it to your `Cargo.toml`
help: consider importing this module
    |
15  + use crate::runtime;
    |

error[E0412]: cannot find type `AsyncTask` in this scope
   --> packages/fluent-ai/src/client/builder.rs:137:10
    |
137 |     ) -> AsyncTask<Result<Box<dyn CompletionModelDyn + 'a>, BuildErr>> {
    |          ^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
12  + use crate::AsyncTask;
    |
12  + use crate::domain::AsyncTask;
    |
12  + use crate::prelude::prelude::AsyncTask;
    |
12  + use crate::runtime::AsyncTask;
    |
      and 3 other candidates

error[E0412]: cannot find type `AsyncTask` in this scope
   --> packages/fluent-ai/src/client/builder.rs:155:10
    |
155 |     ) -> AsyncTask<Result<AgentBuilder<CompletionModelHandle<'a>>, BuildErr>> {
    |          ^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
12  + use crate::AsyncTask;
    |
12  + use crate::domain::AsyncTask;
    |
12  + use crate::prelude::prelude::AsyncTask;
    |
12  + use crate::runtime::AsyncTask;
    |
      and 3 other candidates

error[E0412]: cannot find type `AsyncTask` in this scope
   --> packages/fluent-ai/src/client/builder.rs:173:10
    |
173 |     ) -> AsyncTask<Result<Box<dyn EmbeddingModelDyn + 'a>, BuildErr>> {
    |          ^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
12  + use crate::AsyncTask;
    |
12  + use crate::domain::AsyncTask;
    |
12  + use crate::prelude::prelude::AsyncTask;
    |
12  + use crate::runtime::AsyncTask;
    |
      and 3 other candidates

error[E0412]: cannot find type `AsyncTask` in this scope
   --> packages/fluent-ai/src/client/builder.rs:191:10
    |
191 |     ) -> AsyncTask<Result<Box<dyn TranscriptionModelDyn + 'a>, BuildErr>> {
    |          ^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
12  + use crate::AsyncTask;
    |
12  + use crate::domain::AsyncTask;
    |
12  + use crate::prelude::prelude::AsyncTask;
    |
12  + use crate::runtime::AsyncTask;
    |
      and 3 other candidates

error[E0412]: cannot find type `AsyncTask` in this scope
   --> packages/fluent-ai/src/client/builder.rs:228:32
    |
228 |     pub fn completion(self) -> AsyncTask<Result<Box<dyn CompletionModelDyn + 'b>, BuildErr>> {
    |                                ^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
12  + use crate::AsyncTask;
    |
12  + use crate::domain::AsyncTask;
    |
12  + use crate::prelude::prelude::AsyncTask;
    |
12  + use crate::runtime::AsyncTask;
    |
      and 3 other candidates

error[E0412]: cannot find type `AsyncTask` in this scope
   --> packages/fluent-ai/src/client/builder.rs:231:27
    |
231 |     pub fn agent(self) -> AsyncTask<Result<AgentBuilder<CompletionModelHandle<'b>>, BuildErr>> {
    |                           ^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
12  + use crate::AsyncTask;
    |
12  + use crate::domain::AsyncTask;
    |
12  + use crate::prelude::prelude::AsyncTask;
    |
12  + use crate::runtime::AsyncTask;
    |
      and 3 other candidates

error[E0412]: cannot find type `AsyncTask` in this scope
   --> packages/fluent-ai/src/client/builder.rs:234:31
    |
234 |     pub fn embedding(self) -> AsyncTask<Result<Box<dyn EmbeddingModelDyn + 'b>, BuildErr>> {
    |                               ^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
12  + use crate::AsyncTask;
    |
12  + use crate::domain::AsyncTask;
    |
12  + use crate::prelude::prelude::AsyncTask;
    |
12  + use crate::runtime::AsyncTask;
    |
      and 3 other candidates

error[E0412]: cannot find type `AsyncTask` in this scope
   --> packages/fluent-ai/src/client/builder.rs:237:35
    |
237 |     pub fn transcription(self) -> AsyncTask<Result<Box<dyn TranscriptionModelDyn + 'b>, BuildErr>> {
    |                                   ^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
12  + use crate::AsyncTask;
    |
12  + use crate::domain::AsyncTask;
    |
12  + use crate::prelude::prelude::AsyncTask;
    |
12  + use crate::runtime::AsyncTask;
    |
      and 3 other candidates

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/batch.rs:269:43
    |
269 | ...                   metadata: HashMap::new()};
    |                                 ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/batch.rs:279:48
    |
279 | ...                   let mut metadata = HashMap::new();
    |                                          ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/embedding/builder.rs:73:27
   |
73 |             let mut docs: HashMap<usize, T> = HashMap::with_capacity(self.documents.len());
   |                           ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
18 + use crate::HashMap;
   |
18 + use crate::prelude::external::HashMap;
   |
18 + use std::collections::HashMap;
   |
18 + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/fluent-ai/src/embedding/builder.rs:73:47
   |
73 |             let mut docs: HashMap<usize, T> = HashMap::with_capacity(self.documents.len());
   |                                               ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these items
   |
18 + use crate::HashMap;
   |
18 + use crate::prelude::external::HashMap;
   |
18 + use std::collections::HashMap;
   |
18 + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/embedding/builder.rs:92:40
   |
92 |             let mut embeddings_by_doc: HashMap<usize, OneOrMany<Embedding>> = HashMap::new();
   |                                        ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
18 + use crate::HashMap;
   |
18 + use crate::prelude::external::HashMap;
   |
18 + use std::collections::HashMap;
   |
18 + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/fluent-ai/src/embedding/builder.rs:92:79
   |
92 |             let mut embeddings_by_doc: HashMap<usize, OneOrMany<Embedding>> = HashMap::new();
   |                                                                               ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these items
   |
18 + use crate::HashMap;
   |
18 + use crate::prelude::external::HashMap;
   |
18 + use std::collections::HashMap;
   |
18 + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:177:50
    |
177 |     pub measurement_history: Arc<DashMap<String, ArrayVec<CoherenceEvent, 1000>>>,
    |                                                  ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
8   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:258:30
    |
258 |     pub syndrome_thresholds: HashMap<String, f64>,
    |                              ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
8   + use crate::HashMap;
    |
8   + use crate::prelude::external::HashMap;
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:260:49
    |
260 |     pub correction_history: Arc<DashMap<String, ArrayVec<CorrectionEvent, 100>>>,
    |                                                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
8   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:276:26
    |
276 |     Custom { parameters: HashMap<String, f64> }}
    |                          ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
8   + use crate::HashMap;
    |
8   + use crate::prelude::external::HashMap;
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `AtomicUsize` in this scope
   --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:316:24
    |
316 |     pub current_usage: AtomicUsize,
    |                        ^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
8   + use std::sync::atomic::AtomicUsize;
    |

error[E0412]: cannot find type `AtomicUsize` in this scope
   --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:449:28
    |
449 |     pub peak_memory_usage: AtomicUsize,
    |                            ^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
8   + use std::sync::atomic::AtomicUsize;
    |

error[E0433]: failed to resolve: use of undeclared type `AtomicUsize`
   --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:575:28
    |
575 |             current_usage: AtomicUsize::new(0),
    |                            ^^^^^^^^^^^ use of undeclared type `AtomicUsize`
    |
help: consider importing this struct
    |
8   + use std::sync::atomic::AtomicUsize;
    |

error[E0433]: failed to resolve: use of undeclared type `AtomicUsize`
   --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:582:36
    |
582 |                 peak_memory_usage: AtomicUsize::new(0),
    |                                    ^^^^^^^^^^^ use of undeclared type `AtomicUsize`
    |
help: consider importing this struct
    |
8   + use std::sync::atomic::AtomicUsize;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:856:39
    |
856 |         let mut syndrome_thresholds = HashMap::new();
    |                                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
8   + use crate::HashMap;
    |
8   + use crate::prelude::external::HashMap;
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/embedding/image.rs:75:23
   |
75 |     pub model_params: HashMap<String, serde_json::Value>,
   |                       ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/fluent-ai/src/embedding/image.rs:84:27
   |
84 |             model_params: HashMap::new(),
   |                           ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/fluent-ai/src/embedding/image.rs:99:19
   |
99 |     pub metadata: HashMap<String, String>}
   |                   ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::HashMap;
   |
6  + use crate::prelude::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/embedding/image.rs:123:25
    |
123 |     pub model_metadata: HashMap<String, serde_json::Value>}
    |                         ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `image`
   --> packages/fluent-ai/src/embedding/image.rs:218:17
    |
218 |                 image::imageops::FilterType::Lanczos3,
    |                 ^^^^^ use of unresolved module or unlinked crate `image`
    |
help: to make use of source file packages/fluent-ai/src/embedding/image.rs, use `mod image` in this file to declare the module
   --> packages/fluent-ai/src/lib.rs:17:1
    |
17  + mod image;
    |
help: consider importing this enum
    |
6   + use lopdf::filters::png::FilterType;
    |
help: if you import `FilterType`, refer to it directly
    |
218 -                 image::imageops::FilterType::Lanczos3,
218 +                 FilterType::Lanczos3,
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `image`
   --> packages/fluent-ai/src/embedding/image.rs:224:17
    |
224 |                 image::imageops::FilterType::Lanczos3,
    |                 ^^^^^ use of unresolved module or unlinked crate `image`
    |
help: to make use of source file packages/fluent-ai/src/embedding/image.rs, use `mod image` in this file to declare the module
   --> packages/fluent-ai/src/lib.rs:17:1
    |
17  + mod image;
    |
help: consider importing this enum
    |
6   + use lopdf::filters::png::FilterType;
    |
help: if you import `FilterType`, refer to it directly
    |
224 -                 image::imageops::FilterType::Lanczos3,
224 +                 FilterType::Lanczos3,
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/image.rs:604:52
    |
604 | ...                   let mut metadata = HashMap::new();
    |                                          ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0106]: missing lifetime specifier
   --> packages/provider/src/clients/xai/client.rs:476:43
    |
476 |             completion::CompletionResponse<super::completion::CompletionResponse>,
    |                                           ^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'a` lifetime
    |
476 |             completion::CompletionResponse<'a, super::completion::CompletionResponse>,
    |                                            +++

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/image.rs:631:52
    |
631 | ...                   let mut metadata = HashMap::new();
    |                                          ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/image.rs:711:44
    |
711 |                         let mut metadata = HashMap::new();
    |                                            ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/image.rs:768:36
    |
768 |                 let mut metadata = HashMap::new();
    |                                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/image.rs:864:28
    |
864 |         let mut metadata = HashMap::new();
    |                            ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
822 +     use crate::HashMap;
    |
822 +     use crate::prelude::external::HashMap;
    |
822 +     use std::collections::HashMap;
    |
822 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/embedding/providers.rs:114:28
    |
114 |     pub additional_params: HashMap<String, Value>}
    |                            ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0437]: type `Response` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/xai/completion.rs:148:5
    |
148 |     type Response = XaiChatResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0437]: type `StreamingResponse` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/xai/completion.rs:149:5
    |
149 |     type StreamingResponse = StreamingCompletionResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a member of trait `completion::CompletionModel`

error[E0407]: method `completion` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/xai/completion.rs:152:5
    |
152 | /     async fn completion(
153 | |         &self,
154 | |         completion_request: fluent_ai_domain::completion::CompletionRequest,
155 | |     ) -> Result<DomainCompletionResponse<XaiChatResponse>, CompletionError> {
...   |
178 | |         })
179 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0407]: method `stream` is not a member of trait `completion::CompletionModel`
   --> packages/provider/src/clients/xai/completion.rs:182:5
    |
182 | /     async fn stream(
183 | |         &self,
184 | |         request: CompletionRequest,
185 | |     ) -> Result<crate::streaming::StreamingResponse<Self::StreamingResponse>, CompletionError> {
...   |
205 | |         ))
206 | |     }
    | |_____^ not a member of trait `completion::CompletionModel`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/providers.rs:124:32
    |
124 |             additional_params: HashMap::new()}
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/providers.rs:426:43
    |
426 | ...                   metadata: HashMap::new()};
    |                                 ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/providers.rs:440:43
    |
440 | ...                   let mut map = HashMap::new();
    |                                     ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/providers.rs:455:43
    |
455 | ...                   let mut map = HashMap::new();
    |                                     ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/fluent-ai/src/embedding/providers.rs:722:47
    |
722 | ...                   metadata: HashMap::new()};
    |                                 ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0405]: cannot find trait `CompletionProvider` in module `fluent_ai_domain::completion`
   --> packages/fluent-ai/src/embedding/providers.rs:778:75
    |
778 |     completion_provider: std::sync::Arc<dyn fluent_ai_domain::completion::CompletionProvider>,
    |                                                                           ^^^^^^^^^^^^^^^^^^ help: a trait with a similar name exists: `CompletionModel`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/core.rs:14:1
    |
14  | pub trait CompletionModel: Send + Sync + 'static {
    | ------------------------------------------------ similarly named trait `CompletionModel` defined here

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/fluent-ai/src/embedding/providers.rs:862:20
    |
862 |         metadata: &HashMap<String, Value>,
    |                    ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::HashMap;
    |
6   + use crate::prelude::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
    --> packages/fluent-ai/src/embedding/providers.rs:1231:27
     |
1231 |             let mut map = HashMap::new();
     |                           ^^^^^^^ use of undeclared type `HashMap`
     |
help: consider importing one of these items
     |
6    + use crate::HashMap;
     |
6    + use crate::prelude::external::HashMap;
     |
6    + use std::collections::HashMap;
     |
6    + use fluent_ai_domain::HashMap;
     |
       and 1 other candidate

error[E0405]: cannot find trait `CompletionProvider` in module `fluent_ai_domain::completion`
    --> packages/fluent-ai/src/embedding/providers.rs:1307:79
     |
1307 |         completion_provider: std::sync::Arc<dyn fluent_ai_domain::completion::CompletionProvider>,
     |                                                                               ^^^^^^^^^^^^^^^^^^ help: a trait with a similar name exists: `CompletionModel`
     |
    ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/core.rs:14:1
     |
14   | pub trait CompletionModel: Send + Sync + 'static {
     | ------------------------------------------------ similarly named trait `CompletionModel` defined here

error[E0425]: cannot find value `llm_provider` in this scope
    --> packages/fluent-ai/src/embedding/providers.rs:1337:13
     |
1337 |             llm_provider,
     |             ^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `HashMap`
    --> packages/fluent-ai/src/embedding/providers.rs:1808:59
     |
1808 | ...                   let mut map = HashMap::new();
     |                                     ^^^^^^^ use of undeclared type `HashMap`
     |
help: consider importing one of these items
     |
6    + use crate::HashMap;
     |
6    + use crate::prelude::external::HashMap;
     |
6    + use std::collections::HashMap;
     |
6    + use fluent_ai_domain::HashMap;
     |
       and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
    --> packages/fluent-ai/src/embedding/providers.rs:1827:55
     |
1827 | ...                   let mut map = HashMap::new();
     |                                     ^^^^^^^ use of undeclared type `HashMap`
     |
help: consider importing one of these items
     |
6    + use crate::HashMap;
     |
6    + use crate::prelude::external::HashMap;
     |
6    + use std::collections::HashMap;
     |
6    + use fluent_ai_domain::HashMap;
     |
       and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
    --> packages/fluent-ai/src/embedding/providers.rs:1842:43
     |
1842 | ...                   let mut map = HashMap::new();
     |                                     ^^^^^^^ use of undeclared type `HashMap`
     |
help: consider importing one of these items
     |
6    + use crate::HashMap;
     |
6    + use crate::prelude::external::HashMap;
     |
6    + use std::collections::HashMap;
     |
6    + use fluent_ai_domain::HashMap;
     |
       and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
    --> packages/fluent-ai/src/embedding/providers.rs:1856:43
     |
1856 | ...                   let mut map = HashMap::new();
     |                                     ^^^^^^^ use of undeclared type `HashMap`
     |
help: consider importing one of these items
     |
6    + use crate::HashMap;
     |
6    + use crate::prelude::external::HashMap;
     |
6    + use std::collections::HashMap;
     |
6    + use fluent_ai_domain::HashMap;
     |
       and 1 other candidate

error[E0404]: expected trait, found struct `Tool`
   --> packages/fluent-ai/src/extractor/mod.rs:171:9
    |
171 | impl<T> Tool for SubmitTool<T>
    |         ^^^^ not a trait
    |
help: consider importing one of these traits instead
    |
12  + use crate::domain::tool::traits::Tool;
    |
12  + use fluent_ai_domain::tool::traits::Tool;
    |

error[E0405]: cannot find trait `Stream` in this scope
  --> packages/fluent-ai/src/runtime/async_stream.rs:82:27
   |
82 | impl<T, const CAP: usize> Stream for AsyncStream<T, CAP> {
   |                           ^^^^^^ not found in this scope

error[E0425]: cannot find value `GLOBAL_EXECUTOR` in this scope
  --> packages/fluent-ai/src/runtime/async_task.rs:24:9
   |
24 |         GLOBAL_EXECUTOR.register_waker(self.rx.clone(), cx.waker().clone());
   |         ^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this static
   |
1  + use crate::async_task::thread_pool::GLOBAL_EXECUTOR;
   |

error[E0425]: cannot find value `GLOBAL_EXECUTOR` in this scope
  --> packages/fluent-ai/src/runtime/async_task.rs:46:5
   |
46 |     GLOBAL_EXECUTOR.enqueue(async move {
   |     ^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this static
   |
1  + use crate::async_task::thread_pool::GLOBAL_EXECUTOR;
   |

error[E0603]: module `ops` is private
  --> packages/fluent-ai/src/text_processing/tokenizer.rs:15:31
   |
15 | use fluent_ai_domain::memory::ops::{CpuArchitecture, CpuFeatures, SIMD_WIDTH};
   |                               ^^^ private module
   |
help: consider importing one of these enums instead:
      crate::domain::memory::CpuArchitecture
      fluent_ai_domain::memory::CpuArchitecture
  --> packages/fluent-ai/src/text_processing/tokenizer.rs:15:37
   |
15 | use fluent_ai_domain::memory::ops::{CpuArchitecture, CpuFeatures, SIMD_WIDTH};
   |                                     ^^^^^^^^^^^^^^^
note: the module `ops` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/memory/mod.rs:26:1
   |
26 | mod ops;
   | ^^^^^^^

error[E0603]: module `ops` is private
  --> packages/fluent-ai/src/text_processing/tokenizer.rs:15:31
   |
15 | use fluent_ai_domain::memory::ops::{CpuArchitecture, CpuFeatures, SIMD_WIDTH};
   |                               ^^^ private module
   |
note: the module `ops` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/memory/mod.rs:26:1
   |
26 | mod ops;
   | ^^^^^^^

warning: unused import: `collections::VecDeque`
  --> packages/fluent-ai/src/async_task/stream.rs:13:5
   |
13 |     collections::VecDeque};
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `fluent_ai_async::AsyncStream as AsyncStreamTrait`
  --> packages/fluent-ai/src/async_task/stream.rs:16:5
   |
16 | use fluent_ai_async::AsyncStream as AsyncStreamTrait;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `pdf`
  --> packages/fluent-ai/src/loaders/mod.rs:23:7
   |
23 | #[cfg(feature = "pdf")]
   |       ^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate-src`, `audio`, `bindgen_cuda`, `cudarc`, `cylo`, `default`, `half`, `hashbrown-json`, `hf-hub`, `image`, `intel-mkl-src`, `safetensors`, and `tokenizers`
   = help: consider adding `pdf` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition value: `pdf`
  --> packages/fluent-ai/src/loaders/mod.rs:26:7
   |
26 | #[cfg(feature = "pdf")]
   |       ^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate-src`, `audio`, `bindgen_cuda`, `cudarc`, `cylo`, `default`, `half`, `hashbrown-json`, `hf-hub`, `image`, `intel-mkl-src`, `safetensors`, and `tokenizers`
   = help: consider adding `pdf` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `epub`
  --> packages/fluent-ai/src/loaders/mod.rs:29:7
   |
29 | #[cfg(feature = "epub")]
   |       ^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate-src`, `audio`, `bindgen_cuda`, `cudarc`, `cylo`, `default`, `half`, `hashbrown-json`, `hf-hub`, `image`, `intel-mkl-src`, `safetensors`, and `tokenizers`
   = help: consider adding `epub` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `epub`
  --> packages/fluent-ai/src/loaders/mod.rs:32:7
   |
32 | #[cfg(feature = "epub")]
   |       ^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate-src`, `audio`, `bindgen_cuda`, `cudarc`, `cylo`, `default`, `half`, `hashbrown-json`, `hf-hub`, `image`, `intel-mkl-src`, `safetensors`, and `tokenizers`
   = help: consider adding `epub` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `macros::*`
 --> packages/fluent-ai/src/macros/mod.rs:2:9
  |
2 | pub use macros::*;
  |         ^^^^^^^^^

warning: unused import: `std::future::Future`
 --> packages/fluent-ai/src/memory/mod.rs:9:5
  |
9 | use std::future::Future;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::pin::Pin`
  --> packages/fluent-ai/src/memory/mod.rs:10:5
   |
10 | use std::pin::Pin;
   |     ^^^^^^^^^^^^^

warning: unused import: `std::time::Instant`
 --> packages/fluent-ai/src/middleware/command.rs:7:5
  |
7 | use std::time::Instant;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::RwLock`
  --> packages/fluent-ai/src/middleware/command.rs:11:5
   |
11 | use tokio::sync::RwLock;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `AtomicUsize`
 --> packages/fluent-ai/src/middleware/performance.rs:7:36
  |
7 | use std::sync::atomic::{AtomicU64, AtomicUsize, Ordering};
  |                                    ^^^^^^^^^^^

warning: unused import: `std::time::Instant`
 --> packages/fluent-ai/src/middleware/performance.rs:8:5
  |
8 | use std::time::Instant;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `future::Future`
  --> packages/fluent-ai/src/streaming/streaming.rs:11:5
   |
11 |     future::Future,
   |     ^^^^^^^^^^^^^^

warning: unused import: `info`
   --> packages/fluent-ai/src/streaming/streaming.rs:215:73
    |
215 |         use termcolor::{ColoredMessage, colored_print, colored_println, info};
    |                                                                         ^^^^

warning: unused imports: `self` and `self`
  --> packages/fluent-ai/src/workflow/agent_flow.rs:16:18
   |
16 |     completion::{self, CompletionModel, Prompt, PromptError},
   |                  ^^^^
17 |     extractor::{ExtractionError, Extractor},
18 |     vector_store::{self, VectorStoreError, VectorStoreIndex, VectorStoreIndexDyn},
   |                    ^^^^

warning: unused macro definition: `conditional`
  --> packages/fluent-ai/src/workflow/conditional.rs:11:14
   |
11 | macro_rules! conditional {
   |              ^^^^^^^^^^^
   |
   = note: `#[warn(unused_macros)]` on by default

warning: unused macro definition: `try_conditional`
  --> packages/fluent-ai/src/workflow/conditional.rs:44:14
   |
44 | macro_rules! try_conditional {
   |              ^^^^^^^^^^^^^^^

warning: unused import: `conditional::*`
 --> packages/fluent-ai/src/workflow/mod.rs:8:9
  |
8 | pub use conditional::*;
  |         ^^^^^^^^^^^^^^

warning: unused macro definition: `parallel_op`
  --> packages/fluent-ai/src/workflow/parallel.rs:76:14
   |
76 | macro_rules! parallel_op {
   |              ^^^^^^^^^^^

warning: unused macro definition: `tuple_pick`
  --> packages/fluent-ai/src/workflow/parallel.rs:86:14
   |
86 | macro_rules! tuple_pick {
   |              ^^^^^^^^^^

warning: unused macro definition: `parallel_internal`
  --> packages/fluent-ai/src/workflow/parallel.rs:93:14
   |
93 | macro_rules! parallel_internal {
   |              ^^^^^^^^^^^^^^^^^

warning: unused macro definition: `try_parallel_internal`
   --> packages/fluent-ai/src/workflow/parallel.rs:133:14
    |
133 | macro_rules! try_parallel_internal {
    |              ^^^^^^^^^^^^^^^^^^^^^

warning: unused macro definition: `ok_err_wrapper`
   --> packages/fluent-ai/src/workflow/try_flow.rs:157:14
    |
157 | macro_rules! ok_err_wrapper {
    |              ^^^^^^^^^^^^^^

warning: unused import: `std::cell::RefCell`
 --> packages/fluent-ai/src/message_processing.rs:8:5
  |
8 | use std::cell::RefCell;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `Instant`
  --> packages/fluent-ai/src/message_processing.rs:10:27
   |
10 | use std::time::{Duration, Instant};
   |                           ^^^^^^^

warning: unused import: `SegQueue`
  --> packages/fluent-ai/src/message_processing.rs:16:35
   |
16 | use crossbeam_queue::{ArrayQueue, SegQueue};
   |                                   ^^^^^^^^

warning: unused import: `MessagePriority`
  --> packages/fluent-ai/src/message_processing.rs:17:42
   |
17 | use fluent_ai_domain::message::{Message, MessagePriority, MessageType};
   |                                          ^^^^^^^^^^^^^^^

warning: unused import: `once_cell::sync::Lazy`
  --> packages/fluent-ai/src/message_processing.rs:21:5
   |
21 | use once_cell::sync::Lazy;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `AtomicU64` and `Ordering`
  --> packages/fluent-ai/src/text_processing/tokenizer.rs:11:25
   |
11 | use std::sync::atomic::{AtomicU64, Ordering};
   |                         ^^^^^^^^^  ^^^^^^^^

warning: unused import: `std::arch::aarch64::*`
 --> packages/fluent-ai/src/text_processing/pattern_matching.rs:7:5
  |
7 | use std::arch::aarch64::*;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> packages/fluent-ai/src/text_processing/pattern_matching.rs:11:5
   |
11 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unnecessary parentheses around assigned value
   --> packages/fluent-ai/src/text_processing/mod.rs:210:29
    |
210 |         let feature_value = ((i as f32 * token_count_feature * avg_word_length_feature) % 1.0);
    |                             ^                                                                ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
210 -         let feature_value = ((i as f32 * token_count_feature * avg_word_length_feature) % 1.0);
210 +         let feature_value = (i as f32 * token_count_feature * avg_word_length_feature) % 1.0;
    |

warning: unused import: `serde_json::Value`
 --> packages/fluent-ai/src/engine/fluent_engine.rs:5:5
  |
5 | use serde_json::Value;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ZeroOneOrMany`
 --> packages/fluent-ai/src/engine/fluent_engine.rs:7:5
  |
7 | use crate::ZeroOneOrMany;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AsyncTask`
 --> packages/fluent-ai/src/engine/fluent_engine.rs:8:25
  |
8 | use crate::async_task::{AsyncTask, spawn_async};
  |                         ^^^^^^^^^

warning: unused import: `crate::ZeroOneOrMany`
 --> packages/fluent-ai/src/engine/mod.rs:9:5
  |
9 | use crate::ZeroOneOrMany;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::domain::agent::Agent as DomainAgent`
  --> packages/fluent-ai/src/engine/mod.rs:10:5
   |
10 | use crate::domain::agent::Agent as DomainAgent;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `self`
  --> packages/fluent-ai/src/completion/builder.rs:20:15
   |
20 |     runtime::{self, AsyncTask},
   |               ^^^^

warning: unused import: `super::*`
  --> packages/fluent-ai/src/completion/message.rs:27:5
   |
27 | use super::*;
   |     ^^^^^^^^

warning: unused import: `Text`
  --> packages/fluent-ai/src/completion/request_builder.rs:18:28
   |
18 |         message::{Message, Text}},
   |                            ^^^^

warning: unused imports: `AsyncTask` and `CompletionRequest`
  --> packages/fluent-ai/src/agent/agent.rs:11:35
   |
11 |     completion::{CompletionModel, CompletionRequest, CompletionRequestBuilder, Document, Message},
   |                                   ^^^^^^^^^^^^^^^^^
12 |     domain::tool::ToolSet,
13 |     runtime::{AsyncStream, AsyncTask},
   |                            ^^^^^^^^^

warning: unexpected `cfg` condition value: `mcp`
  --> packages/fluent-ai/src/agent/builder.rs:31:7
   |
31 | #[cfg(feature = "mcp")]
   |       ^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate-src`, `audio`, `bindgen_cuda`, `cudarc`, `cylo`, `default`, `half`, `hashbrown-json`, `hf-hub`, `image`, `intel-mkl-src`, `safetensors`, and `tokenizers`
   = help: consider adding `mcp` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `domain::tool::ToolSet`
  --> packages/fluent-ai/src/agent/completion.rs:30:5
   |
30 |     domain::tool::ToolSet,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `runtime as rt`
  --> packages/fluent-ai/src/agent/prompt.rs:20:5
   |
20 |     runtime as rt,      //  re‑export of the zero‑alloc runtime
   |     ^^^^^^^^^^^^^

warning: unused import: `crate::completion::Chat`
   --> packages/fluent-ai/src/agent/prompt.rs:118:13
    |
118 |         use crate::completion::Chat;
    |             ^^^^^^^^^^^^^^^^^^^^^^^

warning: ambiguous glob re-exports
 --> packages/fluent-ai/src/agent/mod.rs:6:9
  |
6 | pub use agent::*;
  |         ^^^^^^^^ the name `Ready` in the type namespace is first re-exported here
7 | pub use builder::*;
  |         ---------- but the name `Ready` in the type namespace is also re-exported here
  |
  = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: ambiguous glob re-exports
 --> packages/fluent-ai/src/agent/mod.rs:6:9
  |
6 | pub use agent::*;
  |         ^^^^^^^^ the name `Ready` in the value namespace is first re-exported here
7 | pub use builder::*;
  |         ---------- but the name `Ready` in the value namespace is also re-exported here

warning: unused import: `completion::*`
 --> packages/fluent-ai/src/agent/mod.rs:8:9
  |
8 | pub use completion::*;
  |         ^^^^^^^^^^^^^

warning: unused import: `std::fmt`
 --> packages/fluent-ai/src/builders/agent_role.rs:4:5
  |
4 | use std::fmt;
  |     ^^^^^^^^

warning: unused import: `agent::Agent`
  --> packages/fluent-ai/src/builders/agent_role.rs:13:5
   |
13 |     agent::Agent,
   |     ^^^^^^^^^^^^

warning: unused imports: `MAX_CHUNK_SIZE` and `ValidationResult`
  --> packages/fluent-ai/src/builders/completion/completion_request_builder.rs:10:17
   |
10 |         types::{MAX_CHUNK_SIZE, MAX_TOKENS, TEMPERATURE_RANGE, ToolDefinition}
   |                 ^^^^^^^^^^^^^^
11 |     },
12 |     model::{ValidationError, ValidationResult}
   |                              ^^^^^^^^^^^^^^^^

warning: unused import: `Agent`
  --> packages/fluent-ai/src/client/builder.rs:22:13
   |
22 |     agent::{Agent, AgentBuilder},
   |             ^^^^^

warning: unused import: `std::sync::Arc`
 --> packages/fluent-ai/src/client/completion.rs:7:5
  |
7 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `fluent_ai_async::AsyncStream`
 --> packages/fluent-ai/src/client/completion.rs:9:5
  |
9 | use fluent_ai_async::AsyncStream;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `StreamingResult`
  --> packages/fluent-ai/src/client/completion.rs:18:46
   |
18 |     streaming::{StreamingCompletionResponse, StreamingResult}};
   |                                              ^^^^^^^^^^^^^^^

warning: unused import: `core::cmp::max`
  --> packages/fluent-ai/src/embedding/builder.rs:18:5
   |
18 | use core::cmp::max;
   |     ^^^^^^^^^^^^^^

warning: unused import: `AtomicUsize`
  --> packages/fluent-ai/src/embedding/metrics/performance_monitor.rs:15:47
   |
15 | use std::sync::atomic::{AtomicU32, AtomicU64, AtomicUsize, Ordering};
   |                                               ^^^^^^^^^^^

warning: unused import: `Instant`
  --> packages/fluent-ai/src/embedding/metrics/performance_monitor.rs:16:27
   |
16 | use std::time::{Duration, Instant, SystemTime, UNIX_EPOCH};
   |                           ^^^^^^^

warning: unused import: `AtomicU32`
  --> packages/fluent-ai/src/embedding/metrics/quality_analyzer.rs:13:25
   |
13 | use std::sync::atomic::{AtomicU32, AtomicU64, AtomicUsize, Ordering};
   |                         ^^^^^^^^^

warning: unused import: `smallvec::SmallVec`
  --> packages/fluent-ai/src/embedding/metrics/quality_analyzer.rs:22:5
   |
22 | use smallvec::SmallVec;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused imports: `AtomicU32`, `AtomicU64`, `AtomicU8`, `AtomicUsize`, and `Ordering`
 --> packages/fluent-ai/src/embedding/providers.rs:6:25
  |
6 | use std::sync::atomic::{AtomicU8, AtomicU32, AtomicU64, AtomicUsize, Ordering};
  |                         ^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^

warning: unused import: `crossbeam_utils::CachePadded`
  --> packages/fluent-ai/src/embedding/providers.rs:10:5
   |
10 | use crossbeam_utils::CachePadded;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `CoherenceTracker`, `Complex64`, `QuantumMemory`, and `SuperpositionState`
  --> packages/fluent-ai/src/embedding/providers.rs:20:5
   |
20 |     CoherenceTracker, Complex64, QuantumMemory, QuantumRouterTrait, SuperpositionState};
   |     ^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^                      ^^^^^^^^^^^^^^^^^^

warning: unused import: `AtomicBool`
  --> packages/fluent-ai/src/embedding/resilience/circuit_breaker.rs:14:25
   |
14 | use std::sync::atomic::{AtomicBool, AtomicU32, AtomicU64, Ordering};
   |                         ^^^^^^^^^^

warning: unused import: `sleep`
  --> packages/fluent-ai/src/embedding/resilience/circuit_breaker.rs:25:29
   |
25 | use tokio::time::{interval, sleep};
   |                             ^^^^^

warning: unused import: `fluent_ai_async::AsyncStream as AsyncStreamTrait`
  --> packages/fluent-ai/src/runtime/async_stream.rs:19:5
   |
19 | use fluent_ai_async::AsyncStream as AsyncStreamTrait;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `super::executor::global`
 --> packages/fluent-ai/src/runtime/async_task.rs:8:5
  |
8 | use super::executor::global;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::future::Future`
   --> packages/fluent-ai/src/tools/mcp_executor.rs:116:5
    |
116 | use std::future::Future;
    |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::pin::Pin`
   --> packages/fluent-ai/src/tools/mcp_executor.rs:117:5
    |
117 | use std::pin::Pin;
    |     ^^^^^^^^^^^^^

warning: unused import: `MapAccess`
   --> packages/fluent-ai/src/lib.rs:100:41
    |
100 |     use serde::de::{self, Deserializer, MapAccess, SeqAccess, Visitor};
    |                                         ^^^^^^^^^

error[E0728]: `await` is only allowed inside `async` functions and blocks
  --> packages/fluent-ai/src/chat/chatbot.rs:67:30
   |
27 | / pub fn cli_chatbot<C>(chatbot: C) -> Result<(), PromptError>
28 | | where
29 | |     C: Chat,
   | |____________- this is not `async`
...
67 |                   break handle.await?; // propagate PromptError  
   |                                ^^^^^ only allowed inside `async` functions and blocks

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `tempfile`
   --> packages/provider/src/security/audit.rs:256:25
    |
256 |         let temp_file = tempfile::NamedTempFile::new().map_err(|e| SecurityError::AuditError {
    |                         ^^^^^^^^ use of unresolved module or unlinked crate `tempfile`
    |
    = help: if you wanted to use a crate named `tempfile`, use `cargo add tempfile` to add it to your `Cargo.toml`

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/api/middleware.rs:100:11
    |
100 |     keys: HashMap<String, UserContext>,
    |           ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `uuid`
   --> packages/provider/src/security/audit.rs:308:17
    |
308 |             id: uuid::Uuid::new_v4().to_string(),
    |                 ^^^^ use of unresolved module or unlinked crate `uuid`
    |
    = help: if you wanted to use a crate named `uuid`, use `cargo add uuid` to add it to your `Cargo.toml`

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/api/middleware.rs:101:17
    |
101 |     key_hashes: HashMap<String, String>, // hash -> key_id
    |                 ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/api/middleware.rs:127:24
    |
127 |         let mut keys = HashMap::new();
    |                        ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/api/middleware.rs:128:30
    |
128 |         let mut key_hashes = HashMap::new();
    |                              ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `uuid`
   --> packages/provider/src/security/audit.rs:543:21
    |
543 |                 id: uuid::Uuid::new_v4().to_string(),
    |                     ^^^^ use of unresolved module or unlinked crate `uuid`
    |
    = help: if you wanted to use a crate named `uuid`, use `cargo add uuid` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/api/middleware.rs:149:24
    |
149 |         let mut keys = HashMap::new();
    |                        ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/api/middleware.rs:150:30
    |
150 |         let mut key_hashes = HashMap::new();
    |                              ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/committee/committee_consensus.rs:83:26
   |
83 |     pub quality_weights: HashMap<QualityTier, f64>}
   |                          ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/cognitive/committee/committee_consensus.rs:87:35
   |
87 |         let mut quality_weights = HashMap::new();
   |                                   ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/committee/committee_consensus.rs:122:19
    |
122 |     pub metadata: HashMap<Arc<str>, Arc<str>>}
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/committee/committee_consensus.rs:137:23
    |
137 |             metadata: HashMap::new()}
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/committee/committee_consensus.rs:269:23
    |
269 |             metadata: HashMap::new()})
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/committee/committee_consensus.rs:301:23
    |
301 |             metadata: HashMap::new()})
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/committee/committee_consensus.rs:341:23
    |
341 |             metadata: HashMap::new()})
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/committee/committee_consensus.rs:373:23
    |
373 |             metadata: HashMap::new()})
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:442:17
    |
442 |     evaluators: HashMap<ModelType, ArrayVec<Arc<ProviderEvaluator>, MAX_COMMITTEE_SIZE>>,
    |                 ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/caching.rs:62:31
   |
62 |     fn from_command(command: &ChatCommand) -> Self {
   |                               ^^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/caching.rs:66:13
   |
66 |             ChatCommand::Help { command, extended } => (
   |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/caching.rs:70:13
   |
70 |             ChatCommand::Clear { confirm, keep_last } => (
   |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/caching.rs:74:13
   |
74 |             ChatCommand::History {
   |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/caching.rs:81:13
   |
81 |             ChatCommand::Save {
   |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/caching.rs:91:13
   |
91 |             ChatCommand::Load {
   |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/caching.rs:98:13
   |
98 |             ChatCommand::Export {
   |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:108:13
    |
108 |             ChatCommand::Import {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:118:13
    |
118 |             ChatCommand::Settings {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:129:13
    |
129 |             ChatCommand::Debug {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:139:13
    |
139 |             ChatCommand::Custom {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:146:13
    |
146 |             ChatCommand::Config {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:157:13
    |
157 |             ChatCommand::Template {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:168:13
    |
168 |             ChatCommand::Macro {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:175:13
    |
175 |             ChatCommand::Search {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:186:13
    |
186 |             ChatCommand::Branch {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:193:13
    |
193 |             ChatCommand::Session {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:203:13
    |
203 |             ChatCommand::Tool { action, name, args } => (
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:207:13
    |
207 |             ChatCommand::Stats {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:217:13
    |
217 |             ChatCommand::Theme {
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:259:39
    |
259 |     pub async fn get(&self, command: &ChatCommand) -> Option<CommandOutput> {
    |                                       ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:280:39
    |
280 |     pub async fn put(&self, command: &ChatCommand, output: CommandOutput) {
    |                                       ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:359:22
    |
359 |         command: &'a ChatCommand,
    |                      ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/caching.rs:381:22
    |
381 |         command: &'a ChatCommand,
    |                      ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/command.rs:18:22
   |
18 |         command: &'a ChatCommand,
   |                      ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/command.rs:25:22
   |
25 |         command: &'a ChatCommand,
   |                      ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/command.rs:79:19
   |
79 |         command: &ChatCommand,
   |                   ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/command.rs:91:19
   |
91 |         command: &ChatCommand,
   |                   ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/performance.rs:109:23
    |
109 |         _command: &'a ChatCommand,
    |                       ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/performance.rs:125:23
    |
125 |         _command: &'a ChatCommand,
    |                       ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
  --> packages/fluent-ai/src/middleware/security.rs:95:47
   |
95 |     fn is_command_authorized(&self, command: &ChatCommand) -> bool {
   |                                               ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:101:13
    |
101 |             ChatCommand::Help { .. } => "help",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:102:13
    |
102 |             ChatCommand::Clear { .. } => "clear",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:103:13
    |
103 |             ChatCommand::History { .. } => "history",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:104:13
    |
104 |             ChatCommand::Save { .. } => "save",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:105:13
    |
105 |             ChatCommand::Load { .. } => "load",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:106:13
    |
106 |             ChatCommand::Export { .. } => "export",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:107:13
    |
107 |             ChatCommand::Import { .. } => "import",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:108:13
    |
108 |             ChatCommand::Settings { .. } => "settings",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:109:13
    |
109 |             ChatCommand::Debug { .. } => "debug",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:110:13
    |
110 |             ChatCommand::Custom { name, .. } => name,
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:111:13
    |
111 |             ChatCommand::Config { .. } => "config",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:112:13
    |
112 |             ChatCommand::Template { .. } => "template",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:113:13
    |
113 |             ChatCommand::Macro { .. } => "macro",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:114:13
    |
114 |             ChatCommand::Search { .. } => "search",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:115:13
    |
115 |             ChatCommand::Branch { .. } => "branch",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:116:13
    |
116 |             ChatCommand::Session { .. } => "session",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:117:13
    |
117 |             ChatCommand::Tool { .. } => "tool",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:118:13
    |
118 |             ChatCommand::Stats { .. } => "stats",
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:119:13
    |
119 |             ChatCommand::Theme { .. } => "theme"};
    |             ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:134:22
    |
134 |         command: &'a ChatCommand,
    |                      ^^^^^^^^^^^

warning: use of deprecated type alias `fluent_ai_domain::chat::commands::ChatCommand`: Use ImmutableChatCommand instead for zero-allocation streaming
   --> packages/fluent-ai/src/middleware/security.rs:159:23
    |
159 |         _command: &'a ChatCommand,
    |                       ^^^^^^^^^^^

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:442:36
    |
442 |     evaluators: HashMap<ModelType, ArrayVec<Arc<ProviderEvaluator>, MAX_COMMITTEE_SIZE>>,
    |                                    ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:444:26
    |
444 |     round_robin_indices: HashMap<ModelType, AtomicUsize>,
    |                          ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `ModelConfig` in this scope
  --> packages/provider/src/clients/anthropic/completion.rs:63:22
   |
63 |     config: &'static ModelConfig,
   |                      ^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
15 + use crate::domain::chat::config::ModelConfig;
   |
15 + use fluent_ai_domain::chat::config::ModelConfig;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:455:25
    |
455 |             evaluators: HashMap::new(),
    |                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0422]: cannot find struct, variant or union type `ModelConfig` in this scope
   --> packages/provider/src/clients/anthropic/completion.rs:109:30
    |
109 |         let default_config = ModelConfig {
    |                              ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
15  + use crate::domain::chat::config::ModelConfig;
    |
15  + use fluent_ai_domain::chat::config::ModelConfig;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:456:34
    |
456 |             round_robin_indices: HashMap::new(),
    |                                  ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0574]: expected struct, variant or union type, found enum `AnthropicSystemMessage`
   --> packages/provider/src/clients/anthropic/completion.rs:518:18
    |
518 |             Some(AnthropicSystemMessage {
    |                  ^^^^^^^^^^^^^^^^^^^^^^ help: a struct with a similar name exists: `AnthropicMessage`
    |
   ::: packages/provider/src/clients/anthropic/types.rs:87:1
    |
87  | pub struct AnthropicMessage<'a> {
    | ------------------------------- similarly named struct `AnthropicMessage` defined here

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:472:29
    |
472 |             .or_insert_with(ArrayVec::new);
    |                             ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: unresolved import
  --> packages/provider/src/clients/anthropic/messages.rs:66:24
   |
66 |         #[serde(with = "crate::util::json_util::stringified_json")]
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unresolved import
   |
help: a similar path exists
   |
66 -         #[serde(with = "crate::util::json_util::stringified_json")]
66 +         #[serde(with = fluent_ai_domain::util)]
   |
help: consider importing one of these modules
   |
6  + use crate::json_util::stringified_json;
   |
6  + use fluent_ai_domain::json_util::stringified_json;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:510:10
    |
510 |     ) -> HashMap<ModelType, ArrayVec<HealthStatus, MAX_COMMITTEE_SIZE>> {
    |          ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0782]: expected a type, found a trait
  --> packages/fluent-ai/src/engine/fluent_engine.rs:17:12
   |
17 |     model: Model,
   |            ^^^^^
   |
help: you might be missing a type parameter
   |
13 ~ pub struct FluentEngine<T: Model> {
14 |     /// The backend implementation for completions
15 |     backend: Arc<dyn CompletionBackend + Send + Sync>,
16 |     /// Engine configuration
17 ~     model: T,
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:510:29
    |
510 |     ) -> HashMap<ModelType, ArrayVec<HealthStatus, MAX_COMMITTEE_SIZE>> {
    |                             ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:511:30
    |
511 |         let mut health_map = HashMap::new();
    |                              ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/messages.rs:111:20
    |
111 |     #[serde(with = "crate::util::json_util::stringified_json")]
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
111 -     #[serde(with = "crate::util::json_util::stringified_json")]
111 +     #[serde(with = fluent_ai_domain::util)]
    |
help: consider importing one of these modules
    |
6   + use crate::json_util::stringified_json;
    |
6   + use fluent_ai_domain::json_util::stringified_json;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:514:39
    |
514 |             let mut health_statuses = ArrayVec::new();
    |                                       ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:535:17
    |
535 |     evaluators: ArrayVec<Arc<ProviderEvaluator>, MAX_COMMITTEE_SIZE>,
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:547:21
    |
547 |         evaluators: ArrayVec<Arc<ProviderEvaluator>, MAX_COMMITTEE_SIZE>,
    |                     ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpMethod`
   --> packages/provider/src/clients/anthropic/requests.rs:139:49
    |
139 |         let mut http_request = HttpRequest::new(HttpMethod::Post, url.to_string()).with_body(body);
    |                                                 ^^^^^^^^^^ use of undeclared type `HttpMethod`
    |
help: consider importing one of these enums
    |
6   + use crate::domain::http::HttpMethod;
    |
6   + use fluent_ai_domain::http::HttpMethod;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:569:10
    |
569 |     ) -> ArrayVec<CommitteeResult<CommitteeEvaluation>, MAX_COMMITTEE_SIZE> {
    |          ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0422]: cannot find struct, variant or union type `AnthropicMessage` in module `crate::clients::anthropic::messages`
   --> packages/provider/src/clients/anthropic/requests.rs:175:65
    |
175 |             messages: vec![crate::clients::anthropic::messages::AnthropicMessage {
    |                                                                 ^^^^^^^^^^^^^^^^ not found in `crate::clients::anthropic::messages`
    |
help: consider importing this struct through its public re-export
    |
6   + use crate::clients::anthropic::AnthropicMessage;
    |
help: if you import `AnthropicMessage`, refer to it directly
    |
175 -             messages: vec![crate::clients::anthropic::messages::AnthropicMessage {
175 +             messages: vec![AnthropicMessage {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:573:37
    |
573 |         let mut evaluation_futures: ArrayVec<_, MAX_COMMITTEE_SIZE> = ArrayVec::new();
    |                                     ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpMethod`
   --> packages/provider/src/clients/anthropic/requests.rs:193:49
    |
193 |         let mut http_request = HttpRequest::new(HttpMethod::Post, url.to_string()).with_body(body);
    |                                                 ^^^^^^^^^^ use of undeclared type `HttpMethod`
    |
help: consider importing one of these enums
    |
6   + use crate::domain::http::HttpMethod;
    |
6   + use fluent_ai_domain::http::HttpMethod;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:573:71
    |
573 |         let mut evaluation_futures: ArrayVec<_, MAX_COMMITTEE_SIZE> = ArrayVec::new();
    |                                                                       ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/streaming.rs:112:20
    |
112 |             crate::providers::anthropic::AnthropicError::RequestError(format!(
    |                    ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
112 |             crate::model_info::providers::anthropic::AnthropicError::RequestError(format!(
    |                    ++++++++++++
help: consider importing this enum through its public re-export
    |
7   + use crate::clients::AnthropicError;
    |
help: if you import `AnthropicError`, refer to it directly
    |
112 -             crate::providers::anthropic::AnthropicError::RequestError(format!(
112 +             AnthropicError::RequestError(format!(
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:594:23
    |
594 |         let results = futures_util::future::join_all(evaluation_futures).await;
    |                       ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
    |
7   + use futures::future;
    |
help: if you import `future`, refer to it directly
    |
594 -         let results = futures_util::future::join_all(evaluation_futures).await;
594 +         let results = future::join_all(evaluation_futures).await;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/streaming.rs:146:36
    |
146 | ...                   crate::providers::anthropic::AnthropicError::RequestError(
    |                              ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
146 |                             crate::model_info::providers::anthropic::AnthropicError::RequestError(
    |                                    ++++++++++++
help: consider importing this enum through its public re-export
    |
7   + use crate::clients::AnthropicError;
    |
help: if you import `AnthropicError`, refer to it directly
    |
146 -                             crate::providers::anthropic::AnthropicError::RequestError(
146 +                             AnthropicError::RequestError(
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/memory/src/cognitive/committee/committee_evaluators.rs:597:32
    |
597 |         let mut result_array = ArrayVec::new();
    |                                ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/streaming.rs:156:32
    |
156 |                         crate::providers::anthropic::AnthropicError::RequestError(e.to_string())
    |                                ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
156 |                         crate::model_info::providers::anthropic::AnthropicError::RequestError(e.to_string())
    |                                ++++++++++++
help: consider importing this enum through its public re-export
    |
7   + use crate::clients::AnthropicError;
    |
help: if you import `AnthropicError`, refer to it directly
    |
156 -                         crate::providers::anthropic::AnthropicError::RequestError(e.to_string())
156 +                         AnthropicError::RequestError(e.to_string())
    |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/memory/src/cognitive/committee/committee_types.rs:32:23
   |
32 |         evaluations: &ArrayVec<CommitteeEvaluation, MAX_COMMITTEE_SIZE>,
   |                       ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
22 +     use arrayvec::ArrayVec;
   |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/streaming.rs:187:40
    |
187 | ...                   crate::providers::anthropic::AnthropicError::DeserializationError(
    |                              ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
187 |                                 crate::model_info::providers::anthropic::AnthropicError::DeserializationError(
    |                                        ++++++++++++
help: consider importing this enum through its public re-export
    |
7   + use crate::clients::AnthropicError;
    |
help: if you import `AnthropicError`, refer to it directly
    |
187 -                                 crate::providers::anthropic::AnthropicError::DeserializationError(
187 +                                 AnthropicError::DeserializationError(
    |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/memory/src/cognitive/committee/committee_types.rs:47:17
   |
47 |     ) -> Result<ArrayVec<CommitteeEvaluation, MAX_COMMITTEE_SIZE>, D::Error>
   |                 ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
22 +     use arrayvec::ArrayVec;
   |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/anthropic/streaming.rs:246:50
    |
246 | ) -> Result<Option<AnthropicStreamChunk>, crate::providers::anthropic::AnthropicError> {
    |                                                  ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
246 | ) -> Result<Option<AnthropicStreamChunk>, crate::model_info::providers::anthropic::AnthropicError> {
    |                                                  ++++++++++++
help: consider importing this module
    |
7   + use crate::clients::anthropic;
    |
help: if you import `anthropic`, refer to it directly
    |
246 - ) -> Result<Option<AnthropicStreamChunk>, crate::providers::anthropic::AnthropicError> {
246 + ) -> Result<Option<AnthropicStreamChunk>, anthropic::AnthropicError> {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
  --> packages/memory/src/cognitive/committee/committee_types.rs:54:26
   |
54 |             type Value = ArrayVec<CommitteeEvaluation, MAX_COMMITTEE_SIZE>;
   |                          ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
22 +     use arrayvec::ArrayVec;
   |

error[E0404]: expected trait, found struct `ToolExecutor`
   --> packages/provider/src/clients/anthropic/tools/calculator.rs:122:6
    |
122 | impl ToolExecutor for CalculatorTool {
    |      ^^^^^^^^^^^^ not a trait
    |
help: consider importing this trait instead
    |
6   + use crate::clients::anthropic::core::ToolExecutor;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
  --> packages/memory/src/cognitive/committee/committee_types.rs:66:39
   |
66 |                 let mut evaluations = ArrayVec::new();
   |                                       ^^^^^^^^ use of undeclared type `ArrayVec`
   |
help: consider importing this struct
   |
22 +     use arrayvec::ArrayVec;
   |

error[E0404]: expected trait, found struct `ToolExecutor`
  --> packages/provider/src/clients/anthropic/tools/file_operations.rs:82:6
   |
82 | impl ToolExecutor for FileOperationsTool {
   |      ^^^^^^^^^^^^ not a trait
   |
help: consider importing this trait instead
   |
6  + use crate::clients::anthropic::core::ToolExecutor;
   |

error[E0107]: struct takes 0 generic arguments but 1 generic argument was supplied
  --> packages/fluent-ai/src/streaming/streaming.rs:82:65
   |
82 | impl<R: Clone + Unpin> From<StreamingCompletionResponse<R>> for CompletionResponse<Option<R>> {
   |                                                                 ^^^^^^^^^^^^^^^^^^----------- help: remove the unnecessary generics
   |                                                                 |
   |                                                                 expected 0 generic arguments
   |
note: struct defined here, with 0 generic parameters
  --> packages/fluent-ai/src/completion/mod.rs:23:12
   |
23 | pub struct CompletionResponse {
   |            ^^^^^^^^^^^^^^^^^^

error[E0405]: cannot find trait `CompletionProvider` in module `fluent_ai_domain::completion`
   --> packages/memory/src/cognitive/committee/committee_types.rs:424:57
    |
424 |     pub provider: Arc<dyn fluent_ai_domain::completion::CompletionProvider>,
    |                                                         ^^^^^^^^^^^^^^^^^^ help: a trait with a similar name exists: `CompletionModel`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/core.rs:14:1
    |
14  | pub trait CompletionModel: Send + Sync + 'static {
    | ------------------------------------------------ similarly named trait `CompletionModel` defined here

error[E0404]: expected trait, found struct `ToolExecutor`
   --> packages/provider/src/clients/anthropic/tools/mod.rs:109:27
    |
109 |         executor: Box<dyn ToolExecutor + Send + Sync>,
    |                           ^^^^^^^^^^^^ not a trait
    |
help: `+` is used to constrain a "trait object" type with lifetimes or auto-traits; structs and enums can't be bound in that way
   --> packages/provider/src/clients/anthropic/tools/mod.rs:109:42
    |
109 |         executor: Box<dyn ToolExecutor + Send + Sync>,
    |                           ------------   ^^^^   ^^^^ ...because of these bounds
    |                           |
    |                           expected this type to be a trait...
help: consider importing this trait instead
    |
16  + use crate::clients::anthropic::core::ToolExecutor;
    |

error[E0405]: cannot find trait `CompletionProvider` in module `fluent_ai_domain::completion`
   --> packages/memory/src/cognitive/committee/committee_types.rs:434:57
    |
434 |         provider: Arc<dyn fluent_ai_domain::completion::CompletionProvider>,
    |                                                         ^^^^^^^^^^^^^^^^^^ help: a trait with a similar name exists: `CompletionModel`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/core.rs:14:1
    |
14  | pub trait CompletionModel: Send + Sync + 'static {
    | ------------------------------------------------ similarly named trait `CompletionModel` defined here

error[E0412]: cannot find type `ConfigMetrics` in module `super::config`
   --> packages/provider/src/clients/candle/client.rs:707:47
    |
707 |     pub global_config_metrics: super::config::ConfigMetrics,
    |                                               ^^^^^^^^^^^^^ not found in `super::config`

error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate
   --> packages/fluent-ai/src/builders/agent_role.rs:637:1
    |
637 | impl From<[(&'static str, &'static str); 1]> for hashbrown::HashMap<&'static str, &'static str> {
    | ^^^^^---------------------------------------^^^^^----------------------------------------------
    |      |                                           |
    |      |                                           `hashbrown::HashMap` is not defined in the current crate
    |      this is not defined in the current crate because this is a foreign trait
    |
    = note: impl doesn't have any local type before any uncovered type parameters
    = note: for more information see https://doc.rust-lang.org/reference/items/implementations.html#orphan-rules
    = note: define and implement a trait or new type instead

error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate
   --> packages/fluent-ai/src/builders/agent_role.rs:646:1
    |
646 | impl From<[(&'static str, &'static str); 2]> for hashbrown::HashMap<&'static str, &'static str> {
    | ^^^^^---------------------------------------^^^^^----------------------------------------------
    |      |                                           |
    |      |                                           `hashbrown::HashMap` is not defined in the current crate
    |      this is not defined in the current crate because this is a foreign trait
    |
    = note: impl doesn't have any local type before any uncovered type parameters
    = note: for more information see https://doc.rust-lang.org/reference/items/implementations.html#orphan-rules
    = note: define and implement a trait or new type instead

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/committee/committee_types.rs:478:17
    |
478 |     pub models: ArrayVec<ModelType, MAX_COMMITTEE_SIZE>,
    |                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate
   --> packages/fluent-ai/src/builders/agent_role.rs:656:1
    |
656 | impl From<[(&'static str, &'static str); 3]> for hashbrown::HashMap<&'static str, &'static str> {
    | ^^^^^---------------------------------------^^^^^----------------------------------------------
    |      |                                           |
    |      |                                           `hashbrown::HashMap` is not defined in the current crate
    |      this is not defined in the current crate because this is a foreign trait
    |
    = note: impl doesn't have any local type before any uncovered type parameters
    = note: for more information see https://doc.rust-lang.org/reference/items/implementations.html#orphan-rules
    = note: define and implement a trait or new type instead

error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate
   --> packages/fluent-ai/src/builders/agent_role.rs:666:1
    |
666 | impl From<[(&'static str, &'static str); 4]> for hashbrown::HashMap<&'static str, &'static str> {
    | ^^^^^---------------------------------------^^^^^----------------------------------------------
    |      |                                           |
    |      |                                           `hashbrown::HashMap` is not defined in the current crate
    |      this is not defined in the current crate because this is a foreign trait
    |
    = note: impl doesn't have any local type before any uncovered type parameters
    = note: for more information see https://doc.rust-lang.org/reference/items/implementations.html#orphan-rules
    = note: define and implement a trait or new type instead

error[E0412]: cannot find type `RuntimeMetrics` in module `super::config`
   --> packages/provider/src/clients/candle/client.rs:709:42
    |
709 |     pub realtime_metrics: super::config::RuntimeMetrics}
    |                                          ^^^^^^^^^^^^^^ not found in `super::config`
    |
help: consider importing this struct
    |
6   + use tokio::runtime::RuntimeMetrics;
    |
help: if you import `RuntimeMetrics`, refer to it directly
    |
709 -     pub realtime_metrics: super::config::RuntimeMetrics}
709 +     pub realtime_metrics: RuntimeMetrics}
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/memory/src/cognitive/committee/committee_types.rs:495:21
    |
495 |             models: ArrayVec::new_const(),
    |                     ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
7   + use arrayvec::ArrayVec;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:723:39
    |
723 |                     let error_chunk = CompletionChunk {
    |                                       ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/evolution.rs:37:18
   |
37 |     pub metrics: HashMap<String, f64>}
   |                  ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:752:35
    |
752 |                 let error_chunk = CompletionChunk {
    |                                   ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:764:39
    |
764 |                     let error_chunk = CompletionChunk {
    |                                       ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:779:35
    |
779 |                 let error_chunk = CompletionChunk {
    |                                   ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:810:39
    |
810 |                     let error_chunk = CompletionChunk {
    |                                       ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/cognitive/evolution.rs:69:22
   |
69 |             metrics: HashMap::new()}
   |                      ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:851:43
    |
851 |                         let error_chunk = CompletionChunk {
    |                                           ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/evolution.rs:370:35
    |
370 |                         metadata: HashMap::new()};
    |                                   ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:865:43
    |
865 |                         let error_chunk = CompletionChunk {
    |                                           ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/mcts.rs:41:15
   |
41 |     children: HashMap<String, String>, // action -> child_id
   |               ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:890:39
    |
890 |                     let error_chunk = CompletionChunk {
    |                                       ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/mcts.rs:51:11
   |
51 |     tree: HashMap<String, MCTSNode>,
   |           ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:926:40
    |
926 |                 let completion_chunk = CompletionChunk {
    |                                        ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/cognitive/mcts.rs:73:20
   |
73 |         let tree = HashMap::from([(
   |                    ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0574]: expected struct, variant or union type, found enum `CompletionChunk`
   --> packages/provider/src/clients/candle/client.rs:951:31
    |
951 |             let final_chunk = CompletionChunk {
    |                               ^^^^^^^^^^^^^^^ not a struct, variant or union type
    |
note: struct `crate::clients::huggingface::streaming::CompletionChunk` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:53:1
    |
53  | struct CompletionChunk {
    | ^^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing one of these structs instead
    |
6   + use crate::domain::http::CompletionChunk;
    |
6   + use fluent_ai_domain::http::CompletionChunk;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/cognitive/mcts.rs:78:27
   |
78 |                 children: HashMap::new(),
   |                           ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0422]: cannot find struct, variant or union type `CompletionUsage` in module `fluent_ai_domain::usage`
   --> packages/provider/src/clients/candle/client.rs:958:54
    |
958 |                 usage: Some(fluent_ai_domain::usage::CompletionUsage {
    |                                                      ^^^^^^^^^^^^^^^ not found in `fluent_ai_domain::usage`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/mcts.rs:174:23
    |
174 |             children: HashMap::new(),
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `CompletionError` in crate `fluent_ai_domain`
   --> packages/provider/src/clients/candle/client.rs:990:52
    |
990 | impl From<CandleClientError> for fluent_ai_domain::CompletionError {
    |                                                    ^^^^^^^^^^^^^^^ help: a trait with a similar name exists: `CompletionModel`
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/core.rs:14:1
    |
14  | pub trait CompletionModel: Send + Sync + 'static {
    | ------------------------------------------------ similarly named trait `CompletionModel` defined here
    |
    = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/types.rs:196:52
    |
196 |     pub fn get_attention_patterns(&self) -> Option<HashMap<String, f32>> {
    |                                                    ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0053]: method `before_execute` has an incompatible type for trait
   --> packages/fluent-ai/src/middleware/caching.rs:361:10
    |
361 |     ) -> fluent_ai_domain::AsyncStream<Result<(), CommandError>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `Result<(), CommandError>`
    |
note: type in trait
   --> packages/fluent-ai/src/middleware/command.rs:20:10
    |
20  |     ) -> fluent_ai_domain::AsyncStream<()>;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected signature `fn(&'a CachingMiddleware, &'a ImmutableChatCommand, &'a fluent_ai_domain::chat::commands::CommandContext) -> fluent_ai_async::AsyncStream<()>`
               found signature `fn(&CachingMiddleware, &ImmutableChatCommand, &fluent_ai_domain::chat::commands::CommandContext) -> fluent_ai_async::AsyncStream<Result<(), fluent_ai_domain::chat::commands::CommandError>>`
help: change the output type to match the trait
    |
361 -     ) -> fluent_ai_domain::AsyncStream<Result<(), CommandError>> {
361 +     ) -> fluent_ai_async::AsyncStream<()> {
    |

error[E0053]: method `after_execute` has an incompatible type for trait
   --> packages/fluent-ai/src/middleware/caching.rs:384:10
    |
384 |     ) -> fluent_ai_domain::AsyncStream<Result<(), CommandError>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `Result<(), CommandError>`
    |
note: type in trait
   --> packages/fluent-ai/src/middleware/command.rs:28:10
    |
28  |     ) -> fluent_ai_domain::AsyncStream<()>;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected signature `fn(&'a CachingMiddleware, &'a ImmutableChatCommand, &'a fluent_ai_domain::chat::commands::CommandContext, &'a Result<_, _>) -> fluent_ai_async::AsyncStream<()>`
               found signature `fn(&CachingMiddleware, &ImmutableChatCommand, &fluent_ai_domain::chat::commands::CommandContext, &Result<_, _>) -> fluent_ai_async::AsyncStream<Result<(), fluent_ai_domain::chat::commands::CommandError>>`
help: change the output type to match the trait
    |
384 -     ) -> fluent_ai_domain::AsyncStream<Result<(), CommandError>> {
384 +     ) -> fluent_ai_async::AsyncStream<()> {
    |

error[E0053]: method `before_execute` has an incompatible type for trait
   --> packages/fluent-ai/src/middleware/performance.rs:111:10
    |
111 |     ) -> fluent_ai_domain::AsyncStream<Result<(), CommandError>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `Result<(), CommandError>`
    |
note: type in trait
   --> packages/fluent-ai/src/middleware/command.rs:20:10
    |
20  |     ) -> fluent_ai_domain::AsyncStream<()>;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected signature `fn(&'a PerformanceMiddleware, &'a ImmutableChatCommand, &'a fluent_ai_domain::chat::commands::CommandContext) -> fluent_ai_async::AsyncStream<()>`
               found signature `fn(&PerformanceMiddleware, &ImmutableChatCommand, &fluent_ai_domain::chat::commands::CommandContext) -> fluent_ai_async::AsyncStream<Result<(), fluent_ai_domain::chat::commands::CommandError>>`
help: change the output type to match the trait
    |
111 -     ) -> fluent_ai_domain::AsyncStream<Result<(), CommandError>> {
111 +     ) -> fluent_ai_async::AsyncStream<()> {
    |

error[E0053]: method `after_execute` has an incompatible type for trait
   --> packages/fluent-ai/src/middleware/performance.rs:128:10
    |
128 |     ) -> fluent_ai_domain::AsyncStream<Result<(), CommandError>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `Result<(), CommandError>`
    |
note: type in trait
   --> packages/fluent-ai/src/middleware/command.rs:28:10
    |
28  |     ) -> fluent_ai_domain::AsyncStream<()>;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected signature `fn(&'a PerformanceMiddleware, &'a ImmutableChatCommand, &'a fluent_ai_domain::chat::commands::CommandContext, &'a Result<_, _>) -> fluent_ai_async::AsyncStream<()>`
               found signature `fn(&PerformanceMiddleware, &ImmutableChatCommand, &fluent_ai_domain::chat::commands::CommandContext, &Result<_, _>) -> fluent_ai_async::AsyncStream<Result<(), fluent_ai_domain::chat::commands::CommandError>>`
help: change the output type to match the trait
    |
128 -     ) -> fluent_ai_domain::AsyncStream<Result<(), CommandError>> {
128 +     ) -> fluent_ai_async::AsyncStream<()> {
    |

error[E0433]: failed to resolve: could not find `CompletionError` in `fluent_ai_domain`
   --> packages/provider/src/clients/candle/client.rs:992:27
    |
992 |         fluent_ai_domain::CompletionError::ProviderError(err.to_string())
    |                           ^^^^^^^^^^^^^^^
    |                           |
    |                           could not find `CompletionError` in `fluent_ai_domain`
    |                           help: a trait with a similar name exists: `CompletionModel`
    |
    = note: enum `crate::completion_provider::CompletionError` exists but is inaccessible

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/types.rs:201:28
    |
201 |         let mut patterns = HashMap::new();
    |                            ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `AtomicU32` in this scope
    --> packages/provider/src/clients/candle/device_manager.rs:200:35
     |
200  |       avg_scan_time_us: CachePadded<AtomicU32>,
     |                                     ^^^^^^^^^
     |
    ::: /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/sync/atomic.rs:3786:1
     |
3786 | / atomic_int! {
3787 | |     cfg(target_has_atomic = "64"),
3788 | |     cfg(target_has_atomic_equal_alignment = "64"),
3789 | |     stable(feature = "integer_atomics_stable", since = "1.34.0"),
...    |
3802 | |     u64 AtomicU64
3803 | | }
     | |_- similarly named struct `AtomicU64` defined here
     |
help: a struct with a similar name exists
     |
200  -     avg_scan_time_us: CachePadded<AtomicU32>,
200  +     avg_scan_time_us: CachePadded<AtomicU64>,
     |
help: consider importing this struct
     |
6    + use std::sync::atomic::AtomicU32;
     |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/types.rs:556:19
    |
556 |         metadata: HashMap<String, serde_json::Value>,
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0053]: method `try_call` has an incompatible type for trait
   --> packages/fluent-ai/src/workflow/try_flow.rs:149:5
    |
149 |     async fn try_call(&self, input: Self::Input) -> Result<Self::Output, Self::Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `AsyncStream<Result<_, _>>`, found future
    |
note: type in trait
   --> packages/fluent-ai/src/workflow/try_flow.rs:23:47
    |
23  |     fn try_call(&self, input: Self::Input) -> AsyncStream<Result<Self::Output, Self::Error>>;
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected signature `fn(&_, _) -> fluent_ai_async::AsyncStream<Result<_, _>>`
               found signature `fn(&_, _) -> impl std::future::Future<Output = Result<<O as try_flow::TryOp>::Output, <O as try_flow::TryOp>::Error>>`

error[E0433]: failed to resolve: use of undeclared type `AtomicU32`
   --> packages/provider/src/clients/candle/device_manager.rs:211:48
    |
211 |             avg_scan_time_us: CachePadded::new(AtomicU32::new(0)),
    |                                                ^^^^^^^^^ use of undeclared type `AtomicU32`
    |
help: a struct with a similar name exists
    |
211 -             avg_scan_time_us: CachePadded::new(AtomicU32::new(0)),
211 +             avg_scan_time_us: CachePadded::new(AtomicU64::new(0)),
    |
help: consider importing this struct
    |
6   + use std::sync::atomic::AtomicU32;
    |

error[E0433]: failed to resolve: use of undeclared type `SystemTime`
   --> packages/provider/src/clients/candle/generation.rs:553:17
    |
553 |                 SystemTime::now()
    |                 ^^^^^^^^^^ use of undeclared type `SystemTime`
    |
help: consider importing this struct
    |
6   + use std::time::SystemTime;
    |

error[E0425]: cannot find value `UNIX_EPOCH` in this scope
   --> packages/provider/src/clients/candle/generation.rs:554:37
    |
554 |                     .duration_since(UNIX_EPOCH)
    |                                     ^^^^^^^^^^ not found in this scope
    |
help: consider importing this constant
    |
6   + use std::time::UNIX_EPOCH;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/common/types.rs:54:29
   |
54 |     pub scoring_guidelines: HashMap<String, String>}
   |                             ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0404]: expected trait, found enum `Provider`
  --> packages/provider/src/clients/candle/provider.rs:18:6
   |
18 | impl Provider for CandleProvider {
   |      ^^^^^^^^ not a trait

error[E0412]: cannot find type `HttpClient` in this scope
  --> packages/provider/src/clients/huggingface/completion.rs:46:13
   |
46 |     client: HttpClient,
   |             ^^^^^^^^^^ not found in this scope
   |
   = note: struct `crate::image_processing::factory::batch_processing::HttpClient` exists but is inaccessible
help: consider importing this struct
   |
15 + use fluent_ai_http3::HttpClient;
   |

error[E0412]: cannot find type `ModelConfig` in this scope
  --> packages/provider/src/clients/huggingface/completion.rs:51:22
   |
51 |     config: &'static ModelConfig,
   |                      ^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
15 + use crate::domain::chat::config::ModelConfig;
   |
15 + use fluent_ai_domain::chat::config::ModelConfig;
   |

error[E0422]: cannot find struct, variant or union type `ModelConfig` in this scope
   --> packages/provider/src/clients/huggingface/completion.rs:152:23
    |
152 |         let config = &ModelConfig {
    |                       ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
15  + use crate::domain::chat::config::ModelConfig;
    |
15  + use fluent_ai_domain::chat::config::ModelConfig;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/cognitive/common/types.rs:58:38
   |
58 |         let mut scoring_guidelines = HashMap::new();
   |                                      ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HttpClient`
   --> packages/provider/src/clients/huggingface/completion.rs:170:21
    |
170 |             client: HttpClient::with_config(HttpConfig::streaming_optimized())
    |                     ^^^^^^^^^^ use of undeclared type `HttpClient`
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpClient` exists but is inaccessible
help: consider importing this struct
    |
15  + use fluent_ai_http3::HttpClient;
    |

error[E0046]: not all trait items implemented, missing: `model`
  --> packages/fluent-ai/src/engine/fluent_engine.rs:81:1
   |
81 | impl Agent for FluentAgent {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `model` in implementation
   |
  ::: packages/fluent-ai/src/engine/mod.rs:49:5
   |
49 |     fn model(&self) -> &fluent_ai_provider::Models;
   |     ----------------------------------------------- `model` from trait

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/common/types.rs:121:29
    |
121 |     pub agent_perspectives: HashMap<String, String>}
    |                             ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpConfig`
   --> packages/provider/src/clients/huggingface/completion.rs:170:45
    |
170 |             client: HttpClient::with_config(HttpConfig::streaming_optimized())
    |                                             ^^^^^^^^^^ use of undeclared type `HttpConfig`
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpConfig` exists but is inaccessible
help: consider importing this struct
    |
15  + use fluent_ai_http3::HttpConfig;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `json_util`
  --> packages/provider/src/clients/huggingface/streaming.rs:42:36
   |
42 |         #[serde(deserialize_with = "json_util::string_or_vec")]
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `json_util`
   |
   = help: if you wanted to use a crate named `json_util`, use `cargo add json_util` to add it to your `Cargo.toml`
help: consider importing one of these modules
   |
1  + use crate::json_util;
   |
1  + use fluent_ai_domain::json_util;
   |

error[E0412]: cannot find type `TranscriptionModel` in this scope
  --> packages/provider/src/clients/huggingface/transcription.rs:41:6
   |
41 | impl TranscriptionModel {
   |      ^^^^^^^^^^^^^^^^^^
   |
  ::: packages/provider/src/transcription/mod.rs:65:1
   |
65 | pub enum TranscriptionError {
   | --------------------------- similarly named enum `TranscriptionError` defined here
   |
help: an enum with a similar name exists
   |
41 - impl TranscriptionModel {
41 + impl TranscriptionError {
   |
help: consider importing this trait through its public re-export
   |
1  + use crate::TranscriptionModel;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/common/types.rs:125:38
    |
125 |         let mut agent_perspectives = HashMap::new();
    |                                      ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `TranscriptionModel` in this scope
  --> packages/provider/src/clients/huggingface/transcription.rs:48:44
   |
48 | impl transcription::TranscriptionModel for TranscriptionModel {
   |                                            ^^^^^^^^^^^^^^^^^^
   |
  ::: packages/provider/src/transcription/mod.rs:65:1
   |
65 | pub enum TranscriptionError {
   | --------------------------- similarly named enum `TranscriptionError` defined here
   |
help: an enum with a similar name exists
   |
48 - impl transcription::TranscriptionModel for TranscriptionModel {
48 + impl transcription::TranscriptionModel for TranscriptionError {
   |
help: consider importing this trait through its public re-export
   |
1  + use crate::TranscriptionModel;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/attention.rs:40:38
   |
40 |     pub attention_scores: Arc<RwLock<HashMap<String, f32>>>,
   |                                      ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
11 + use std::collections::HashMap;
   |
11 + use fluent_ai_domain::HashMap;
   |

error[E0422]: cannot find struct, variant or union type `Text` in module `message`
  --> packages/provider/src/clients/mistral/completion.rs:89:61
   |
89 |                         message::UserContent::Text(message::Text { text }) => {
   |                                                             ^^^^ not found in `message`
   |
note: these variants exist but are inaccessible
  --> packages/provider/src/clients/huggingface/streaming.rs:26:5
   |
26 |     Text { text: String }}
   |     ^^^^ `crate::clients::huggingface::streaming::AssistantContent::Text`: not accessible
   |
  ::: packages/provider/src/clients/openai/messages.rs:34:5
   |
34 |     Text(String),
   |     ^^^^^^^^^^^^ `crate::clients::openai::messages::OpenAIContent::Text`: not accessible
help: consider importing one of these variants
   |
1  + use crate::clients::anthropic::AnthropicContent::Text;
   |
1  + use crate::clients::anthropic::AnthropicContentBlock::Text;
   |
1  + use crate::clients::anthropic::AnthropicResponseContent::Text;
   |
1  + use crate::clients::anthropic::AnthropicSystemMessage::Text;
   |
     and 29 other candidates
help: if you import `Text`, refer to it directly
   |
89 -                         message::UserContent::Text(message::Text { text }) => {
89 +                         message::UserContent::Text(Text { text }) => {
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/attention.rs:101:33
    |
101 |     attention_cache: Arc<RwLock<HashMap<String, AttentionOutput>>>,
    |                                 ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
11  + use std::collections::HashMap;
    |
11  + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/mistral/completion.rs:102:38
    |
102 | ...                   message::AssistantContent::Text(text) => texts.push(text),
    |                                ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::clients::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
102 -                             message::AssistantContent::Text(text) => texts.push(text),
102 +                             AssistantContent::Text(text) => texts.push(text),
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/attention.rs:182:52
    |
182 |             attention_scores: Arc::new(RwLock::new(HashMap::new())),
    |                                                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
11  + use std::collections::HashMap;
    |
11  + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/mistral/completion.rs:103:38
    |
103 | ...                   message::AssistantContent::ToolCall(tool_call) => tools.push(tool_call)}
    |                                ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::clients::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
103 -                             message::AssistantContent::ToolCall(tool_call) => tools.push(tool_call)}
103 +                             AssistantContent::ToolCall(tool_call) => tools.push(tool_call)}
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `completion`
   --> packages/provider/src/clients/mistral/completion.rs:313:38
    |
313 |                     vec![completion::AssistantContent::text(content.clone())]
    |                                      ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `completion`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::clients::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
313 -                     vec![completion::AssistantContent::text(content.clone())]
313 +                     vec![AssistantContent::text(content.clone())]
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/attention.rs:507:31
    |
507 |         let mut char_counts = HashMap::new();
    |                               ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
11  + use std::collections::HashMap;
    |
11  + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `completion`
   --> packages/provider/src/clients/mistral/completion.rs:320:41
    |
320 | ...                   completion::AssistantContent::tool_call(
    |                                   ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `completion`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::clients::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
320 -                             completion::AssistantContent::tool_call(
320 +                             AssistantContent::tool_call(
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/attention.rs:615:51
    |
615 |             attention_cache: Arc::new(RwLock::new(HashMap::new())),
    |                                                   ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
11  + use std::collections::HashMap;
    |
11  + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/mistral/completion.rs:402:30
    |
402 |                     message::AssistantContent::Text(t) => {
    |                              ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::clients::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
402 -                     message::AssistantContent::Text(t) => {
402 +                     AssistantContent::Text(t) => {
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/manager.rs:71:33
   |
71 |     embedding_cache: Arc<RwLock<HashMap<String, Vec<f32>>>>}
   |                                 ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
11 + use std::collections::HashMap;
   |
11 + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: could not find `AssistantContent` in `message`
   --> packages/provider/src/clients/mistral/completion.rs:405:30
    |
405 |                     message::AssistantContent::ToolCall(tc) => {
    |                              ^^^^^^^^^^^^^^^^ could not find `AssistantContent` in `message`
    |
note: enum `crate::clients::huggingface::streaming::AssistantContent` exists but is inaccessible
   --> packages/provider/src/clients/huggingface/streaming.rs:25:1
    |
25  | enum AssistantContent {
    | ^^^^^^^^^^^^^^^^^^^^^ not accessible
help: consider importing this type alias through its public re-export
    |
1   + use crate::clients::openai::AssistantContent;
    |
help: if you import `AssistantContent`, refer to it directly
    |
405 -                     message::AssistantContent::ToolCall(tc) => {
405 +                     AssistantContent::ToolCall(tc) => {
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/manager.rs:147:51
    |
147 |             embedding_cache: Arc::new(RwLock::new(HashMap::new()))});
    |                                                   ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
11  + use std::collections::HashMap;
    |
11  + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HttpClient` in this scope
   --> packages/provider/src/clients/mistral/completion.rs:532:13
    |
532 |     client: HttpClient,
    |             ^^^^^^^^^^ not found in this scope
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpClient` exists but is inaccessible
help: consider importing this struct
    |
1   + use fluent_ai_http3::HttpClient;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/cognitive/manager.rs:154:39
    |
154 |         let quantum_router = Arc::new(futures_util::executor::block_on(QuantumRouter::new(
    |                                       ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
    |
11  + use futures::executor;
    |
help: if you import `executor`, refer to it directly
    |
154 -         let quantum_router = Arc::new(futures_util::executor::block_on(QuantumRouter::new(
154 +         let quantum_router = Arc::new(executor::block_on(QuantumRouter::new(
    |

error[E0412]: cannot find type `ModelConfig` in this scope
   --> packages/provider/src/clients/mistral/completion.rs:537:22
    |
537 |     config: &'static ModelConfig,
    |                      ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
1   + use crate::domain::chat::config::ModelConfig;
    |
1   + use fluent_ai_domain::chat::config::ModelConfig;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/cognitive/manager.rs:273:13
    |
273 |             futures_util::executor::block_on(self.quantum_router.route_query(&enhanced_query))
    |             ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
    |
11  + use futures::executor;
    |
help: if you import `executor`, refer to it directly
    |
273 -             futures_util::executor::block_on(self.quantum_router.route_query(&enhanced_query))
273 +             executor::block_on(self.quantum_router.route_query(&enhanced_query))
    |

error[E0422]: cannot find struct, variant or union type `ModelConfig` in this scope
   --> packages/provider/src/clients/mistral/completion.rs:638:23
    |
638 |         let config = &ModelConfig {
    |                       ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
1   + use crate::domain::chat::config::ModelConfig;
    |
1   + use fluent_ai_domain::chat::config::ModelConfig;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/manager.rs:303:34
    |
303 |         let mut metadata_fields: ArrayVec<(&str, Value), 16> = ArrayVec::new();
    |                                  ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
11  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpClient`
   --> packages/provider/src/clients/mistral/completion.rs:655:21
    |
655 |             client: HttpClient::with_config(HttpConfig::streaming_optimized())
    |                     ^^^^^^^^^^ use of undeclared type `HttpClient`
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpClient` exists but is inaccessible
help: consider importing this struct
    |
1   + use fluent_ai_http3::HttpClient;
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/memory/src/cognitive/manager.rs:303:64
    |
303 |         let mut metadata_fields: ArrayVec<(&str, Value), 16> = ArrayVec::new();
    |                                                                ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
11  + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of undeclared type `HttpConfig`
   --> packages/provider/src/clients/mistral/completion.rs:655:45
    |
655 |             client: HttpClient::with_config(HttpConfig::streaming_optimized())
    |                                             ^^^^^^^^^^ use of undeclared type `HttpConfig`
    |
    = note: struct `crate::image_processing::factory::batch_processing::HttpConfig` exists but is inaccessible
help: consider importing this struct
    |
1   + use fluent_ai_http3::HttpConfig;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/cognitive/manager.rs:370:28
    |
370 |         let mut response = futures_util::executor::block_on(query).map_err(|e| {
    |                            ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
    |
11  + use futures::executor;
    |
help: if you import `executor`, refer to it directly
    |
370 -         let mut response = futures_util::executor::block_on(query).map_err(|e| {
370 +         let mut response = executor::block_on(query).map_err(|e| {
    |

error[E0412]: cannot find type `EmbeddingModel` in this scope
  --> packages/provider/src/clients/mistral/embedding.rs:17:6
   |
17 | impl EmbeddingModel {
   |      ^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
1  + use crate::EmbeddingModel;
   |
1  + use crate::domain::context::EmbeddingModel;
   |
1  + use crate::domain::embedding::EmbeddingModel;
   |
1  + use crate::embeddings::EmbeddingModel;
   |
     and 3 other candidates

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/cognitive/manager.rs:409:13
    |
409 |             futures_util::executor::block_on(self.quantum_router.route_query(query))?;
    |             ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
    |
11  + use futures::executor;
    |
help: if you import `executor`, refer to it directly
    |
409 -             futures_util::executor::block_on(self.quantum_router.route_query(query))?;
409 +             executor::block_on(self.quantum_router.route_query(query))?;
    |

error[E0046]: not all trait items implemented, missing: `prompt`
   --> packages/fluent-ai/src/agent/builder.rs:103:1
    |
103 | impl CompletionModel for ModelAdapter {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `prompt` in implementation
    |
    = help: implement the missing item: `fn prompt(&self, _: fluent_ai_domain::Prompt, _: &CompletionParams) -> fluent_ai_async::AsyncStream<fluent_ai_domain::context::CompletionChunk> { todo!() }`

error[E0412]: cannot find type `EmbeddingModel` in this scope
  --> packages/provider/src/clients/mistral/embedding.rs:26:37
   |
26 | impl embeddings::EmbeddingModel for EmbeddingModel {
   |                                     ^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
1  + use crate::EmbeddingModel;
   |
1  + use crate::domain::context::EmbeddingModel;
   |
1  + use crate::domain::embedding::EmbeddingModel;
   |
1  + use crate::embeddings::EmbeddingModel;
   |
     and 3 other candidates

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/cognitive/manager.rs:494:22
    |
494 |         let scored = futures_util::executor::block_on(
    |                      ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
    |
11  + use futures::executor;
    |
help: if you import `executor`, refer to it directly
    |
494 -         let scored = futures_util::executor::block_on(
494 +         let scored = executor::block_on(
    |

error[E0425]: cannot find function `is_chat_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:410:29
    |
410 |                 if !models::is_chat_model(model) {
    |                             ^^^^^^^^^^^^^ not found in `models`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/cognitive/manager.rs:544:13
    |
544 |             futures_util::executor::block_on(evolution.evolve_if_needed())
    |             ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
    |
11  + use futures::executor;
    |
help: if you import `executor`, refer to it directly
    |
544 -             futures_util::executor::block_on(evolution.evolve_if_needed())
544 +             executor::block_on(evolution.evolve_if_needed())
    |

error[E0425]: cannot find value `CHAT_MODELS` in module `models`
   --> packages/provider/src/clients/openai/client.rs:414:33
    |
414 |                         models::CHAT_MODELS,
    |                                 ^^^^^^^^^^^ not found in `models`

error[E0119]: conflicting implementations of trait `fluent_ai_domain::agent::types::ConversationHistoryArgs` for type `(fluent_ai_domain::MessageRole, &str)`
   --> packages/fluent-ai/src/builders/agent_role.rs:691:1
    |
679 |   impl ConversationHistoryArgs for (MessageRole, &str) {
    |   ---------------------------------------------------- first implementation here
...
691 | / impl<T1, T2> ConversationHistoryArgs for (T1, T2)
692 | | where
693 | |     T1: ConversationHistoryArgs,
694 | |     T2: ConversationHistoryArgs,
    | |________________________________^ conflicting implementation for `(fluent_ai_domain::MessageRole, &str)`
    |
    = note: upstream crates may add a new impl of trait `fluent_ai_domain::agent::types::ConversationHistoryArgs` for type `fluent_ai_domain::MessageRole` in future versions
    = note: upstream crates may add a new impl of trait `fluent_ai_domain::agent::types::ConversationHistoryArgs` for type `&str` in future versions

error[E0117]: only traits defined in the current crate can be implemented for arbitrary types
   --> packages/fluent-ai/src/builders/agent_role.rs:679:1
    |
679 | impl ConversationHistoryArgs for (MessageRole, &str) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-------------------
    |                                  |
    |                                  this is not defined in the current crate because tuples are always foreign
    |
    = note: impl doesn't have any local type before any uncovered type parameters
    = note: for more information see https://doc.rust-lang.org/reference/items/implementations.html#orphan-rules
    = note: define and implement a trait or new type instead

error[E0117]: only traits defined in the current crate can be implemented for arbitrary types
   --> packages/fluent-ai/src/builders/agent_role.rs:685:1
    |
685 | impl ConversationHistoryArgs for (MessageRole, String) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---------------------
    |                                  |
    |                                  this is not defined in the current crate because tuples are always foreign
    |
    = note: impl doesn't have any local type before any uncovered type parameters
    = note: for more information see https://doc.rust-lang.org/reference/items/implementations.html#orphan-rules
    = note: define and implement a trait or new type instead

error[E0117]: only traits defined in the current crate can be implemented for arbitrary types
   --> packages/fluent-ai/src/builders/agent_role.rs:691:1
    |
691 |   impl<T1, T2> ConversationHistoryArgs for (T1, T2)
    |   ^                                        -------- this is not defined in the current crate because tuples are always foreign
    |  _|
    | |
692 | | where
693 | |     T1: ConversationHistoryArgs,
694 | |     T2: ConversationHistoryArgs,
    | |________________________________^
    |
    = note: impl doesn't have any local type before any uncovered type parameters
    = note: for more information see https://doc.rust-lang.org/reference/items/implementations.html#orphan-rules
    = note: define and implement a trait or new type instead

error[E0117]: only traits defined in the current crate can be implemented for arbitrary types
   --> packages/fluent-ai/src/builders/agent_role.rs:711:1
    |
711 |   impl<T1, T2, T3> ConversationHistoryArgs for (T1, T2, T3)
    |   ^                                            ------------ this is not defined in the current crate because tuples are always foreign
    |  _|
    | |
712 | | where
713 | |     T1: ConversationHistoryArgs,
714 | |     T2: ConversationHistoryArgs,
715 | |     T3: ConversationHistoryArgs,
    | |________________________________^
    |
    = note: impl doesn't have any local type before any uncovered type parameters
    = note: for more information see https://doc.rust-lang.org/reference/items/implementations.html#orphan-rules
    = note: define and implement a trait or new type instead

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/cognitive/manager.rs:635:17
    |
635 |                 futures_util::executor::block_on(self.legacy_manager.get_memory(&related_id))
    |                 ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
    |
11  + use futures::executor;
    |
help: if you import `executor`, refer to it directly
    |
635 -                 futures_util::executor::block_on(self.legacy_manager.get_memory(&related_id))
635 +                 executor::block_on(self.legacy_manager.get_memory(&related_id))
    |

error[E0425]: cannot find value `GPT_4O` in module `models`
   --> packages/provider/src/clients/openai/client.rs:415:33
    |
415 |                         models::GPT_4O,
    |                                 ^^^^^^ not found in `models`
    |
help: consider importing this constant
    |
15  + use model_info::providers::openai::string_utils::GPT_4O;
    |
help: if you import `GPT_4O`, refer to it directly
    |
415 -                         models::GPT_4O,
415 +                         GPT_4O,
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/cognitive/manager.rs:674:13
    |
674 |             futures_util::executor::block_on(self.state_manager.add_state(tracking_state));
    |             ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
    |
11  + use futures::executor;
    |
help: if you import `executor`, refer to it directly
    |
674 -             futures_util::executor::block_on(self.state_manager.add_state(tracking_state));
674 +             executor::block_on(self.state_manager.add_state(tracking_state));
    |

error[E0425]: cannot find function `is_embedding_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:421:29
    |
421 |                 if !models::is_embedding_model(model) {
    |                             ^^^^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use model_info::providers::openai::string_utils::is_embedding_model;
    |
help: if you import `is_embedding_model`, refer to it directly
    |
421 -                 if !models::is_embedding_model(model) {
421 +                 if !is_embedding_model(model) {
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/cognitive/manager.rs:690:30
    |
690 |         let related_states = futures_util::executor::block_on(
    |                              ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
    |
11  + use futures::executor;
    |
help: if you import `executor`, refer to it directly
    |
690 -         let related_states = futures_util::executor::block_on(
690 +         let related_states = executor::block_on(
    |

error[E0116]: cannot define inherent `impl` for a type outside of the crate where the type is defined
   --> packages/fluent-ai/src/builders/model/model_info_builder.rs:158:1
    |
158 | impl ModelInfo {
    | ^^^^^^^^^^^^^^ impl for type defined outside of crate
    |
    = note: define and implement a trait or new type instead

error[E0425]: cannot find value `EMBEDDING_MODELS` in module `models`
   --> packages/provider/src/clients/openai/client.rs:425:33
    |
425 |                         models::EMBEDDING_MODELS,
    |                                 ^^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this constant
    |
15  + use model_info::providers::openai::string_utils::EMBEDDING_MODELS;
    |
help: if you import `EMBEDDING_MODELS`, refer to it directly
    |
425 -                         models::EMBEDDING_MODELS,
425 +                         EMBEDDING_MODELS,
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/cognitive/manager.rs:711:30
    |
711 |         let scored_weights = futures_util::executor::block_on(
    |                              ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
    |
11  + use futures::executor;
    |
help: if you import `executor`, refer to it directly
    |
711 -         let scored_weights = futures_util::executor::block_on(
711 +         let scored_weights = executor::block_on(
    |

error[E0425]: cannot find value `TEXT_EMBEDDING_3_LARGE` in module `models`
   --> packages/provider/src/clients/openai/client.rs:426:33
    |
426 |                         models::TEXT_EMBEDDING_3_LARGE,
    |                                 ^^^^^^^^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this constant
    |
15  + use model_info::providers::openai::string_utils::TEXT_EMBEDDING_3_LARGE;
    |
help: if you import `TEXT_EMBEDDING_3_LARGE`, refer to it directly
    |
426 -                         models::TEXT_EMBEDDING_3_LARGE,
426 +                         TEXT_EMBEDDING_3_LARGE,
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/manager.rs:824:35
    |
824 |             let mut word_hashes = HashMap::with_capacity(words.len());
    |                                   ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
11  + use std::collections::HashMap;
    |
11  + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find function `is_audio_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:432:29
    |
432 |                 if !models::is_audio_model(model) {
    |                             ^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use crate::clients::openai::messages::is_audio_model;
    |
help: if you import `is_audio_model`, refer to it directly
    |
432 -                 if !models::is_audio_model(model) {
432 +                 if !is_audio_model(model) {
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
    --> packages/memory/src/cognitive/manager.rs:1125:30
     |
1125 |                 let stored = futures_util::executor::block_on(
     |                              ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
     |
     = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
     |
11   + use futures::executor;
     |
help: if you import `executor`, refer to it directly
     |
1125 -                 let stored = futures_util::executor::block_on(
1125 +                 let stored = executor::block_on(
     |

error[E0425]: cannot find value `AUDIO_MODELS` in module `models`
   --> packages/provider/src/clients/openai/client.rs:436:33
    |
436 |                         models::AUDIO_MODELS,
    |                                 ^^^^^^^^^^^^ not found in `models`

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/fluent-ai/src/embedding/cognitive_embedder.rs:103:24
    |
103 |     pub entanglements: SmallVec<[QuantumEntanglement; 4]>}
    |                        ^^^^^^^^ ------------------------ supplied 1 generic argument
    |                        |
    |                        expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
103 |     pub entanglements: SmallVec<[QuantumEntanglement; 4], N>}
    |                                                         +++

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
    --> packages/memory/src/cognitive/manager.rs:1148:26
     |
1148 |             let result = futures_util::executor::block_on(legacy_result)
     |                          ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
     |
     = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
     |
11   + use futures::executor;
     |
help: if you import `executor`, refer to it directly
     |
1148 -             let result = futures_util::executor::block_on(legacy_result)
1148 +             let result = executor::block_on(legacy_result)
     |

error[E0425]: cannot find value `WHISPER_1` in module `models`
   --> packages/provider/src/clients/openai/client.rs:437:33
    |
437 |                         models::WHISPER_1,
    |                                 ^^^^^^^^^ not found in `models`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
    --> packages/memory/src/cognitive/manager.rs:1163:31
     |
1163 |                 let updated = futures_util::executor::block_on(
     |                               ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
     |
     = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`
help: consider importing this module
     |
11   + use futures::executor;
     |
help: if you import `executor`, refer to it directly
     |
1163 -                 let updated = futures_util::executor::block_on(
1163 +                 let updated = executor::block_on(
     |

error[E0425]: cannot find function `is_tts_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:443:29
    |
443 |                 if !models::is_tts_model(model) {
    |                             ^^^^^^^^^^^^ not found in `models`

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/state.rs:105:24
    |
105 |     states: Arc<RwLock<HashMap<Uuid, CognitiveState>>>,
    |                        ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `TTS_MODELS` in module `models`
   --> packages/provider/src/clients/openai/client.rs:447:33
    |
447 |                         models::TTS_MODELS,
    |                                 ^^^^^^^^^^ not found in `models`

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/state.rs:114:17
    |
114 |     by_concept: HashMap<String, Vec<Uuid>>,
    |                 ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `TTS_1` in module `models`
   --> packages/provider/src/clients/openai/client.rs:448:33
    |
448 |                         models::TTS_1,
    |                                 ^^^^^ not found in `models`

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/state.rs:116:16
    |
116 |     by_domain: HashMap<String, Vec<Uuid>>,
    |                ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find function `is_vision_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:454:29
    |
454 |                 if !models::is_vision_model(model) {
    |                             ^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use crate::clients::openai::messages::is_vision_model;
    |
help: if you import `is_vision_model`, refer to it directly
    |
454 -                 if !models::is_vision_model(model) {
454 +                 if !is_vision_model(model) {
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/state.rs:417:42
    |
417 |             states: Arc::new(RwLock::new(HashMap::new())),
    |                                          ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `VISION_MODELS` in module `models`
   --> packages/provider/src/clients/openai/client.rs:458:33
    |
458 |                         models::VISION_MODELS,
    |                                 ^^^^^^^^^^^^^ not found in `models`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/state.rs:722:25
    |
722 |             by_concept: HashMap::new(),
    |                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `GPT_4O` in module `models`
   --> packages/provider/src/clients/openai/client.rs:459:33
    |
459 |                         models::GPT_4O,
    |                                 ^^^^^^ not found in `models`
    |
help: consider importing this constant
    |
15  + use model_info::providers::openai::string_utils::GPT_4O;
    |
help: if you import `GPT_4O`, refer to it directly
    |
459 -                         models::GPT_4O,
459 +                         GPT_4O,
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/state.rs:723:24
    |
723 |             by_domain: HashMap::new(),
    |                        ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find function `is_supported_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:465:29
    |
465 |                 if !models::is_supported_model(model) {
    |                             ^^^^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use model_info::providers::openai::string_utils::is_supported_model;
    |
help: if you import `is_supported_model`, refer to it directly
    |
465 -                 if !models::is_supported_model(model) {
465 +                 if !is_supported_model(model) {
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/quantum/entanglement.rs:17:16
   |
17 |     pub nodes: HashMap<String, QuantumNode>,
   |                ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0425]: cannot find value `ALL_MODELS` in module `models`
   --> packages/provider/src/clients/openai/client.rs:469:33
    |
469 |                         models::ALL_MODELS,
    |                                 ^^^^^^^^^^ not found in `models`
    |
help: consider importing this constant
    |
15  + use model_info::providers::openai::string_utils::ALL_MODELS;
    |
help: if you import `ALL_MODELS`, refer to it directly
    |
469 -                         models::ALL_MODELS,
469 +                         ALL_MODELS,
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/quantum/entanglement.rs:18:16
   |
18 |     pub edges: HashMap<(String, String), EntanglementEdge>,
   |                ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0425]: cannot find value `GPT_4O` in module `models`
   --> packages/provider/src/clients/openai/client.rs:470:33
    |
470 |                         models::GPT_4O,
    |                                 ^^^^^^ not found in `models`
    |
help: consider importing this constant
    |
15  + use model_info::providers::openai::string_utils::GPT_4O;
    |
help: if you import `GPT_4O`, refer to it directly
    |
470 -                         models::GPT_4O,
470 +                         GPT_4O,
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum/entanglement.rs:147:20
    |
147 |             nodes: HashMap::new(),
    |                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find function `is_supported_model` in module `models`
   --> packages/provider/src/clients/openai/client.rs:482:21
    |
482 |         if !models::is_supported_model(model) {
    |                     ^^^^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use model_info::providers::openai::string_utils::is_supported_model;
    |
help: if you import `is_supported_model`, refer to it directly
    |
482 -         if !models::is_supported_model(model) {
482 +         if !is_supported_model(model) {
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum/entanglement.rs:148:20
    |
148 |             edges: HashMap::new(),
    |                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `ALL_MODELS` in module `models`
   --> packages/provider/src/clients/openai/client.rs:486:25
    |
486 |                 models::ALL_MODELS,
    |                         ^^^^^^^^^^ not found in `models`
    |
help: consider importing this constant
    |
15  + use model_info::providers::openai::string_utils::ALL_MODELS;
    |
help: if you import `ALL_MODELS`, refer to it directly
    |
486 -                 models::ALL_MODELS,
486 +                 ALL_MODELS,
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum/entanglement.rs:302:30
    |
302 |         let mut parent_map = HashMap::new();
    |                              ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `GPT_4O` in module `models`
   --> packages/provider/src/clients/openai/client.rs:487:25
    |
487 |                 models::GPT_4O,
    |                         ^^^^^^ not found in `models`
    |
help: consider importing this constant
    |
15  + use model_info::providers::openai::string_utils::GPT_4O;
    |
help: if you import `GPT_4O`, refer to it directly
    |
487 -                 models::GPT_4O,
487 +                 GPT_4O,
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/quantum/error_correction.rs:14:32
   |
14 |     pub logical_qubit_mapping: HashMap<String, LogicalQubit>,
   |                                ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0425]: cannot find function `model_family` in module `models`
   --> packages/provider/src/clients/openai/client.rs:494:29
    |
494 |             family: models::model_family(model).unwrap_or("unknown"),
    |                             ^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use model_info::providers::openai::string_utils::model_family;
    |
help: if you import `model_family`, refer to it directly
    |
494 -             family: models::model_family(model).unwrap_or("unknown"),
494 +             family: model_family(model).unwrap_or("unknown"),
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/quantum/error_correction.rs:129:23
    |
129 |     pub lookup_table: HashMap<Vec<bool>, Vec<QuantumGate>>,
    |                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find function `model_generation` in module `models`
   --> packages/provider/src/clients/openai/client.rs:495:33
    |
495 |             generation: models::model_generation(model).unwrap_or("unknown"),
    |                                 ^^^^^^^^^^^^^^^^ not found in `models`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum/error_correction.rs:149:36
    |
149 |             logical_qubit_mapping: HashMap::new(),
    |                                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find function `context_length` in module `models`
   --> packages/provider/src/clients/openai/client.rs:496:34
    |
496 |             max_context: models::context_length(model),
    |                                  ^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use model_info::providers::openai::string_utils::context_length;
    |
help: if you import `context_length`, refer to it directly
    |
496 -             max_context: models::context_length(model),
496 +             max_context: context_length(model),
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum/error_correction.rs:548:32
    |
548 |         let mut lookup_table = HashMap::new();
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find function `supports_streaming` in module `models`
   --> packages/provider/src/clients/openai/client.rs:497:41
    |
497 |             supports_streaming: models::supports_streaming(model),
    |                                         ^^^^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use model_info::providers::openai::string_utils::supports_streaming;
    |
help: if you import `supports_streaming`, refer to it directly
    |
497 -             supports_streaming: models::supports_streaming(model),
497 +             supports_streaming: supports_streaming(model),
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/quantum/hardware.rs:87:22
   |
87 |     pub gate_errors: HashMap<String, f64>,
   |                      ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0425]: cannot find function `supports_tools` in module `models`
   --> packages/provider/src/clients/openai/client.rs:498:37
    |
498 |             supports_tools: models::supports_tools(model),
    |                                     ^^^^^^^^^^^^^^ not found in `models`

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/fluent-ai/src/embedding/resilience/circuit_breaker.rs:122:35
    |
122 |     pub failure_error_categories: SmallVec<[ErrorCategory; 8]>}
    |                                   ^^^^^^^^ ------------------ supplied 1 generic argument
    |                                   |
    |                                   expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
122 |     pub failure_error_categories: SmallVec<[ErrorCategory; 8], N>}
    |                                                              +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/fluent-ai/src/embedding/resilience/circuit_breaker.rs:120:32
    |
120 |     pub trigger_failure_types: SmallVec<[FailureType; 3]>,
    |                                ^^^^^^^^ ---------------- supplied 1 generic argument
    |                                |
    |                                expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
120 |     pub trigger_failure_types: SmallVec<[FailureType; 3], N>,
    |                                                         +++

error[E0425]: cannot find function `supports_vision` in module `models`
   --> packages/provider/src/clients/openai/client.rs:499:38
    |
499 |             supports_vision: models::supports_vision(model),
    |                                      ^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing one of these functions
    |
15  + use crate::clients::openai::vision::supports_vision;
    |
15  + use model_info::providers::openai::string_utils::supports_vision;
    |
help: if you import `supports_vision`, refer to it directly
    |
499 -             supports_vision: models::supports_vision(model),
499 +             supports_vision: supports_vision(model),
    |

error[E0425]: cannot find function `supports_audio` in module `models`
   --> packages/provider/src/clients/openai/client.rs:500:37
    |
500 |             supports_audio: models::supports_audio(model),
    |                                     ^^^^^^^^^^^^^^ not found in `models`

error[E0425]: cannot find function `temperature_range` in module `models`
   --> packages/provider/src/clients/openai/client.rs:501:40
    |
501 |             temperature_range: models::temperature_range(model),
    |                                        ^^^^^^^^^^^^^^^^^ not found in `models`
    |
help: consider importing this function
    |
15  + use model_info::providers::openai::string_utils::temperature_range;
    |
help: if you import `temperature_range`, refer to it directly
    |
501 -             temperature_range: models::temperature_range(model),
501 +             temperature_range: temperature_range(model),
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum/hardware.rs:198:31
    |
198 |         let mut gate_errors = HashMap::new();
    |                               ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `CHAT_COMPLETIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:538:57
    |
538 |             EndpointType::ChatCompletions => endpoints::CHAT_COMPLETIONS,
    |                                                         ^^^^^^^^^^^^^^^^ not found in `endpoints`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum/hardware.rs:221:26
    |
221 |             gate_errors: HashMap::new(),
    |                          ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `EMBEDDINGS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:539:52
    |
539 |             EndpointType::Embeddings => endpoints::EMBEDDINGS,
    |                                                    ^^^^^^^^^^ not found in `endpoints`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum/hardware.rs:231:31
    |
231 |         let mut gate_errors = HashMap::new();
    |                               ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `AUDIO_TRANSCRIPTIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:540:60
    |
540 |             EndpointType::AudioTranscription => endpoints::AUDIO_TRANSCRIPTIONS,
    |                                                            ^^^^^^^^^^^^^^^^^^^^ not found in `endpoints`

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/quantum/router.rs:28:49
   |
28 |     superposition_states: Arc<std::sync::RwLock<HashMap<String, SuperpositionState>>>,
   |                                                 ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
10 + use std::collections::HashMap;
   |
10 + use fluent_ai_domain::HashMap;
   |

error[E0425]: cannot find value `AUDIO_TRANSLATIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:541:58
    |
541 |             EndpointType::AudioTranslation => endpoints::AUDIO_TRANSLATIONS,
    |                                                          ^^^^^^^^^^^^^^^^^^ not found in `endpoints`

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/cognitive/quantum/router.rs:97:28
   |
97 |     pub quantum_registers: HashMap<String, QuantumRegister>,
   |                            ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
10 + use std::collections::HashMap;
   |
10 + use fluent_ai_domain::HashMap;
   |

error[E0425]: cannot find value `AUDIO_SPEECH` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:542:54
    |
542 |             EndpointType::TextToSpeech => endpoints::AUDIO_SPEECH,
    |                                                      ^^^^^^^^^^^^ not found in `endpoints`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum/router.rs:221:32
    |
221 |             quantum_registers: HashMap::new(),
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `CHAT_COMPLETIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:543:56
    |
543 |             EndpointType::VisionAnalysis => endpoints::CHAT_COMPLETIONS, /* Vision uses chat completions */
    |                                                        ^^^^^^^^^^^^^^^^ not found in `endpoints`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum/router.rs:230:67
    |
230 |             superposition_states: Arc::new(std::sync::RwLock::new(HashMap::new())),
    |                                                                   ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `MODELS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:544:48
    |
544 |             EndpointType::Models => endpoints::MODELS,
    |                                                ^^^^^^ not found in `endpoints`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum/router.rs:601:31
    |
601 |             routing_metadata: HashMap::new()}
    |                               ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find value `FILES` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:545:47
    |
545 |             EndpointType::Files => endpoints::FILES,
    |                                               ^^^^^ not found in `endpoints`

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:142:13
    |
142 |     pub id: ArrayVec<u8, 64>,
    |             ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0425]: cannot find value `FINE_TUNING` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:546:52
    |
546 |             EndpointType::FineTuning => endpoints::FINE_TUNING,
    |                                                    ^^^^^^^^^^^ not found in `endpoints`

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:147:31
    |
147 |     pub children: Arc<SkipMap<ArrayVec<u8, 64>, ArrayVec<u8, 64>>>,
    |                               ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0425]: cannot find value `MODERATIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:547:53
    |
547 |             EndpointType::Moderations => endpoints::MODERATIONS}
    |                                                     ^^^^^^^^^^^ not found in `endpoints`

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:147:49
    |
147 |     pub children: Arc<SkipMap<ArrayVec<u8, 64>, ArrayVec<u8, 64>>>,
    |                                                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
  --> packages/fluent-ai/src/engine/mod.rs:49:25
   |
49 |     fn model(&self) -> &fluent_ai_provider::Models;
   |                         ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
   |
   = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `loader`
  --> packages/fluent-ai/src/fluent.rs:69:37
   |
69 |     pub fn loader(pattern: &str) -> loader::LoaderBuilder<std::path::PathBuf> {
   |                                     ^^^^^^ use of unresolved module or unlinked crate `loader`
   |
   = help: if you wanted to use a crate named `loader`, use `cargo add loader` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `conversation`
  --> packages/fluent-ai/src/fluent.rs:79:30
   |
79 |     pub fn conversation() -> conversation::ConversationBuilder {
   |                              ^^^^^^^^^^^^ use of unresolved module or unlinked crate `conversation`
   |
   = help: if you wanted to use a crate named `conversation`, use `cargo add conversation` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
   --> packages/fluent-ai/src/completion/builder.rs:240:51
    |
240 | impl<S> AnthropicBuilderExt for CompletionBuilder<fluent_ai_provider::Models, S> {
    |                                                   ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
    |
    = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
   --> packages/fluent-ai/src/completion/mod.rs:123:17
    |
123 |     type Model: fluent_ai_provider::Model;
    |                 ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
    |
    = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
  --> packages/fluent-ai/src/agent/builder.rs:63:20
   |
63 |     model_variant: fluent_ai_provider::Models,
   |                    ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
   |
   = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
  --> packages/fluent-ai/src/agent/builder.rs:64:17
   |
64 |     model_info: fluent_ai_provider::ModelInfoData}
   |                 ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
   |
   = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
  --> packages/fluent-ai/src/agent/builder.rs:67:31
   |
67 |     pub fn new(model_variant: fluent_ai_provider::Models) -> Self {
   |                               ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
   |
   = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
   --> packages/fluent-ai/src/agent/builder.rs:131:38
    |
131 |     pub fn openai() -> ModelSelector<fluent_ai_provider::Models> {
    |                                      ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
    |
    = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
   --> packages/fluent-ai/src/agent/builder.rs:136:41
    |
136 |     pub fn anthropic() -> ModelSelector<fluent_ai_provider::Models> {
    |                                         ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
    |
    = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `fluent_ai_provider`
   --> packages/fluent-ai/src/agent/builder.rs:212:64
    |
212 |     fn new_with_model(model_name: &'static str, model_variant: fluent_ai_provider::Models) -> Self {
    |                                                                ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `fluent_ai_provider`
    |
    = help: if you wanted to use a crate named `fluent_ai_provider`, use `cargo add fluent_ai_provider` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `image`
   --> packages/fluent-ai/src/embedding/image.rs:206:35
    |
206 |         let dynamic_image = match image::load_from_memory(&image.data) {
    |                                   ^^^^^ use of unresolved module or unlinked crate `image`
    |
help: to make use of source file packages/fluent-ai/src/embedding/image.rs, use `mod image` in this file to declare the module
   --> packages/fluent-ai/src/lib.rs:17:1
    |
17  + mod image;
    |

error[E0425]: cannot find value `CHAT_COMPLETIONS` in module `endpoints`
   --> packages/provider/src/clients/openai/client.rs:681:24
    |
681 |             endpoints::CHAT_COMPLETIONS,
    |                        ^^^^^^^^^^^^^^^^ not found in `endpoints`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `image`
   --> packages/fluent-ai/src/embedding/image.rs:237:21
    |
237 |                     image::Rgb([gray_pixel, gray_pixel, gray_pixel])
    |                     ^^^^^ use of unresolved module or unlinked crate `image`
    |
help: to make use of source file packages/fluent-ai/src/embedding/image.rs, use `mod image` in this file to declare the module
   --> packages/fluent-ai/src/lib.rs:17:1
    |
17  + mod image;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `image`
   --> packages/fluent-ai/src/embedding/image.rs:858:32
    |
858 |         let dimensions = match image::load_from_memory(&data) {
    |                                ^^^^^ use of unresolved module or unlinked crate `image`
    |
help: to make use of source file packages/fluent-ai/src/embedding/image.rs, use `mod image` in this file to declare the module
   --> packages/fluent-ai/src/lib.rs:17:1
    |
17  + mod image;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `crossbeam_skiplist`
   --> packages/fluent-ai/src/embedding/providers.rs:832:15
    |
832 |     l1_cache: crossbeam_skiplist::SkipMap<String, CachedEmbedding>,
    |               ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `crossbeam_skiplist`
    |
help: there is a crate or module with a similar name
    |
832 -     l1_cache: crossbeam_skiplist::SkipMap<String, CachedEmbedding>,
832 +     l1_cache: crossbeam_utils::SkipMap<String, CachedEmbedding>,
    |

error[E0425]: cannot find function `create_cross_llm_enhancer` in this scope
   --> packages/fluent-ai/src/workflow/prompt_enhancement.rs:667:20
    |
646 | pub fn create_cross_provider_enhancer() -> CrossProviderEnhancer {
    | ---------------------------------------------------------------- similarly named function `create_cross_provider_enhancer` defined here
...
667 |     let enhancer = create_cross_llm_enhancer();
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `create_cross_provider_enhancer`

Some errors have detailed explanations: E0046, E0053, E0107, E0116, E0117, E0119, E0403, E0404, E0405...
For more information about an error, try `rustc --explain E0046`.
error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:148:38
    |
148 |     pub untried_actions: Arc<SkipMap<ArrayVec<u8, 128>, bool>>,
    |                                      ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: could not find `CredentialSource` in `security`
   --> packages/provider/src/clients/openai/client.rs:856:34
    |
856 |                 crate::security::CredentialSource::Runtime {
    |                                  ^^^^^^^^^^^^^^^^ could not find `CredentialSource` in `security`
    |
help: a struct with a similar name exists
    |
856 -                 crate::security::CredentialSource::Runtime {
856 +                 crate::security::CredentialConfig::Runtime {
    |
help: consider importing this enum
    |
15  + use crate::security::credentials::CredentialSource;
    |
help: if you import `CredentialSource`, refer to it directly
    |
856 -                 crate::security::CredentialSource::Runtime {
856 +                 CredentialSource::Runtime {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:152:20
    |
152 |     pub fn new(id: ArrayVec<u8, 64>, state: QuantumNodeState) -> Self {
    |                    ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `CredentialStatistics` in module `crate::security`
   --> packages/provider/src/clients/openai/client.rs:877:73
    |
877 |     pub async fn get_credential_statistics() -> Result<crate::security::CredentialStatistics> {
    |                                                                         ^^^^^^^^^^^^^^^^^^^^ not found in `crate::security`
    |
help: consider importing this struct
    |
15  + use crate::security::credentials::CredentialStatistics;
    |
help: if you import `CredentialStatistics`, refer to it directly
    |
877 -     pub async fn get_credential_statistics() -> Result<crate::security::CredentialStatistics> {
877 +     pub async fn get_credential_statistics() -> Result<CredentialStatistics> {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:185:27
    |
185 |     pub tree: Arc<SkipMap<ArrayVec<u8, 64>, Arc<QuantumMCTSNode>>>,
    |                           ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ModelConfig` in this scope
  --> packages/provider/src/clients/openai/completion.rs:47:22
   |
47 |     config: &'static ModelConfig,
   |                      ^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
15 + use crate::domain::chat::config::ModelConfig;
   |
15 + use fluent_ai_domain::chat::config::ModelConfig;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:186:18
    |
186 |     pub root_id: ArrayVec<u8, 64>,
    |                  ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0422]: cannot find struct, variant or union type `ModelConfig` in this scope
  --> packages/provider/src/clients/openai/completion.rs:69:30
   |
69 |         let default_config = ModelConfig {
   |                              ^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
15 + use crate::domain::chat::config::ModelConfig;
   |
15 + use fluent_ai_domain::chat::config::ModelConfig;
   |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:187:25
    |
187 |     pub user_objective: ArrayVec<u8, 256>,
    |                         ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:458:44
    |
458 |                 let messages_call = crate::providers::openai::messages::OpenAIToolCall {
    |                                            ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
458 |                 let messages_call = crate::model_info::providers::openai::messages::OpenAIToolCall {
    |                                            ++++++++++++
help: consider importing this module
    |
6   + use crate::clients::openai::messages;
    |
help: if you import `messages`, refer to it directly
    |
458 -                 let messages_call = crate::providers::openai::messages::OpenAIToolCall {
458 +                 let messages_call = messages::OpenAIToolCall {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:188:41
    |
188 |     pub entanglement_graph: Arc<SkipMap<ArrayVec<u8, 64>, SmallVec<ArrayVec<u8, 64>, 4>>>,
    |                                         ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

warning: `fluent_ai` (lib) generated 123 warnings
error: could not compile `fluent_ai` (lib) due to 300 previous errors; 123 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:461:38
    |
461 |                     function: crate::providers::openai::messages::OpenAIFunctionCall {
    |                                      ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
461 |                     function: crate::model_info::providers::openai::messages::OpenAIFunctionCall {
    |                                      ++++++++++++
help: consider importing this module
    |
6   + use crate::clients::openai::messages;
    |
help: if you import `messages`, refer to it directly
    |
461 -                     function: crate::providers::openai::messages::OpenAIFunctionCall {
461 +                     function: messages::OpenAIFunctionCall {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:188:68
    |
188 |     pub entanglement_graph: Arc<SkipMap<ArrayVec<u8, 64>, SmallVec<ArrayVec<u8, 64>, 4>>>,
    |                                                                    ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:470:40
    |
470 |                     .map(|call| crate::providers::openai::messages::OpenAIToolCall {
    |                                        ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
470 |                     .map(|call| crate::model_info::providers::openai::messages::OpenAIToolCall {
    |                                        ++++++++++++
help: consider importing this module
    |
6   + use crate::clients::openai::messages;
    |
help: if you import `messages`, refer to it directly
    |
470 -                     .map(|call| crate::providers::openai::messages::OpenAIToolCall {
470 +                     .map(|call| messages::OpenAIToolCall {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:192:33
    |
192 |     pub action_buffer: SmallVec<ArrayVec<u8, 128>, 8>}
    |                                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:473:42
    |
473 |                         function: crate::providers::openai::messages::OpenAIFunctionCall {
    |                                          ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
473 |                         function: crate::model_info::providers::openai::messages::OpenAIFunctionCall {
    |                                          ++++++++++++
help: consider importing this module
    |
6   + use crate::clients::openai::messages;
    |
help: if you import `messages`, refer to it directly
    |
473 -                         function: crate::providers::openai::messages::OpenAIFunctionCall {
473 +                         function: messages::OpenAIFunctionCall {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:265:37
    |
265 |     fn select_node(&self) -> Result<ArrayVec<u8, 64>, CognitiveError> {
    |                                     ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:486:29
    |
486 |                 Some(crate::providers::openai::OpenAIContent::Text(
    |                             ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
486 |                 Some(crate::model_info::providers::openai::OpenAIContent::Text(
    |                             ++++++++++++
help: consider importing one of these items
    |
6   + use crate::clients::openai::OpenAIContent;
    |
6   + use crate::clients::openai::messages::OpenAIContent;
    |
help: if you import `OpenAIContent`, refer to it directly
    |
486 -                 Some(crate::providers::openai::OpenAIContent::Text(
486 +                 Some(OpenAIContent::Text(
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:288:38
    |
288 |     fn best_child(&self, parent_id: &ArrayVec<u8, 64>) -> Result<ArrayVec<u8, 64>, CognitiveError> {
    |                                      ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: unresolved import
   --> packages/provider/src/clients/openai/streaming.rs:494:24
    |
494 |                 crate::providers::openai::messages::OpenAIFunctionCall {
    |                        ^^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
494 |                 crate::model_info::providers::openai::messages::OpenAIFunctionCall {
    |                        ++++++++++++
help: consider importing this module
    |
6   + use crate::clients::openai::messages;
    |
help: if you import `messages`, refer to it directly
    |
494 -                 crate::providers::openai::messages::OpenAIFunctionCall {
494 +                 messages::OpenAIFunctionCall {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:288:66
    |
288 |     fn best_child(&self, parent_id: &ArrayVec<u8, 64>) -> Result<ArrayVec<u8, 64>, CognitiveError> {
    |                                                                  ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/together/client.rs:150:34
    |
150 |     ) -> Result<fluent_ai_http3::Response, HttpError> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
150 -     ) -> Result<fluent_ai_http3::Response, HttpError> {
150 +     ) -> Result<Response, HttpError> {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:345:37
    |
345 |     fn expand_node(&self, node_id: &ArrayVec<u8, 64>) -> Result<ArrayVec<u8, 64>, CognitiveError> {
    |                                     ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/together/client.rs:165:34
    |
165 |     ) -> Result<fluent_ai_http3::Response, HttpError> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
165 -     ) -> Result<fluent_ai_http3::Response, HttpError> {
165 +     ) -> Result<Response, HttpError> {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:345:65
    |
345 |     fn expand_node(&self, node_id: &ArrayVec<u8, 64>) -> Result<ArrayVec<u8, 64>, CognitiveError> {
    |                                                                 ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/together/client.rs:182:34
    |
182 |     ) -> Result<fluent_ai_http3::Response, HttpError> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
182 -     ) -> Result<fluent_ai_http3::Response, HttpError> {
182 +     ) -> Result<Response, HttpError> {
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:394:34
    |
394 |     fn simulate(&self, node_id: &ArrayVec<u8, 64>) -> Result<Complex64, CognitiveError> {
    |                                  ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `CompletionResponse` in module `super::completion`
   --> packages/provider/src/clients/together/client.rs:552:63
    |
552 |             completion::CompletionResponse<super::completion::CompletionResponse>,
    |                                                               ^^^^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/request.rs:20:1
    |
20  | pub struct CompletionRequest {
    | ---------------------------- similarly named struct `CompletionRequest` defined here
    |
help: a struct with a similar name exists
    |
552 -             completion::CompletionResponse<super::completion::CompletionResponse>,
552 +             completion::CompletionResponse<super::completion::CompletionRequest>,
    |
help: consider importing one of these structs
    |
7   + use crate::clients::mistral::completion::CompletionResponse;
    |
7   + use crate::domain::completion::CompletionResponse;
    |
7   + use crate::domain::http::CompletionResponse;
    |
7   + use fluent_ai_domain::completion::CompletionResponse;
    |
      and 1 other candidate
help: if you import `CompletionResponse`, refer to it directly
    |
552 -             completion::CompletionResponse<super::completion::CompletionResponse>,
552 +             completion::CompletionResponse<CompletionResponse>,
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:430:19
    |
430 |         node_id: &ArrayVec<u8, 64>,
    |                   ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `CompletionResponse` in module `super::completion`
   --> packages/provider/src/clients/together/client.rs:579:78
    |
579 |             crate::streaming::StreamingCompletionResponse<super::completion::CompletionResponse>,
    |                                                                              ^^^^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/request.rs:20:1
    |
20  | pub struct CompletionRequest {
    | ---------------------------- similarly named struct `CompletionRequest` defined here
    |
help: a struct with a similar name exists
    |
579 -             crate::streaming::StreamingCompletionResponse<super::completion::CompletionResponse>,
579 +             crate::streaming::StreamingCompletionResponse<super::completion::CompletionRequest>,
    |
help: consider importing one of these structs
    |
7   + use crate::clients::mistral::completion::CompletionResponse;
    |
7   + use crate::domain::completion::CompletionResponse;
    |
7   + use crate::domain::http::CompletionResponse;
    |
7   + use fluent_ai_domain::completion::CompletionResponse;
    |
      and 1 other candidate
help: if you import `CompletionResponse`, refer to it directly
    |
579 -             crate::streaming::StreamingCompletionResponse<super::completion::CompletionResponse>,
579 +             crate::streaming::StreamingCompletionResponse<CompletionResponse>,
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:549:67
    |
549 |     fn get_possible_actions(&self, state: &CodeState) -> SmallVec<ArrayVec<u8, 128>, 8> {
    |                                                                   ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `completion`
  --> packages/provider/src/clients/together/completion.rs:57:29
   |
57 |         completion_request: completion::CompletionRequest,
   |                             ^^^^^^^^^^ use of unresolved module or unlinked crate `completion`
   |
help: to make use of source file packages/provider/src/clients/together/completion.rs, use `mod completion` in this file to declare the module
  --> packages/provider/src/lib.rs:7:1
   |
7  + mod completion;
   |
help: consider importing one of these modules
   |
12 + use crate::clients::mistral::completion;
   |
12 + use crate::clients::xai::completion;
   |
12 + use crate::domain::completion;
   |
12 + use crate::domain::http::requests::completion;
   |
     and 2 other candidates

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:573:18
    |
573 |         action: &ArrayVec<u8, 128>,
    |                  ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `completion`
   --> packages/provider/src/clients/together/completion.rs:152:6
    |
152 | impl completion::CompletionModel for TogetherCompletionModel {
    |      ^^^^^^^^^^ use of unresolved module or unlinked crate `completion`
    |
help: to make use of source file packages/provider/src/clients/together/completion.rs, use `mod completion` in this file to declare the module
   --> packages/provider/src/lib.rs:7:1
    |
7   + mod completion;
    |
help: consider importing one of these modules
    |
12  + use crate::clients::huggingface::completion;
    |
12  + use crate::clients::mistral::completion;
    |
12  + use crate::clients::xai::completion;
    |
12  + use crate::domain::completion;
    |
      and 1 other candidate

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:615:35
    |
615 |     fn generate_node_id(&self) -> ArrayVec<u8, 64> {
    |                                   ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `completion`
   --> packages/provider/src/clients/together/completion.rs:158:29
    |
158 |         completion_request: completion::CompletionRequest,
    |                             ^^^^^^^^^^ use of unresolved module or unlinked crate `completion`
    |
help: to make use of source file packages/provider/src/clients/together/completion.rs, use `mod completion` in this file to declare the module
   --> packages/provider/src/lib.rs:7:1
    |
7   + mod completion;
    |
help: consider importing one of these modules
    |
12  + use crate::clients::mistral::completion;
    |
12  + use crate::clients::xai::completion;
    |
12  + use crate::domain::completion;
    |
12  + use crate::domain::http::requests::completion;
    |
      and 2 other candidates

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:622:36
    |
622 |     fn str_to_arrayvec(s: &str) -> ArrayVec<u8, 64> {
    |                                    ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `completion`
   --> packages/provider/src/clients/together/completion.rs:159:39
    |
159 |     ) -> fluent_ai_async::AsyncStream<completion::CompletionResponse<TogetherChatResponse>> {
    |                                       ^^^^^^^^^^ use of unresolved module or unlinked crate `completion`
    |
note: module `crate::clients::openai::completion` exists but is inaccessible
   --> packages/provider/src/clients/openai/mod.rs:55:1
    |
55  | mod completion;
    | ^^^^^^^^^^^^^^^ not accessible
help: to make use of source file packages/provider/src/clients/together/completion.rs, use `mod completion` in this file to declare the module
   --> packages/provider/src/lib.rs:7:1
    |
7   + mod completion;
    |
help: consider importing one of these modules
    |
12  + use crate::clients::mistral::completion;
    |
12  + use crate::domain::completion;
    |
12  + use crate::domain::http::responses::completion;
    |
12  + use fluent_ai_domain::completion;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/memory/src/cognitive/quantum_mcts.rs:623:23
    |
623 |         let mut vec = ArrayVec::new();
    |                       ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:634:43
    |
634 |     fn str_to_action_arrayvec(s: &str) -> ArrayVec<u8, 128> {
    |                                           ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `EmbeddingModel` in this scope
  --> packages/provider/src/clients/together/embedding.rs:59:37
   |
59 | impl embeddings::EmbeddingModel for EmbeddingModel {
   |                                     ^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::EmbeddingModel;
   |
6  + use crate::domain::context::EmbeddingModel;
   |
6  + use crate::domain::embedding::EmbeddingModel;
   |
6  + use crate::embeddings::EmbeddingModel;
   |
     and 3 other candidates

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/memory/src/cognitive/quantum_mcts.rs:635:23
    |
635 |         let mut vec = ArrayVec::new();
    |                       ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `EmbeddingModel` in this scope
   --> packages/provider/src/clients/together/embedding.rs:120:6
    |
120 | impl EmbeddingModel {
    |      ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::EmbeddingModel;
    |
6   + use crate::domain::context::EmbeddingModel;
    |
6   + use crate::domain::embedding::EmbeddingModel;
    |
6   + use crate::embeddings::EmbeddingModel;
    |
      and 3 other candidates

error[E0412]: cannot find type `ArrayVec` in this scope
   --> packages/memory/src/cognitive/quantum_mcts.rs:646:51
    |
646 |     fn str_to_user_objective_arrayvec(s: &str) -> ArrayVec<u8, 256> {
    |                                                   ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `Response` in crate `fluent_ai_http3`
   --> packages/provider/src/clients/xai/client.rs:164:34
    |
164 |     ) -> Result<fluent_ai_http3::Response> {
    |                                  ^^^^^^^^ not found in `fluent_ai_http3`
    |
help: consider importing this struct
    |
7   + use http::Response;
    |
help: if you import `Response`, refer to it directly
    |
164 -     ) -> Result<fluent_ai_http3::Response> {
164 +     ) -> Result<Response> {
    |

error[E0433]: failed to resolve: use of undeclared type `ArrayVec`
   --> packages/memory/src/cognitive/quantum_mcts.rs:647:23
    |
647 |         let mut vec = ArrayVec::new();
    |                       ^^^^^^^^ use of undeclared type `ArrayVec`
    |
help: consider importing this struct
    |
6   + use arrayvec::ArrayVec;
    |

error[E0412]: cannot find type `Document` in module `completion`
   --> packages/provider/src/clients/xai/client.rs:275:32
    |
275 |     documents: Vec<completion::Document>,
    |                                ^^^^^^^^ not found in `completion`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::Document;
    |
7   + use fluent_ai_domain::Document;
    |
7   + use yyaml::parser::Document;
    |
help: if you import `Document`, refer to it directly
    |
275 -     documents: Vec<completion::Document>,
275 +     documents: Vec<Document>,
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/cognitive/quantum_orchestrator.rs:349:17
    |
349 |     ) -> Result<HashMap<String, serde_json::Value>, CognitiveError> {
    |                 ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `Document` in module `completion`
   --> packages/provider/src/clients/xai/client.rs:368:54
    |
368 |     pub fn documents(mut self, docs: Vec<completion::Document>) -> Self {
    |                                                      ^^^^^^^^ not found in `completion`
    |
help: consider importing one of these structs
    |
7   + use crate::domain::Document;
    |
7   + use fluent_ai_domain::Document;
    |
7   + use yyaml::parser::Document;
    |
help: if you import `Document`, refer to it directly
    |
368 -     pub fn documents(mut self, docs: Vec<completion::Document>) -> Self {
368 +     pub fn documents(mut self, docs: Vec<Document>) -> Self {
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/cognitive/quantum_orchestrator.rs:352:27
    |
352 |         let mut metrics = HashMap::new();
    |                           ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `CompletionResponse` in module `super::completion`
   --> packages/provider/src/clients/xai/client.rs:476:63
    |
476 |             completion::CompletionResponse<super::completion::CompletionResponse>,
    |                                                               ^^^^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/request.rs:20:1
    |
20  | pub struct CompletionRequest {
    | ---------------------------- similarly named struct `CompletionRequest` defined here
    |
help: a struct with a similar name exists
    |
476 -             completion::CompletionResponse<super::completion::CompletionResponse>,
476 +             completion::CompletionResponse<super::completion::CompletionRequest>,
    |
help: consider importing one of these structs
    |
7   + use crate::clients::mistral::completion::CompletionResponse;
    |
7   + use crate::clients::xai::client::completion::CompletionResponse;
    |
7   + use crate::domain::http::CompletionResponse;
    |
7   + use fluent_ai_domain::completion::CompletionResponse;
    |
      and 1 other candidate
help: if you import `CompletionResponse`, refer to it directly
    |
476 -             completion::CompletionResponse<super::completion::CompletionResponse>,
476 +             completion::CompletionResponse<CompletionResponse>,
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/graph/entity.rs:35:30
   |
35 |     fn attributes(&self) -> &HashMap<String, Value>;
   |                              ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
7  + use std::collections::HashMap;
   |
7  + use fluent_ai_domain::HashMap;
   |

error[E0404]: expected trait, found struct `Prompt`
   --> packages/provider/src/clients/xai/client.rs:539:10
    |
539 | impl<'a> Prompt for XAICompletionBuilder<'a, NeedsPrompt> {
    |          ^^^^^^ not a trait

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/graph/entity.rs:54:17
   |
54 |     attributes: HashMap<String, Value>}
   |                 ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
7  + use std::collections::HashMap;
   |
7  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `XaiCompletionModel` in module `completion`
   --> packages/provider/src/clients/xai/client.rs:579:30
    |
579 |     type Model = completion::XaiCompletionModel;
    |                              ^^^^^^^^^^^^^^^^^^
    |
   ::: /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/core.rs:14:1
    |
14  | pub trait CompletionModel: Send + Sync + 'static {
    | ------------------------------------------------ similarly named trait `CompletionModel` defined here
    |
help: a trait with a similar name exists
    |
579 -     type Model = completion::XaiCompletionModel;
579 +     type Model = completion::CompletionModel;
    |
help: consider importing this struct
    |
7   + use crate::clients::xai::completion::XaiCompletionModel;
    |
help: if you import `XaiCompletionModel`, refer to it directly
    |
579 -     type Model = completion::XaiCompletionModel;
579 +     type Model = XaiCompletionModel;
    |

error[E0433]: failed to resolve: could not find `XaiCompletionModel` in `completion`
   --> packages/provider/src/clients/xai/client.rs:582:21
    |
582 |         completion::XaiCompletionModel::new(self.clone(), model)
    |                     ^^^^^^^^^^^^^^^^^^ could not find `XaiCompletionModel` in `completion`
    |
help: a trait with a similar name exists
    |
582 -         completion::XaiCompletionModel::new(self.clone(), model)
582 +         completion::CompletionModel::new(self.clone(), model)
    |
help: consider importing this struct
    |
7   + use crate::clients::xai::completion::XaiCompletionModel;
    |
help: if you import `XaiCompletionModel`, refer to it directly
    |
582 -         completion::XaiCompletionModel::new(self.clone(), model)
582 +         XaiCompletionModel::new(self.clone(), model)
    |

error[E0412]: cannot find type `StreamingResponse` in module `crate::streaming`
   --> packages/provider/src/clients/xai/completion.rs:185:35
    |
185 |     ) -> Result<crate::streaming::StreamingResponse<Self::StreamingResponse>, CompletionError> {
    |                                   ^^^^^^^^^^^^^^^^^ not found in `crate::streaming`
    |
help: consider importing one of these items
    |
8   + use crate::clients::xai::completion::completion::StreamingResponse;
    |
8   + use crate::domain::http::StreamingResponse;
    |
8   + use fluent_ai_domain::completion::StreamingResponse;
    |
8   + use fluent_ai_domain::http::StreamingResponse;
    |
help: if you import `StreamingResponse`, refer to it directly
    |
185 -     ) -> Result<crate::streaming::StreamingResponse<Self::StreamingResponse>, CompletionError> {
185 +     ) -> Result<StreamingResponse<Self::StreamingResponse>, CompletionError> {
    |

error[E0433]: failed to resolve: could not find `StreamingResponse` in `streaming`
   --> packages/provider/src/clients/xai/completion.rs:203:30
    |
203 |         Ok(crate::streaming::StreamingResponse::from_sse_stream(
    |                              ^^^^^^^^^^^^^^^^^ could not find `StreamingResponse` in `streaming`
    |
help: consider importing one of these items
    |
8   + use crate::clients::xai::completion::completion::StreamingResponse;
    |
8   + use crate::domain::http::StreamingResponse;
    |
8   + use fluent_ai_domain::completion::StreamingResponse;
    |
8   + use fluent_ai_domain::http::StreamingResponse;
    |
help: if you import `StreamingResponse`, refer to it directly
    |
203 -         Ok(crate::streaming::StreamingResponse::from_sse_stream(
203 +         Ok(StreamingResponse::from_sse_stream(
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/graph/entity.rs:62:25
   |
62 |             attributes: HashMap::new()}
   |                         ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
7  + use std::collections::HashMap;
   |
7  + use fluent_ai_domain::HashMap;
   |

error[E0425]: cannot find function `process_openai_compatible_streaming_response` in module `openai`
  --> packages/provider/src/clients/xai/streaming.rs:37:17
   |
37 |         openai::process_openai_compatible_streaming_response(stream).await
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `openai`

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/graph/entity.rs:70:25
   |
70 |             attributes: HashMap::with_capacity(capacity)}
   |                         ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
7  + use std::collections::HashMap;
   |
7  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/candle_backend.rs:731:18
    |
731 |         config: &HashMap<String, serde_json::Value>,
    |                  ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/graph/entity.rs:79:55
   |
79 |     pub fn set_attributes_bulk(&mut self, attributes: HashMap<String, Value>) -> Result<()> {
   |                                                       ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
7  + use std::collections::HashMap;
   |
7  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/candle_backend.rs:839:40
    |
839 |                     let mut metadata = HashMap::new();
    |                                        ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/graph/entity.rs:128:30
    |
128 |     fn attributes(&self) -> &HashMap<String, Value> {
    |                              ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/candle_backend.rs:887:36
    |
887 |                 let mut metadata = HashMap::new();
    |                                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/graph/graph_db.rs:39:27
   |
39 | pub type NodeProperties = HashMap<String, serde_json::Value>;
   |                           ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/image_processing/factory.rs:23:25
   |
23 |         config: Option<&HashMap<String, serde_json::Value>>,
   |                         ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::builders::HashMap;
   |
6  + use crate::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/graph/graph_db.rs:166:25
    |
166 |             properties: HashMap::new(),
    |                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/image_processing/factory.rs:35:25
   |
35 |         config: Option<&HashMap<String, serde_json::Value>>,
   |                         ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::builders::HashMap;
   |
6  + use crate::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/graph/graph_db.rs:187:18
    |
187 |     pub filters: HashMap<String, serde_json::Value>}
    |                  ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/image_processing/factory.rs:77:25
   |
77 |         config: Option<&HashMap<String, serde_json::Value>>,
   |                         ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::builders::HashMap;
   |
6  + use crate::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/graph/graph_db.rs:195:22
    |
195 |             filters: HashMap::new()}
    |                      ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/image_processing/factory.rs:90:25
   |
90 |         config: Option<&HashMap<String, serde_json::Value>>,
   |                         ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
6  + use crate::builders::HashMap;
   |
6  + use crate::external::HashMap;
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/evolution.rs:120:19
    |
120 |     pub metadata: HashMap<String, Value>,
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:117:25
    |
117 |         config: Option<&HashMap<String, serde_json::Value>>,
    |                         ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::builders::HashMap;
    |
6   + use crate::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:125:25
    |
125 |         config: Option<&HashMap<String, serde_json::Value>>,
    |                         ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::builders::HashMap;
    |
6   + use crate::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:225:26
    |
225 |     embedding_providers: HashMap<String, Box<dyn ImageEmbeddingProvider>>,
    |                          ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::builders::HashMap;
    |
6   + use crate::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/factory.rs:233:34
    |
233 |             embedding_providers: HashMap::new(),
    |                                  ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::builders::HashMap;
    |
6   + use crate::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/evolution.rs:154:23
    |
154 |             metadata: HashMap::new(),
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:310:13
    |
310 |     config: HashMap<String, serde_json::Value>}
    |             ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::builders::HashMap;
    |
6   + use crate::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/evolution.rs:353:28
    |
353 |         let mut metadata = HashMap::new();
    |                            ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/factory.rs:316:21
    |
316 |             config: HashMap::new()}
    |                     ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
6   + use crate::builders::HashMap;
    |
6   + use crate::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/evolution.rs:504:24
    |
504 |         let mut graph: HashMap<String, Vec<(String, &EvolutionTransition)>> = HashMap::new();
    |                        ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:362:27
    |
362 |     pub fn build(self) -> HashMap<String, serde_json::Value> {
    |                           ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   + use crate::builders::HashMap;
    |
6   + use crate::external::HashMap;
    |
6   + use std::collections::HashMap;
    |
6   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/evolution.rs:504:79
    |
504 |         let mut graph: HashMap<String, Vec<(String, &EvolutionTransition)>> = HashMap::new();
    |                                                                               ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:378:39
    |
378 |     pub fn create_optimal_config() -> HashMap<String, serde_json::Value> {
    |                                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
375 +     use crate::builders::HashMap;
    |
375 +     use crate::external::HashMap;
    |
375 +     use std::collections::HashMap;
    |
375 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/evolution.rs:520:29
    |
520 |         let mut parent_map: HashMap<String, String> = HashMap::new();
    |                             ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:386:61
    |
386 |     pub fn create_device_config(device_type: DeviceType) -> HashMap<String, serde_json::Value> {
    |                                                             ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
375 +     use crate::builders::HashMap;
    |
375 +     use crate::external::HashMap;
    |
375 +     use std::collections::HashMap;
    |
375 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/evolution.rs:520:55
    |
520 |         let mut parent_map: HashMap<String, String> = HashMap::new();
    |                                                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:399:42
    |
399 |     pub fn create_low_memory_config() -> HashMap<String, serde_json::Value> {
    |                                          ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
375 +     use crate::builders::HashMap;
    |
375 +     use crate::external::HashMap;
    |
375 +     use std::collections::HashMap;
    |
375 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/filter.rs:30:26
   |
30 |     pub metadata: Option<HashMap<String, serde_json::Value>>,
   |                          ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/factory.rs:411:48
    |
411 |     pub fn create_high_performance_config() -> HashMap<String, serde_json::Value> {
    |                                                ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
375 +     use crate::builders::HashMap;
    |
375 +     use crate::external::HashMap;
    |
375 +     use std::collections::HashMap;
    |
375 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0405]: cannot find trait `Stream` in this scope
   --> packages/provider/src/image_processing/factory.rs:764:20
    |
764 |     inner: Box<dyn Stream<Item = Result<Vec<u8>, HttpError>> + Send + Unpin>,
    |                    ^^^^^^ not found in this scope
    |
help: consider importing this trait
    |
6   + use tokio_stream::Stream;
    |

error[E0405]: cannot find trait `Stream` in this scope
   --> packages/provider/src/image_processing/factory.rs:771:25
    |
771 |         stream: Box<dyn Stream<Item = Result<Vec<u8>, HttpError>> + Send + Unpin>,
    |                         ^^^^^^ not found in this scope
    |
help: consider importing this trait
    |
6   + use tokio_stream::Stream;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/image_processing/mod.rs:82:19
   |
82 |     pub metadata: HashMap<String, String>}
   |                   ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
7  + use crate::builders::HashMap;
   |
7  + use crate::external::HashMap;
   |
7  + use std::collections::HashMap;
   |
7  + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/graph.rs:11:12
   |
11 |     edges: HashMap<String, Vec<(String, RelationshipType, f32)>>,
   |            ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:129:23
    |
129 |     pub model_params: HashMap<String, serde_json::Value>}
    |                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/graph.rs:13:20
   |
13 |     reverse_edges: HashMap<String, Vec<(String, RelationshipType, f32)>>}
   |                    ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/mod.rs:136:27
    |
136 |             model_params: HashMap::new()}
    |                           ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:154:23
    |
154 |     pub model_params: HashMap<String, serde_json::Value>}
    |                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/memory/ops/graph.rs:19:20
   |
19 |             edges: HashMap::new(),
   |                    ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/mod.rs:164:27
    |
164 |             model_params: HashMap::new()}
    |                           ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/memory/ops/graph.rs:20:28
   |
20 |             reverse_edges: HashMap::new()}
   |                            ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:192:27
    |
192 |     pub backend_metadata: HashMap<String, serde_json::Value>}
    |                           ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/graph.rs:75:29
   |
75 |         let mut parent_map: HashMap<String, String> = HashMap::new();
   |                             ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:216:27
    |
216 |     pub backend_metadata: HashMap<String, serde_json::Value>}
    |                           ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/memory/ops/graph.rs:75:55
   |
75 |         let mut parent_map: HashMap<String, String> = HashMap::new();
   |                                                       ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:229:18
    |
229 |         config: &HashMap<String, serde_json::Value>,
    |                  ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/repository.rs:14:15
   |
14 |     memories: HashMap<String, Arc<MemoryNode>>,
   |               ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/image_processing/mod.rs:331:19
    |
331 |     pub metadata: HashMap<String, serde_json::Value>}
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/repository.rs:17:17
   |
17 |     type_index: HashMap<MemoryTypeEnum, HashSet<String>>,
   |                 ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/image_processing/mod.rs:434:32
    |
434 |             let mut metadata = HashMap::new();
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
369 +     use crate::builders::HashMap;
    |
369 +     use crate::external::HashMap;
    |
369 +     use std::collections::HashMap;
    |
369 +     use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/repository.rs:20:17
   |
20 |     user_index: HashMap<String, HashSet<String>>,
   |                 ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/security/audit.rs:155:19
    |
155 |     pub metadata: HashMap<String, String>}
    |                   ^^^^^^^
    |
   ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lib.rs:89:1
    |
89  | pub struct DashMap<K, V, S = RandomState> {
    | ----------------------------------------- similarly named struct `DashMap` defined here
    |
help: a struct with a similar name exists
    |
155 -     pub metadata: HashMap<String, String>}
155 +     pub metadata: DashMap<String, String>}
    |
help: consider importing one of these items
    |
10  + use crate::builders::HashMap;
    |
10  + use crate::external::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/repository.rs:23:18
   |
23 |     agent_index: HashMap<String, HashSet<String>>,
   |                  ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/repository.rs:26:16
   |
26 |     tag_index: HashMap<String, HashSet<String>>,
   |                ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/repository.rs:32:20
   |
32 |     relationships: HashMap<String, Vec<MemoryRelationship>>}
   |                    ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/memory/ops/repository.rs:38:23
   |
38 |             memories: HashMap::new(),
   |                       ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/security/audit.rs:369:60
    |
369 |     async fn create_metadata(&self, event: &AuditEvent) -> HashMap<String, String> {
    |                                                            ^^^^^^^
    |
   ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lib.rs:89:1
    |
89  | pub struct DashMap<K, V, S = RandomState> {
    | ----------------------------------------- similarly named struct `DashMap` defined here
    |
help: a struct with a similar name exists
    |
369 -     async fn create_metadata(&self, event: &AuditEvent) -> HashMap<String, String> {
369 +     async fn create_metadata(&self, event: &AuditEvent) -> DashMap<String, String> {
    |
help: consider importing one of these items
    |
10  + use crate::builders::HashMap;
    |
10  + use crate::external::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/memory/ops/repository.rs:39:25
   |
39 |             type_index: HashMap::new(),
   |                         ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/security/audit.rs:370:28
    |
370 |         let mut metadata = HashMap::new();
    |                            ^^^^^^^ use of undeclared type `HashMap`
    |
help: a struct with a similar name exists
    |
370 -         let mut metadata = HashMap::new();
370 +         let mut metadata = DashMap::new();
    |
help: consider importing one of these items
    |
10  + use crate::builders::HashMap;
    |
10  + use crate::external::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/memory/ops/repository.rs:40:26
   |
40 |             agent_index: HashMap::new(),
   |                          ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/security/audit.rs:549:27
    |
549 |                 metadata: HashMap::new()}) {
    |                           ^^^^^^^ use of undeclared type `HashMap`
    |
help: a struct with a similar name exists
    |
549 -                 metadata: HashMap::new()}) {
549 +                 metadata: DashMap::new()}) {
    |
help: consider importing one of these items
    |
10  + use crate::builders::HashMap;
    |
10  + use crate::external::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/memory/ops/repository.rs:41:24
   |
41 |             tag_index: HashMap::new(),
   |                        ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/security/credentials.rs:95:31
   |
95 |     pub environment_mappings: HashMap<String, Vec<String>>,
   |                               ^^^^^^^
   |
  ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lib.rs:89:1
   |
89 | pub struct DashMap<K, V, S = RandomState> {
   | ----------------------------------------- similarly named struct `DashMap` defined here
   |
help: a struct with a similar name exists
   |
95 -     pub environment_mappings: HashMap<String, Vec<String>>,
95 +     pub environment_mappings: DashMap<String, Vec<String>>,
   |
help: consider importing one of these items
   |
10 + use crate::builders::HashMap;
   |
10 + use crate::external::HashMap;
   |
10 + use std::collections::HashMap;
   |
10 + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/memory/ops/repository.rs:43:28
   |
43 |             relationships: HashMap::new()}
   |                            ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/repository.rs:249:27
    |
249 |     pub memories_by_type: HashMap<MemoryTypeEnum, usize>,
    |                           ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/retrieval.rs:74:19
   |
74 |     pub metadata: HashMap<String, serde_json::Value>}
   |                   ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/security/credentials.rs:138:40
    |
138 |         let mut environment_mappings = HashMap::new();
    |                                        ^^^^^^^ use of undeclared type `HashMap`
    |
help: a struct with a similar name exists
    |
138 -         let mut environment_mappings = HashMap::new();
138 +         let mut environment_mappings = DashMap::new();
    |
help: consider importing one of these items
    |
10  + use crate::builders::HashMap;
    |
10  + use crate::external::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/ops/retrieval.rs:80:29
   |
80 |     weights: std::sync::Arc<HashMap<String, f32>>}
   |                             ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/security/credentials.rs:216:34
    |
216 |     validation_cache: Arc<RwLock<HashMap<String, (bool, SystemTime)>>>}
    |                                  ^^^^^^^
    |
   ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lib.rs:89:1
    |
89  | pub struct DashMap<K, V, S = RandomState> {
    | ----------------------------------------- similarly named struct `DashMap` defined here
    |
help: a struct with a similar name exists
    |
216 -     validation_cache: Arc<RwLock<HashMap<String, (bool, SystemTime)>>>}
216 +     validation_cache: Arc<RwLock<DashMap<String, (bool, SystemTime)>>>}
    |
help: consider importing one of these items
    |
10  + use crate::builders::HashMap;
    |
10  + use crate::external::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/memory/ops/retrieval.rs:85:27
   |
85 |         let mut weights = HashMap::new();
   |                           ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/security/credentials.rs:251:52
    |
251 |             validation_cache: Arc::new(RwLock::new(HashMap::new()))})
    |                                                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: a struct with a similar name exists
    |
251 -             validation_cache: Arc::new(RwLock::new(HashMap::new()))})
251 +             validation_cache: Arc::new(RwLock::new(DashMap::new()))})
    |
help: consider importing one of these items
    |
10  + use crate::builders::HashMap;
    |
10  + use crate::external::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/retrieval.rs:125:27
    |
125 |                 metadata: HashMap::new()})
    |                           ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find function `serialize` in crate `bincode`
   --> packages/provider/src/security/encryption.rs:196:22
    |
196 |             bincode::serialize(&encrypted_data).map_err(|e| SecurityError::EncryptionError {
    |                      ^^^^^^^^^ not found in `bincode`
    |
help: consider importing one of these functions
    |
9   + use crate::json_util::stringified_json::serialize;
    |
9   + use fluent_ai_domain::json_util::stringified_json::serialize;
    |
help: if you import `serialize`, refer to it directly
    |
196 -             bincode::serialize(&encrypted_data).map_err(|e| SecurityError::EncryptionError {
196 +             serialize(&encrypted_data).map_err(|e| SecurityError::EncryptionError {
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/retrieval.rs:144:38
    |
144 |                 let mut all_results: HashMap<String, (f32, RetrievalResult)> = HashMap::new();
    |                                      ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0425]: cannot find function `deserialize` in crate `bincode`
   --> packages/provider/src/security/encryption.rs:215:22
    |
215 |             bincode::deserialize(&serialized).map_err(|e| SecurityError::EncryptionError {
    |                      ^^^^^^^^^^^ not found in `bincode`
    |
help: consider importing one of these functions
    |
9   + use crate::json_util::stringified_json::deserialize;
    |
9   + use fluent_ai_domain::json_util::stringified_json::deserialize;
    |
help: if you import `deserialize`, refer to it directly
    |
215 -             bincode::deserialize(&serialized).map_err(|e| SecurityError::EncryptionError {
215 +             deserialize(&serialized).map_err(|e| SecurityError::EncryptionError {
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/retrieval.rs:144:80
    |
144 |                 let mut all_results: HashMap<String, (f32, RetrievalResult)> = HashMap::new();
    |                                                                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/provider/src/security/rotation.rs:27:29
   |
27 |     pub provider_intervals: HashMap<String, Duration>,
   |                             ^^^^^^^
   |
  ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lib.rs:89:1
   |
89 | pub struct DashMap<K, V, S = RandomState> {
   | ----------------------------------------- similarly named struct `DashMap` defined here
   |
help: a struct with a similar name exists
   |
27 -     pub provider_intervals: HashMap<String, Duration>,
27 +     pub provider_intervals: DashMap<String, Duration>,
   |
help: consider importing one of these items
   |
10 + use crate::builders::HashMap;
   |
10 + use crate::external::HashMap;
   |
10 + use std::collections::HashMap;
   |
10 + use fluent_ai_domain::HashMap;
   |
     and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/retrieval.rs:229:35
    |
229 |                         metadata: HashMap::new(), // VectorSearchResult doesn't include metadata
    |                                   ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/retrieval.rs:423:44
    |
423 |                         let mut metadata = HashMap::new();
    |                                            ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/retrieval.rs:483:17
    |
483 |     strategies: HashMap<String, std::sync::Arc<dyn RetrievalStrategy>>,
    |                 ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/retrieval.rs:490:29
    |
490 |         let mut strategies: HashMap<String, std::sync::Arc<dyn RetrievalStrategy>> = HashMap::new();
    |                             ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/security/rotation.rs:149:38
    |
149 |         let mut provider_intervals = HashMap::new();
    |                                      ^^^^^^^ use of undeclared type `HashMap`
    |
help: a struct with a similar name exists
    |
149 -         let mut provider_intervals = HashMap::new();
149 +         let mut provider_intervals = DashMap::new();
    |
help: consider importing one of these items
    |
10  + use crate::builders::HashMap;
    |
10  + use crate::external::HashMap;
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/retrieval.rs:490:86
    |
490 |         let mut strategies: HashMap<String, std::sync::Arc<dyn RetrievalStrategy>> = HashMap::new();
    |                                                                                      ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0404]: expected trait, found struct `AsyncStream`
  --> packages/provider/src/client.rs:62:18
   |
62 |     ) -> Box<dyn AsyncStream<CompletionChunk>>;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a trait

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/retrieval.rs:582:33
    |
582 |         let mut unique_results: HashMap<String, RetrievalResult> = HashMap::new();
    |                                 ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0404]: expected trait, found struct `AsyncStream`
  --> packages/provider/src/client.rs:74:18
   |
74 |     ) -> Box<dyn AsyncStream<Self::StreamingResponse>>;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a trait

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/retrieval.rs:582:68
    |
582 |         let mut unique_results: HashMap<String, RetrievalResult> = HashMap::new();
    |                                                                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0404]: expected trait, found struct `AsyncTask`
  --> packages/provider/src/client.rs:92:44
   |
92 |     fn embed(&self, text: &str) -> Box<dyn AsyncTask<ZeroOneOrMany<f32>>>;
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a trait

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/storage.rs:194:24
    |
194 |     pub backend_stats: HashMap<String, serde_json::Value>}
    |                        ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0404]: expected trait, found struct `AsyncStream`
  --> packages/provider/src/client.rs:95:68
   |
95 |     fn embed_batch(&self, texts: ZeroOneOrMany<String>) -> Box<dyn AsyncStream<EmbeddingChunk>>;
   |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a trait

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/provider/src/transcription/mod.rs:421:29
    |
421 |     pub additional_options: HashMap<String, Value>}
    |                             ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/provider/src/transcription/mod.rs:433:33
    |
433 |             additional_options: HashMap::new()}
    |                                 ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these items
    |
7   + use crate::builders::HashMap;
    |
7   + use crate::external::HashMap;
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |
      and 1 other candidate

error[E0603]: struct `AnthropicProvider` is private
  --> packages/provider/src/clients/anthropic/completion.rs:20:28
   |
20 | use model_info::{Provider, AnthropicProvider, ModelInfo as ModelInfoFromPackage};
   |                            ^^^^^^^^^^^^^^^^^ private struct
   |
note: the struct `AnthropicProvider` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/model-info/src/lib.rs:10:5
   |
10 |     anthropic::AnthropicProvider, huggingface::HuggingFaceProvider, mistral::MistralProvider,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: import `AnthropicProvider` directly
   |
20 | use model_info::{Provider, model_info::providers::anthropic::AnthropicProvider, ModelInfo as ModelInfoFromPackage};
   |                            ++++++++++++++++++++++++++++++++++

error[E0603]: struct `Usage` is private
  --> packages/provider/src/clients/huggingface/completion.rs:16:62
   |
16 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage};
   |                                                              ^^^^^ private struct
   |
note: the struct `Usage` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
   |
13 | use crate::model::Usage;
   |     ^^^^^^^^^^^^^^^^^^^
help: import `Usage` directly
   |
16 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, fluent_ai_domain::model::usage::Usage};
   |                                                              ++++++++++++++++++++++++++++++++

error[E0603]: struct `HuggingFaceProvider` is private
  --> packages/provider/src/clients/huggingface/completion.rs:26:28
   |
26 | use model_info::{Provider, HuggingFaceProvider, ModelInfo as ModelInfoFromPackage};
   |                            ^^^^^^^^^^^^^^^^^^^ private struct
   |
note: the struct `HuggingFaceProvider` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/model-info/src/lib.rs:10:35
   |
10 |     anthropic::AnthropicProvider, huggingface::HuggingFaceProvider, mistral::MistralProvider,
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: import `HuggingFaceProvider` directly
   |
26 | use model_info::{Provider, model_info::providers::huggingface::HuggingFaceProvider, ModelInfo as ModelInfoFromPackage};
   |                            ++++++++++++++++++++++++++++++++++++

error[E0603]: struct `MistralProvider` is private
  --> packages/provider/src/clients/mistral/completion.rs:16:28
   |
16 | use model_info::{Provider, MistralProvider, ModelInfo as ModelInfoFromPackage};
   |                            ^^^^^^^^^^^^^^^ private struct
   |
note: the struct `MistralProvider` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/model-info/src/lib.rs:10:69
   |
10 |     anthropic::AnthropicProvider, huggingface::HuggingFaceProvider, mistral::MistralProvider,
   |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
help: import `MistralProvider` directly
   |
16 | use model_info::{Provider, model_info::providers::mistral::MistralProvider, ModelInfo as ModelInfoFromPackage};
   |                            ++++++++++++++++++++++++++++++++

error[E0603]: struct `Usage` is private
   --> packages/provider/src/clients/mistral/completion.rs:497:62
    |
497 | use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage as DomainUsage};
    |                                                              ^^^^^ private struct
    |
note: the struct `Usage` is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
    |
13  | use crate::model::Usage;
    |     ^^^^^^^^^^^^^^^^^^^
help: import `Usage` directly
    |
497 - use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, Usage as DomainUsage};
497 + use fluent_ai_domain::chunk::{CompletionChunk, FinishReason, fluent_ai_domain::model::usage::Usage};
    |

error[E0603]: struct `OpenAiProvider` is private
  --> packages/provider/src/clients/openai/completion.rs:18:28
   |
18 | use model_info::{Provider, OpenAiProvider, ModelInfo as ModelInfoFromPackage};
   |                            ^^^^^^^^^^^^^^ private struct
   |
note: the struct `OpenAiProvider` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/model-info/src/lib.rs:11:5
   |
11 |     openai::OpenAiProvider, openrouter::OpenRouterProvider, together::TogetherProvider,
   |     ^^^^^^^^^^^^^^^^^^^^^^
help: import `OpenAiProvider` directly
   |
18 | use model_info::{Provider, model_info::providers::openai::OpenAiProvider, ModelInfo as ModelInfoFromPackage};
   |                            +++++++++++++++++++++++++++++++

error[E0603]: struct `OpenAiProvider` is private
  --> packages/provider/src/clients/openai/discovery.rs:13:28
   |
13 | use model_info::{Provider, OpenAiProvider, ModelInfo as ModelInfoFromPackage};
   |                            ^^^^^^^^^^^^^^ private struct
   |
note: the struct `OpenAiProvider` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/model-info/src/lib.rs:11:5
   |
11 |     openai::OpenAiProvider, openrouter::OpenRouterProvider, together::TogetherProvider,
   |     ^^^^^^^^^^^^^^^^^^^^^^
help: import `OpenAiProvider` directly
   |
13 | use model_info::{Provider, model_info::providers::openai::OpenAiProvider, ModelInfo as ModelInfoFromPackage};
   |                            +++++++++++++++++++++++++++++++

error[E0603]: struct `TogetherProvider` is private
  --> packages/provider/src/clients/together/completion.rs:23:28
   |
23 | use model_info::{Provider, TogetherProvider, ModelInfo as ModelInfoFromPackage};
   |                            ^^^^^^^^^^^^^^^^ private struct
   |
note: the struct `TogetherProvider` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/model-info/src/lib.rs:11:61
   |
11 |     openai::OpenAiProvider, openrouter::OpenRouterProvider, together::TogetherProvider,
   |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
help: import `TogetherProvider` directly
   |
23 | use model_info::{Provider, model_info::providers::together::TogetherProvider, ModelInfo as ModelInfoFromPackage};
   |                            +++++++++++++++++++++++++++++++++

error[E0603]: module `workflow` is private
  --> packages/provider/src/clients/xai/client.rs:18:31
   |
18 | use fluent_ai_domain::memory::workflow::PromptError;
   |                               ^^^^^^^^  ----------- enum `PromptError` is not publicly re-exported
   |                               |
   |                               private module
   |
note: the module `workflow` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/memory/mod.rs:44:1
   |
44 | mod workflow;
   | ^^^^^^^^^^^^

error[E0603]: struct `XaiProvider` is private
  --> packages/provider/src/clients/xai/completion.rs:18:28
   |
18 | use model_info::{Provider, XaiProvider, ModelInfo as ModelInfoFromPackage};
   |                            ^^^^^^^^^^^ private struct
   |
note: the struct `XaiProvider` is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/model-info/src/lib.rs:12:5
   |
12 |     xai::XaiProvider,
   |     ^^^^^^^^^^^^^^^^
help: import `XaiProvider` directly
   |
18 | use model_info::{Provider, model_info::providers::xai::XaiProvider, ModelInfo as ModelInfoFromPackage};
   |                            ++++++++++++++++++++++++++++

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/storage.rs:198:50
    |
198 |     memories: std::sync::Arc<tokio::sync::RwLock<HashMap<String, MemoryNode>>>,
    |                                                  ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0603]: struct `OsRng` is private
  --> packages/provider/src/security/encryption.rs:15:37
   |
15 |     aead::{Aead, AeadCore, KeyInit, OsRng}};
   |                                     ^^^^^ private struct
   |
note: the struct `OsRng` is defined here
  --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aead-0.6.0-rc.1/src/lib.rs:46:41
   |
46 | use crypto_common::rand_core::{OsError, OsRng, TryRngCore};
   |                                         ^^^^^
help: import `OsRng` directly
   |
15 |     aead::{Aead, AeadCore, KeyInit, rand_core::os::OsRng}};
   |                                     +++++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/streaming/mod.rs:14:34
   |
14 | use crate::completion_provider::{CompletionError, ResponseMetadata};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use crate::domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
14 | use crate::completion_provider::{domain::completion::CompletionError, ResponseMetadata};
   |                                  ++++++++++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/anthropic/client.rs:16:34
   |
16 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use crate::domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
16 | use crate::completion_provider::{domain::completion::CompletionError, CompletionProvider};
   |                                  ++++++++++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/anthropic/completion.rs:36:23
   |
36 |         ChunkHandler, CompletionError, CompletionProvider, ModelConfigInfo}};
   |                       ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use crate::domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
36 |         ChunkHandler, domain::completion::CompletionError, CompletionProvider, ModelConfigInfo}};
   |                       ++++++++++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/huggingface/client.rs:17:27
   |
17 |     completion_provider::{CompletionError, CompletionProvider}};
   |                           ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use crate::domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
17 |     completion_provider::{domain::completion::CompletionError, CompletionProvider}};
   |                           ++++++++++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/huggingface/completion.rs:31:23
   |
31 |         ChunkHandler, CompletionError, CompletionProvider}};
   |                       ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use crate::domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
31 |         ChunkHandler, domain::completion::CompletionError, CompletionProvider}};
   |                       ++++++++++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/mistral/client.rs:19:34
   |
19 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use crate::domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
19 | use crate::completion_provider::{domain::completion::CompletionError, CompletionProvider};
   |                                  ++++++++++++++++++++

error[E0603]: enum import `CompletionError` is private
   --> packages/provider/src/clients/mistral/completion.rs:519:23
    |
519 |         ChunkHandler, CompletionError as ProviderError, CompletionProvider},
    |                       ^^^^^^^^^^^^^^^ private enum import
    |
note: the enum import `CompletionError` is defined here...
   --> packages/provider/src/completion_provider.rs:23:9
    |
23  | pub use CompletionCoreError as CompletionError;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
   --> packages/provider/src/completion_provider.rs:13:5
    |
13  | use crate::domain::completion::CompletionCoreError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
    |
23  |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
    |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
    |
519 -         ChunkHandler, CompletionError as ProviderError, CompletionProvider},
519 +         ChunkHandler, domain::completion::CompletionError, CompletionProvider},
    |

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/openai/mod.rs:50:34
   |
50 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use crate::domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
50 | use crate::completion_provider::{domain::completion::CompletionError, CompletionProvider};
   |                                  ++++++++++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/openai/client.rs:33:34
   |
33 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use crate::domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
33 | use crate::completion_provider::{domain::completion::CompletionError, CompletionProvider};
   |                                  ++++++++++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/openai/completion.rs:30:23
   |
30 |         ChunkHandler, CompletionError, CompletionProvider}};
   |                       ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use crate::domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
30 |         ChunkHandler, domain::completion::CompletionError, CompletionProvider}};
   |                       ++++++++++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/xai/completion.rs:21:34
   |
21 | use crate::completion_provider::{CompletionError, CompletionResponse as DomainCompletionResponse};
   |                                  ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use crate::domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
21 | use crate::completion_provider::{domain::completion::CompletionError, CompletionResponse as DomainCompletionResponse};
   |                                  ++++++++++++++++++++

error[E0603]: enum import `CompletionError` is private
  --> packages/provider/src/clients/xai/streaming.rs:5:33
   |
5  | use crate::completion_provider::CompletionError;
   |                                 ^^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `CompletionError` is defined here...
  --> packages/provider/src/completion_provider.rs:23:9
   |
23 | pub use CompletionCoreError as CompletionError;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum import `CompletionCoreError` which is defined here...
  --> packages/provider/src/completion_provider.rs:13:5
   |
13 | use crate::domain::completion::CompletionCoreError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `CompletionCoreError` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/completion/mod.rs:23:5
   |
23 |     CompletionCoreError, CompletionCoreRequest, CompletionCoreResponse, CompletionCoreResult,
   |     ^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `CompletionError` through the re-export
   |
5  - use crate::completion_provider::CompletionError;
5  + use domain::completion::CompletionError;
   |

error[E0603]: enum import `AnthropicError` is private
  --> packages/provider/src/clients/anthropic/tools/calculator.rs:14:12
   |
14 |     core::{AnthropicError, AnthropicResult},
   |            ^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `AnthropicError` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:15:20
   |
15 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                    ^^^^^^^^^^^^^^
note: ...and refers to the enum import `AnthropicError` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:35:9
   |
35 | pub use error::*;
   |         ^^^^^^^^ you could import this re-export
note: ...and refers to the enum `AnthropicError` which is defined here
  --> packages/provider/src/clients/anthropic/error.rs:13:1
   |
13 | pub enum AnthropicError {
   | ^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicError` through the re-export
   |
14 |     core::{super::AnthropicError, AnthropicResult},
   |            +++++++

error[E0603]: type alias import `AnthropicResult` is private
   --> packages/provider/src/clients/anthropic/tools/calculator.rs:14:28
    |
14  |     core::{AnthropicError, AnthropicResult},
    |                            ^^^^^^^^^^^^^^^ private type alias import
    |
note: the type alias import `AnthropicResult` is defined here...
   --> packages/provider/src/clients/anthropic/tools/core.rs:15:36
    |
15  | use super::super::{AnthropicError, AnthropicResult, Message};
    |                                    ^^^^^^^^^^^^^^^
note: ...and refers to the type alias import `AnthropicResult` which is defined here...
   --> packages/provider/src/clients/anthropic/mod.rs:35:9
    |
35  | pub use error::*;
    |         ^^^^^^^^ you could import this re-export
note: ...and refers to the type alias `AnthropicResult` which is defined here
   --> packages/provider/src/clients/anthropic/error.rs:117:1
    |
117 | pub type AnthropicResult<T> = Result<T, AnthropicError>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicResult` through the re-export
    |
14  |     core::{AnthropicError, super::AnthropicResult},
    |                            +++++++

error[E0603]: enum import `AnthropicError` is private
  --> packages/provider/src/clients/anthropic/tools/file_operations.rs:18:12
   |
18 |     core::{AnthropicError, AnthropicResult},
   |            ^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `AnthropicError` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:15:20
   |
15 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                    ^^^^^^^^^^^^^^
note: ...and refers to the enum import `AnthropicError` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:35:9
   |
35 | pub use error::*;
   |         ^^^^^^^^ you could import this re-export
note: ...and refers to the enum `AnthropicError` which is defined here
  --> packages/provider/src/clients/anthropic/error.rs:13:1
   |
13 | pub enum AnthropicError {
   | ^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicError` through the re-export
   |
18 |     core::{super::AnthropicError, AnthropicResult},
   |            +++++++

error[E0603]: type alias import `AnthropicResult` is private
   --> packages/provider/src/clients/anthropic/tools/file_operations.rs:18:28
    |
18  |     core::{AnthropicError, AnthropicResult},
    |                            ^^^^^^^^^^^^^^^ private type alias import
    |
note: the type alias import `AnthropicResult` is defined here...
   --> packages/provider/src/clients/anthropic/tools/core.rs:15:36
    |
15  | use super::super::{AnthropicError, AnthropicResult, Message};
    |                                    ^^^^^^^^^^^^^^^
note: ...and refers to the type alias import `AnthropicResult` which is defined here...
   --> packages/provider/src/clients/anthropic/mod.rs:35:9
    |
35  | pub use error::*;
    |         ^^^^^^^^ you could import this re-export
note: ...and refers to the type alias `AnthropicResult` which is defined here
   --> packages/provider/src/clients/anthropic/error.rs:117:1
    |
117 | pub type AnthropicResult<T> = Result<T, AnthropicError>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicResult` through the re-export
    |
18  |     core::{AnthropicError, super::AnthropicResult},
    |                            +++++++

error[E0603]: enum import `AnthropicError` is private
  --> packages/provider/src/clients/anthropic/tools/function_calling.rs:16:5
   |
16 |     AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
   |     ^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `AnthropicError` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:15:20
   |
15 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                    ^^^^^^^^^^^^^^
note: ...and refers to the enum import `AnthropicError` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:35:9
   |
35 | pub use error::*;
   |         ^^^^^^^^ you could import this re-export
note: ...and refers to the enum `AnthropicError` which is defined here
  --> packages/provider/src/clients/anthropic/error.rs:13:1
   |
13 | pub enum AnthropicError {
   | ^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicError` through the re-export
   |
16 |     super::AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
   |     +++++++

error[E0603]: type alias import `AnthropicResult` is private
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:16:21
    |
16  |     AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
    |                     ^^^^^^^^^^^^^^^ private type alias import
    |
note: the type alias import `AnthropicResult` is defined here...
   --> packages/provider/src/clients/anthropic/tools/core.rs:15:36
    |
15  | use super::super::{AnthropicError, AnthropicResult, Message};
    |                                    ^^^^^^^^^^^^^^^
note: ...and refers to the type alias import `AnthropicResult` which is defined here...
   --> packages/provider/src/clients/anthropic/mod.rs:35:9
    |
35  | pub use error::*;
    |         ^^^^^^^^ you could import this re-export
note: ...and refers to the type alias `AnthropicResult` which is defined here
   --> packages/provider/src/clients/anthropic/error.rs:117:1
    |
117 | pub type AnthropicResult<T> = Result<T, AnthropicError>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicResult` through the re-export
    |
16  |     AnthropicError, super::AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
    |                     +++++++

error[E0603]: struct import `Message` is private
  --> packages/provider/src/clients/anthropic/tools/function_calling.rs:17:5
   |
17 |     Message, ResultHandler, SchemaType};
   |     ^^^^^^^ private struct import
   |
note: the struct import `Message` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:15:53
   |
15 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                                                     ^^^^^^^
note: ...and refers to the struct import `Message` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:36:9
   |
36 | pub use messages::*;
   |         ^^^^^^^^^^^ you could import this re-export
note: ...and refers to the struct `Message` which is defined here
  --> packages/provider/src/clients/anthropic/messages.rs:30:1
   |
30 | pub struct Message {
   | ^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Message` through the re-export
   |
17 |     super::Message, ResultHandler, SchemaType};
   |     +++++++

error[E0603]: enum import `AnthropicError` is private
  --> packages/provider/src/clients/anthropic/tools/mod.rs:17:5
   |
17 |     AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
   |     ^^^^^^^^^^^^^^ private enum import
   |
note: the enum import `AnthropicError` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:15:20
   |
15 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                    ^^^^^^^^^^^^^^
note: ...and refers to the enum import `AnthropicError` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:35:9
   |
35 | pub use error::*;
   |         ^^^^^^^^ you could import this re-export
note: ...and refers to the enum `AnthropicError` which is defined here
  --> packages/provider/src/clients/anthropic/error.rs:13:1
   |
13 | pub enum AnthropicError {
   | ^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicError` through the re-export
   |
17 |     super::AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
   |     +++++++

error[E0603]: type alias import `AnthropicResult` is private
   --> packages/provider/src/clients/anthropic/tools/mod.rs:17:21
    |
17  |     AnthropicError, AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
    |                     ^^^^^^^^^^^^^^^ private type alias import
    |
note: the type alias import `AnthropicResult` is defined here...
   --> packages/provider/src/clients/anthropic/tools/core.rs:15:36
    |
15  | use super::super::{AnthropicError, AnthropicResult, Message};
    |                                    ^^^^^^^^^^^^^^^
note: ...and refers to the type alias import `AnthropicResult` which is defined here...
   --> packages/provider/src/clients/anthropic/mod.rs:35:9
    |
35  | pub use error::*;
    |         ^^^^^^^^ you could import this re-export
note: ...and refers to the type alias `AnthropicResult` which is defined here
   --> packages/provider/src/clients/anthropic/error.rs:117:1
    |
117 | pub type AnthropicResult<T> = Result<T, AnthropicError>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `AnthropicResult` through the re-export
    |
17  |     AnthropicError, super::AnthropicResult, ChainControl, Emitter, ErrorHandler, InvocationHandler,
    |                     +++++++

error[E0603]: struct import `Message` is private
  --> packages/provider/src/clients/anthropic/tools/mod.rs:18:5
   |
18 |     Message, ResultHandler, SchemaType, ToolExecutionError, ToolRegistrationError};
   |     ^^^^^^^ private struct import
   |
note: the struct import `Message` is defined here...
  --> packages/provider/src/clients/anthropic/tools/core.rs:15:53
   |
15 | use super::super::{AnthropicError, AnthropicResult, Message};
   |                                                     ^^^^^^^
note: ...and refers to the struct import `Message` which is defined here...
  --> packages/provider/src/clients/anthropic/mod.rs:36:9
   |
36 | pub use messages::*;
   |         ^^^^^^^^^^^ you could import this re-export
note: ...and refers to the struct `Message` which is defined here
  --> packages/provider/src/clients/anthropic/messages.rs:30:1
   |
30 | pub struct Message {
   | ^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Message` through the re-export
   |
18 |     super::Message, ResultHandler, SchemaType, ToolExecutionError, ToolRegistrationError};
   |     +++++++

error[E0603]: struct `MemoryPool` is private
   --> packages/provider/src/clients/candle/mod.rs:27:23
    |
27  | pub use memory_pool::{MemoryPool, MemoryPoolManager, PoolConfig, PoolStatistics, PooledEntry};
    |                       ^^^^^^^^^^ private struct
    |
note: the struct `MemoryPool` is defined here
   --> packages/provider/src/clients/candle/memory_pool.rs:227:1
    |
227 | struct MemoryPool {
    | ^^^^^^^^^^^^^^^^^

error[E0603]: struct import `MistralCompletionBuilder` is private
   --> packages/provider/src/clients/mistral/mod.rs:6:26
    |
6   | pub use client::{Client, MistralCompletionBuilder};
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ private struct import
    |
note: the struct import `MistralCompletionBuilder` is defined here...
   --> packages/provider/src/clients/mistral/client.rs:14:5
    |
14  | use super::completion::MistralCompletionBuilder;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the struct `MistralCompletionBuilder` which is defined here
   --> packages/provider/src/clients/mistral/completion.rs:531:1
    |
531 | pub struct MistralCompletionBuilder {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `MistralCompletionBuilder` through the re-export
    |
6   | pub use client::{Client, completion::MistralCompletionBuilder};
    |                          ++++++++++++

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/storage.rs:199:55
    |
199 |     relationships: std::sync::Arc<tokio::sync::RwLock<HashMap<String, Vec<MemoryRelationship>>>>}
    |                                                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/clients/mistral/embedding.rs:36:33
   |
36 |     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
   |                                 ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
   |
36 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
36 +     ) -> Result<Vec<crate::domain::embedding::Embedding>, EmbeddingError> {
   |
36 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
36 +     ) -> Result<Vec<fluent_ai_domain::embedding::Embedding>, EmbeddingError> {
   |
help: import `Embedding` through the re-export
   |
36 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
36 +     ) -> Result<Vec<embedding::Embedding>, EmbeddingError> {
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/storage.rs:204:68
    |
204 |             memories: std::sync::Arc::new(tokio::sync::RwLock::new(HashMap::new())),
    |                                                                    ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/clients/mistral/embedding.rs:78:66
   |
78 |                         .map(|(embedding, document)| embeddings::Embedding {
   |                                                                  ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
   |
78 -                         .map(|(embedding, document)| embeddings::Embedding {
78 +                         .map(|(embedding, document)| crate::domain::embedding::Embedding {
   |
78 -                         .map(|(embedding, document)| embeddings::Embedding {
78 +                         .map(|(embedding, document)| fluent_ai_domain::embedding::Embedding {
   |
help: import `Embedding` through the re-export
   |
78 -                         .map(|(embedding, document)| embeddings::Embedding {
78 +                         .map(|(embedding, document)| embedding::Embedding {
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/storage.rs:205:73
    |
205 |             relationships: std::sync::Arc::new(tokio::sync::RwLock::new(HashMap::new()))}
    |                                                                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0603]: struct `Usage` is private
   --> packages/provider/src/clients/openai/streaming.rs:295:75
    |
295 |             let usage = self.usage.as_ref().map(|u| crate::domain::chunk::Usage {
    |                                                                           ^^^^^ private struct
    |
note: the struct `Usage` is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:13:5
    |
13  | use crate::model::Usage;
    |     ^^^^^^^^^^^^^^^^^^^
help: consider importing one of these structs instead
    |
295 -             let usage = self.usage.as_ref().map(|u| crate::domain::chunk::Usage {
295 +             let usage = self.usage.as_ref().map(|u| crate::domain::Usage {
    |
295 -             let usage = self.usage.as_ref().map(|u| crate::domain::chunk::Usage {
295 +             let usage = self.usage.as_ref().map(|u| fluent_ai_domain::Usage {
    |
help: import `Usage` directly
    |
295 -             let usage = self.usage.as_ref().map(|u| crate::domain::chunk::Usage {
295 +             let usage = self.usage.as_ref().map(|u| fluent_ai_domain::model::usage::Usage {
    |

error[E0603]: constant import `MAX_TOOLS` is private
   --> packages/provider/src/clients/together/completion.rs:123:57
    |
123 |                 if together_tools.len() < super::types::MAX_TOOLS {
    |                                                         ^^^^^^^^^ private constant import
    |
note: the constant import `MAX_TOOLS` is defined here...
   --> packages/provider/src/clients/together/types.rs:10:27
    |
10  | use crate::{MAX_MESSAGES, MAX_TOOLS, MAX_DOCUMENTS};
    |                           ^^^^^^^^^
note: ...and refers to the constant `MAX_TOOLS` which is defined here
   --> packages/provider/src/lib.rs:8:1
    |
8   | pub const MAX_TOOLS: usize = 64;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing this constant instead
    |
123 -                 if together_tools.len() < super::types::MAX_TOOLS {
123 +                 if together_tools.len() < crate::MAX_TOOLS {
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/ops/storage.rs:374:32
    |
374 |                 backend_stats: HashMap::new()});
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/clients/together/embedding.rs:70:33
   |
70 |     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
   |                                 ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
   |
70 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
70 +     ) -> Result<Vec<crate::domain::embedding::Embedding>, EmbeddingError> {
   |
70 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
70 +     ) -> Result<Vec<fluent_ai_domain::embedding::Embedding>, EmbeddingError> {
   |
help: import `Embedding` through the re-export
   |
70 -     ) -> Result<Vec<embeddings::Embedding>, EmbeddingError> {
70 +     ) -> Result<Vec<embedding::Embedding>, EmbeddingError> {
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/ops/storage.rs:392:18
    |
392 |     pub options: HashMap<String, serde_json::Value>}
    |                  ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0603]: struct import `Embedding` is private
   --> packages/provider/src/clients/together/embedding.rs:107:66
    |
107 |                         .map(|(embedding, document)| embeddings::Embedding {
    |                                                                  ^^^^^^^^^ private struct import
    |
note: the struct import `Embedding` is defined here...
   --> packages/provider/src/embeddings/mod.rs:10:35
    |
10  | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
    |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
    |
24  | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
    |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
    |
107 -                         .map(|(embedding, document)| embeddings::Embedding {
107 +                         .map(|(embedding, document)| crate::domain::embedding::Embedding {
    |
107 -                         .map(|(embedding, document)| embeddings::Embedding {
107 +                         .map(|(embedding, document)| fluent_ai_domain::embedding::Embedding {
    |
help: import `Embedding` through the re-export
    |
107 -                         .map(|(embedding, document)| embeddings::Embedding {
107 +                         .map(|(embedding, document)| embedding::Embedding {
    |

error[E0603]: trait import `StreamingCompletionResponse` is private
   --> packages/provider/src/clients/xai/client.rs:508:35
    |
508 |                 super::streaming::StreamingCompletionResponse,
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait import
    |
note: the trait import `StreamingCompletionResponse` is defined here...
   --> packages/provider/src/clients/xai/streaming.rs:6:5
    |
6   | use crate::streaming::StreamingCompletionResponse;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the trait `StreamingCompletionResponse` which is defined here
   --> packages/provider/src/streaming/mod.rs:20:1
    |
20  | pub trait StreamingCompletionResponse: Send + Sync {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing this trait through its public re-export instead
    |
508 -                 super::streaming::StreamingCompletionResponse,
508 +                 crate::StreamingCompletionResponse,
    |
help: import `StreamingCompletionResponse` directly
    |
508 -                 super::streaming::StreamingCompletionResponse,
508 +                 streaming::StreamingCompletionResponse,
    |

error[E0603]: constant import `MAX_TOOLS` is private
   --> packages/provider/src/clients/xai/completion.rs:107:52
    |
107 |                 if xai_tools.len() < super::types::MAX_TOOLS {
    |                                                    ^^^^^^^^^ private constant import
    |
note: the constant import `MAX_TOOLS` is defined here...
   --> packages/provider/src/clients/xai/types.rs:9:27
    |
9   | use crate::{MAX_MESSAGES, MAX_TOOLS, MAX_DOCUMENTS};
    |                           ^^^^^^^^^
note: ...and refers to the constant `MAX_TOOLS` which is defined here
   --> packages/provider/src/lib.rs:8:1
    |
8   | pub const MAX_TOOLS: usize = 64;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing this constant instead
    |
107 -                 if xai_tools.len() < super::types::MAX_TOOLS {
107 +                 if xai_tools.len() < crate::MAX_TOOLS {
    |

error[E0603]: enum import `ZeroOneOrMany` is private
   --> packages/provider/src/clients/xai/completion.rs:209:63
    |
209 | impl TryFrom<XaiChatResponse> for crate::completion_provider::ZeroOneOrMany<String> {
    |                                                               ^^^^^^^^^^^^^ private enum import
    |
note: the enum import `ZeroOneOrMany` is defined here...
   --> packages/provider/src/completion_provider.rs:11:5
    |
11  | use cyrup_sugars::ZeroOneOrMany;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `ZeroOneOrMany` which is defined here
   --> /Users/davidmaple/.cargo/git/checkouts/cyrup-sugars-291ac2b5c478a1ed/a72046f/packages/cyrup-sugars/src/lib.rs:78:64
    |
78  | pub use sugars_collections::{ByteSize, ByteSizeExt, OneOrMany, ZeroOneOrMany};
    |                                                                ^^^^^^^^^^^^^ you could import this directly
help: consider importing one of these enums instead
    |
209 - impl TryFrom<XaiChatResponse> for crate::completion_provider::ZeroOneOrMany<String> {
209 + impl TryFrom<XaiChatResponse> for crate::ZeroOneOrMany<String> {
    |
209 - impl TryFrom<XaiChatResponse> for crate::completion_provider::ZeroOneOrMany<String> {
209 + impl TryFrom<XaiChatResponse> for cyrup_sugars::ZeroOneOrMany<String> {
    |
209 - impl TryFrom<XaiChatResponse> for crate::completion_provider::ZeroOneOrMany<String> {
209 + impl TryFrom<XaiChatResponse> for fluent_ai_domain::ZeroOneOrMany<String> {
    |
help: import `ZeroOneOrMany` directly
    |
209 - impl TryFrom<XaiChatResponse> for crate::completion_provider::ZeroOneOrMany<String> {
209 + impl TryFrom<XaiChatResponse> for sugars_collections::zero_one_or_many::ZeroOneOrMany {
    |

error[E0603]: enum import `ZeroOneOrMany` is private
   --> packages/provider/src/clients/xai/completion.rs:219:44
    |
219 |             Ok(crate::completion_provider::ZeroOneOrMany::One(
    |                                            ^^^^^^^^^^^^^ private enum import
    |
note: the enum import `ZeroOneOrMany` is defined here...
   --> packages/provider/src/completion_provider.rs:11:5
    |
11  | use cyrup_sugars::ZeroOneOrMany;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `ZeroOneOrMany` which is defined here
   --> /Users/davidmaple/.cargo/git/checkouts/cyrup-sugars-291ac2b5c478a1ed/a72046f/packages/cyrup-sugars/src/lib.rs:78:64
    |
78  | pub use sugars_collections::{ByteSize, ByteSizeExt, OneOrMany, ZeroOneOrMany};
    |                                                                ^^^^^^^^^^^^^ you could import this directly
help: consider importing one of these tuple variants instead
    |
219 -             Ok(crate::completion_provider::ZeroOneOrMany::One(
219 +             Ok(crate::ZeroOneOrMany::One(
    |
219 -             Ok(crate::completion_provider::ZeroOneOrMany::One(
219 +             Ok(cyrup_sugars::ZeroOneOrMany::One(
    |
219 -             Ok(crate::completion_provider::ZeroOneOrMany::One(
219 +             Ok(fluent_ai_domain::ZeroOneOrMany::One(
    |
help: import `ZeroOneOrMany` directly
    |
219 -             Ok(crate::completion_provider::ZeroOneOrMany::One(
219 +             Ok(sugars_collections::zero_one_or_many::ZeroOneOrMany(
    |

error[E0603]: struct import `Embedding` is private
  --> packages/provider/src/client.rs:89:50
   |
89 |     ) -> AsyncTask<Result<Vec<crate::embeddings::Embedding>, crate::embeddings::EmbeddingError>>;
   |                                                  ^^^^^^^^^ private struct import
   |
note: the struct import `Embedding` is defined here...
  --> packages/provider/src/embeddings/mod.rs:10:35
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                   ^^^^^^^^^
note: ...and refers to the struct `Embedding` which is defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/embedding/mod.rs:24:16
   |
24 | pub use core::{Embedding, EmbeddingData, EmbeddingModel, EmbeddingResponse};
   |                ^^^^^^^^^ you could import this directly
help: consider importing one of these structs instead
   |
89 -     ) -> AsyncTask<Result<Vec<crate::embeddings::Embedding>, crate::embeddings::EmbeddingError>>;
89 +     ) -> AsyncTask<Result<Vec<crate::domain::embedding::Embedding>, crate::embeddings::EmbeddingError>>;
   |
89 -     ) -> AsyncTask<Result<Vec<crate::embeddings::Embedding>, crate::embeddings::EmbeddingError>>;
89 +     ) -> AsyncTask<Result<Vec<fluent_ai_domain::embedding::Embedding>, crate::embeddings::EmbeddingError>>;
   |
help: import `Embedding` through the re-export
   |
89 -     ) -> AsyncTask<Result<Vec<crate::embeddings::Embedding>, crate::embeddings::EmbeddingError>>;
89 +     ) -> AsyncTask<Result<Vec<embedding::Embedding>, crate::embeddings::EmbeddingError>>;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/primitives/types.rs:130:17
    |
130 |     pub custom: HashMap<String, Value>}
    |                 ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/primitives/types.rs:141:21
    |
141 |             custom: HashMap::new()}
    |                     ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/primitives/types.rs:164:21
    |
164 |             custom: HashMap::new()}
    |                     ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/primitives/types.rs:173:32
    |
173 |     pub fn to_entity(&self) -> HashMap<String, Value> {
    |                                ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

warning: unused imports: `AnthropicContentBlock` and `AnthropicUsage`
  --> packages/provider/src/clients/anthropic/completion.rs:23:68
   |
23 |     AnthropicCacheControl, AnthropicChatRequest, AnthropicContent, AnthropicContentBlock,
   |                                                                    ^^^^^^^^^^^^^^^^^^^^^
...
26 |     AnthropicToolResult, AnthropicToolUse, AnthropicUsage
   |                                            ^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `HttpError`
  --> packages/provider/src/clients/anthropic/completion.rs:28:30
   |
28 | use fluent_ai_http3::{Http3, HttpError};
   |                              ^^^^^^^^^

warning: unused import: `fluent_ai_http3::HttpStreamExt`
   --> packages/provider/src/clients/anthropic/completion.rs:432:17
    |
432 |             use fluent_ai_http3::HttpStreamExt;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `fluent_ai_http3::HttpError`
 --> packages/provider/src/clients/anthropic/error.rs:7:5
  |
7 | use fluent_ai_http3::HttpError;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/primitives/types.rs:174:23
    |
174 |         let mut map = HashMap::new();
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

warning: unexpected `cfg` condition value: `cylo`
  --> packages/provider/src/clients/anthropic/tools/function_calling.rs:18:7
   |
18 | #[cfg(feature = "cylo")]
   |       ^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
   = help: consider adding `cylo` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unused import: `any::TypeId`
 --> packages/provider/src/clients/anthropic/tools/function_calling.rs:6:11
  |
6 | use std::{any::TypeId, collections::HashMap, marker::PhantomData};
  |           ^^^^^^^^^^^

warning: unused import: `fluent_ai_domain::tool::Tool`
  --> packages/provider/src/clients/anthropic/tools/function_calling.rs:11:5
   |
11 | use fluent_ai_domain::tool::Tool;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `cylo`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:467:11
    |
467 |     #[cfg(feature = "cylo")]
    |           ^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `cylo` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `cylo`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:485:11
    |
485 |     #[cfg(feature = "cylo")]
    |           ^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `cylo` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `cylo`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:511:19
    |
511 |             #[cfg(feature = "cylo")]
    |                   ^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `cylo` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/primitives/types.rs:194:37
    |
194 |     pub fn from_entity(attributes: &HashMap<String, Value>) -> Result<Self> {
    |                                     ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

warning: ambiguous glob re-exports
  --> packages/provider/src/clients/anthropic/mod.rs:39:9
   |
39 | pub use streaming::*;
   |         ^^^^^^^^^^^^ the name `AnthropicStreamChunk` in the type namespace is first re-exported here
40 | pub use tools::*;
41 | pub use types::*;
   |         -------- but the name `AnthropicStreamChunk` in the type namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: ambiguous glob re-exports
  --> packages/provider/src/clients/anthropic/mod.rs:40:9
   |
36 | pub use messages::*;
   |         ----------- but the name `Tool` in the type namespace is also re-exported here
...
40 | pub use tools::*;
   |         ^^^^^^^^ the name `Tool` in the type namespace is first re-exported here

warning: unused import: `DeviceInfo`
  --> packages/provider/src/clients/candle/client.rs:19:29
   |
19 | use super::device_manager::{DeviceInfo, DeviceManager};
   |                             ^^^^^^^^^^

warning: unused import: `PoolConfig`
  --> packages/provider/src/clients/candle/client.rs:23:45
   |
23 | use super::memory_pool::{MemoryPoolManager, PoolConfig};
   |                                             ^^^^^^^^^^

warning: unused import: `ModelState`
  --> packages/provider/src/clients/candle/client.rs:24:42
   |
24 | use super::model_repo::{ModelRepository, ModelState};
   |                                          ^^^^^^^^^^

warning: unused import: `TokenStreamer`
  --> packages/provider/src/clients/candle/client.rs:27:77
   |
27 | use super::streaming::{FinishReason, StreamingConfig, StreamingCoordinator, TokenStreamer};
   |                                                                             ^^^^^^^^^^^^^

warning: unused imports: `SpecialTokens` and `TokenizationResult`
  --> packages/provider/src/clients/candle/client.rs:28:41
   |
28 | use super::tokenizer::{CandleTokenizer, SpecialTokens, TextBuffer, TokenizationResult};
   |                                         ^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> packages/provider/src/clients/candle/config.rs:6:5
  |
6 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `arc_swap::ArcSwap`
  --> packages/provider/src/clients/candle/config.rs:10:5
   |
10 | use arc_swap::ArcSwap;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `AtomicU8`
 --> packages/provider/src/clients/candle/device_manager.rs:7:37
  |
7 | use std::sync::atomic::{AtomicBool, AtomicU8, AtomicU64, Ordering};
  |                                     ^^^^^^^^

warning: unused import: `Guard`
  --> packages/provider/src/clients/candle/device_manager.rs:10:25
   |
10 | use arc_swap::{ArcSwap, Guard};
   |                         ^^^^^

warning: unused import: `ErrorMetrics`
  --> packages/provider/src/clients/candle/device_manager.rs:15:47
   |
15 | use super::error::{CandleError, CandleResult, ErrorMetrics, record_global_error};
   |                                               ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> packages/provider/src/clients/candle/generation.rs:8:5
  |
8 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Guard`
  --> packages/provider/src/clients/candle/model_repo.rs:12:25
   |
12 | use arc_swap::{ArcSwap, Guard};
   |                         ^^^^^

warning: unused import: `std::borrow::Cow`
 --> packages/provider/src/clients/candle/models.rs:3:5
  |
3 | use std::borrow::Cow;
  |     ^^^^^^^^^^^^^^^^

warning: variant `Devstral_22B` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:13:5
   |
13 |     Devstral_22B,
   |     ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `Devstral22b`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: variant `Mistral_7B` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:19:5
   |
19 |     Mistral_7B,
   |     ^^^^^^^^^^ help: convert the identifier to upper camel case: `Mistral7b`

warning: variant `CodeLlama_7B` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:21:5
   |
21 |     CodeLlama_7B,
   |     ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CodeLlama7b`

warning: variant `Phi3_Mini` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:23:5
   |
23 |     Phi3_Mini,
   |     ^^^^^^^^^ help: convert the identifier to upper camel case: `Phi3Mini`

warning: variant `Gemma_2B` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:25:5
   |
25 |     Gemma_2B,
   |     ^^^^^^^^ help: convert the identifier to upper camel case: `Gemma2b`

warning: variant `Gemma_7B` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:27:5
   |
27 |     Gemma_7B,
   |     ^^^^^^^^ help: convert the identifier to upper camel case: `Gemma7b`

warning: variant `KimiK2_FP16` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:29:5
   |
29 |     KimiK2_FP16,
   |     ^^^^^^^^^^^ help: convert the identifier to upper camel case: `KimiK2Fp16`

warning: variant `KimiK2_FP8` should have an upper camel case name
  --> packages/provider/src/clients/candle/models.rs:31:5
   |
31 |     KimiK2_FP8}
   |     ^^^^^^^^^^ help: convert the identifier to upper camel case: `KimiK2Fp8`

warning: unused import: `AsyncTask`
  --> packages/provider/src/clients/huggingface/completion.rs:18:24
   |
18 | use fluent_ai_domain::{AsyncTask, spawn_async};
   |                        ^^^^^^^^^

warning: unused import: `HttpError`
  --> packages/provider/src/clients/huggingface/completion.rs:20:30
   |
20 | use fluent_ai_http3::{Http3, HttpError};
   |                              ^^^^^^^^^

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/primitives/types.rs:425:49
    |
425 |         let get_attr = |key: &str, attributes: &HashMap<String, Value>| -> Result<Value> {
    |                                                 ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

warning: unused import: `fluent_ai_http3::HttpStreamExt`
   --> packages/provider/src/clients/huggingface/completion.rs:408:17
    |
408 |             use fluent_ai_http3::HttpStreamExt;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `header`
  --> packages/provider/src/clients/huggingface/transcription.rs:10:30
   |
10 | use fluent_ai_http3::{Http3, header};
   |                              ^^^^^^

warning: unexpected `cfg` condition value: `worker`
  --> packages/provider/src/clients/huggingface/transcription.rs:51:16
   |
51 |     #[cfg_attr(feature = "worker", worker::send)]
   |                ^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
   = help: consider adding `worker` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/mistral/completion.rs:350:16
    |
350 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/mistral/completion.rs:392:16
    |
392 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `fluent_ai_domain::tool::ToolDefinition`
   --> packages/provider/src/clients/mistral/completion.rs:498:5
    |
498 | use fluent_ai_domain::tool::ToolDefinition;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AsyncTask`
   --> packages/provider/src/clients/mistral/completion.rs:512:24
    |
512 | use fluent_ai_domain::{AsyncTask, spawn_async};
    |                        ^^^^^^^^^

warning: unused import: `HttpError`
   --> packages/provider/src/clients/mistral/completion.rs:514:30
    |
514 | use fluent_ai_http3::{Http3, HttpError};
    |                              ^^^^^^^^^

warning: unused import: `ModelInfo`
   --> packages/provider/src/clients/mistral/completion.rs:520:5
    |
520 |     ModelInfo};
    |     ^^^^^^^^^

warning: unused import: `fluent_ai_http3::HttpStreamExt`
   --> packages/provider/src/clients/mistral/completion.rs:897:17
    |
897 |             use fluent_ai_http3::HttpStreamExt;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/primitives/types.rs:431:25
    |
431 |         let attributes: HashMap<String, Value> = entity
    |                         ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
4   + use std::collections::HashMap;
    |
4   + use fluent_ai_domain::HashMap;
    |

warning: unused import: `fluent_ai_domain::model::AnyEmbeddingCapable`
 --> packages/provider/src/clients/mistral/embedding.rs:1:5
  |
1 | use fluent_ai_domain::model::AnyEmbeddingCapable;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `worker`
  --> packages/provider/src/clients/mistral/embedding.rs:32:16
   |
32 |     #[cfg_attr(feature = "worker", worker::send)]
   |                ^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
   = help: consider adding `worker` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `completion::*`
  --> packages/provider/src/clients/openai/mod.rs:43:9
   |
43 | pub use completion::*;
   |         ^^^^^^^^^^^^^

warning: unused imports: `CompletionClient` and `ProviderClient`
  --> packages/provider/src/clients/openai/mod.rs:49:21
   |
49 | use crate::client::{CompletionClient, ProviderClient};
   |                     ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^

warning: unused import: `CompletionProvider`
  --> packages/provider/src/clients/openai/mod.rs:50:51
   |
50 | use crate::completion_provider::{CompletionError, CompletionProvider};
   |                                                   ^^^^^^^^^^^^^^^^^^

warning: unused import: `AsyncTask`
  --> packages/provider/src/clients/openai/completion.rs:16:94
   |
16 | use crate::domain::{CompletionChunk, FinishReason, Usage, ToolDefinition, Document, Message, AsyncTask, spawn_async};
   |                                                                                              ^^^^^^^^^

warning: unused imports: `OpenAIMessage`, `OpenAIResponseFormat`, `OpenAIStreamingChoice`, `OpenAIStreamingDelta`, and `OpenAIUsage`
  --> packages/provider/src/clients/openai/completion.rs:21:5
   |
21 |     OpenAIMessage, OpenAIResponseFormat, OpenAIStreamingChoice, 
   |     ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^
22 |     OpenAIStreamingChunk, OpenAIStreamingDelta, OpenAIUsage
   |                           ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `HttpError`
  --> packages/provider/src/clients/openai/completion.rs:24:54
   |
24 | use fluent_ai_http3::{Http3, HttpClient, HttpConfig, HttpError};
   |                                                      ^^^^^^^^^

warning: unused import: `once_cell::sync::Lazy`
 --> packages/provider/src/clients/openai/discovery.rs:6:5
  |
6 | use once_cell::sync::Lazy;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize` and `Serialize`
 --> packages/provider/src/clients/openai/discovery.rs:7:13
  |
7 | use serde::{Deserialize, Serialize};
  |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `thiserror::Error`
 --> packages/provider/src/clients/openai/discovery.rs:8:5
  |
8 | use thiserror::Error;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `trace`
 --> packages/provider/src/clients/openai/discovery.rs:9:47
  |
9 | use tracing::{debug, error, info, instrument, trace, warn};
  |                                               ^^^^^

warning: unused import: `error::OpenAIError`
  --> packages/provider/src/clients/openai/discovery.rs:11:35
   |
11 | use super::{client::OpenAIClient, error::OpenAIError};
   |                                   ^^^^^^^^^^^^^^^^^^

warning: unused import: `ModelInfo as ModelInfoFromPackage`
  --> packages/provider/src/clients/openai/discovery.rs:13:44
   |
13 | use model_info::{Provider, OpenAiProvider, ModelInfo as ModelInfoFromPackage};
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `fluent_ai_http3::HttpError`
  --> packages/provider/src/clients/openai/error.rs:22:5
   |
22 | use fluent_ai_http3::HttpError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Message as DomainMessage`
  --> packages/provider/src/clients/openai/messages.rs:13:5
   |
13 |     Message as DomainMessage, MessageRole, ToolCall as DomainToolCall, ToolFunction};
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/systems/episodic.rs:37:19
   |
37 |     pub metadata: HashMap<String, Value>}
   |                   ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
7  + use std::collections::HashMap;
   |
7  + use fluent_ai_domain::HashMap;
   |

warning: unused import: `HttpError`
 --> packages/provider/src/clients/openai/moderation.rs:6:47
  |
6 | use fluent_ai_http3::{HttpClient, HttpConfig, HttpError, HttpRequest};
  |                                               ^^^^^^^^^

warning: unused import: `fluent_ai_http3::HttpClient`
 --> packages/provider/src/clients/openai/streaming.rs:7:5
  |
7 | use fluent_ai_http3::HttpClient;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `TogetherChoice` and `TogetherUsage`
  --> packages/provider/src/clients/together/completion.rs:15:48
   |
15 |     TogetherChatRequest, TogetherChatResponse, TogetherChoice, TogetherContent,
   |                                                ^^^^^^^^^^^^^^
16 |     TogetherFunction, TogetherMessage, TogetherResponseMessage, TogetherStreamingChunk,
17 |     TogetherTool, TogetherUsage};
   |                   ^^^^^^^^^^^^^

warning: unused import: `serde_json::json`
  --> packages/provider/src/clients/together/completion.rs:18:5
   |
18 | use serde_json::json;
   |     ^^^^^^^^^^^^^^^^

warning: unused import: `json_util`
  --> packages/provider/src/clients/together/completion.rs:27:30
   |
27 | use crate::{clients::openai, json_util};
   |                              ^^^^^^^^^

warning: unexpected `cfg` condition value: `worker`
  --> packages/provider/src/clients/together/embedding.rs:66:16
   |
66 |     #[cfg_attr(feature = "worker", worker::send)]
   |                ^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
   = help: consider adding `worker` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `crate::clients::openai::send_compatible_streaming_request`
 --> packages/provider/src/clients/together/streaming.rs:5:5
  |
5 | use crate::clients::openai::send_compatible_streaming_request;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `task::JoinHandle as AsyncTaskHandle`
  --> packages/provider/src/clients/xai/client.rs:25:13
   |
25 | use tokio::{task::JoinHandle as AsyncTaskHandle, task::spawn as spawn_async};
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HttpError`
  --> packages/provider/src/clients/xai/completion.rs:13:30
   |
13 | use fluent_ai_http3::{Http3, HttpError};
   |                              ^^^^^^^^^

warning: unused imports: `Value` and `json`
  --> packages/provider/src/clients/xai/completion.rs:14:18
   |
14 | use serde_json::{Value, json};
   |                  ^^^^^  ^^^^

warning: unused import: `crate::json_util`
  --> packages/provider/src/clients/xai/completion.rs:22:5
   |
22 | use crate::json_util;
   |     ^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/xai/completion.rs:151:16
    |
151 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `worker`
   --> packages/provider/src/clients/xai/completion.rs:181:16
    |
181 |     #[cfg_attr(feature = "worker", worker::send)]
    |                ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `worker` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `header`
 --> packages/provider/src/clients/xai/streaming.rs:7:30
  |
7 | use fluent_ai_http3::{Http3, header};
  |                              ^^^^^^

warning: unexpected `cfg` condition value: `generation`
  --> packages/provider/src/image_processing/mod.rs:13:7
   |
13 | #[cfg(feature = "generation")]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
   = help: consider adding `generation` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
  --> packages/provider/src/image_processing/mod.rs:17:7
   |
17 | #[cfg(feature = "generation")]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
   = help: consider adding `generation` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/mod.rs:294:7
    |
294 | #[cfg(feature = "generation")]
    |       ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `std::sync::Arc`
 --> packages/provider/src/image_processing/candle_backend.rs:7:5
  |
7 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `DType`
 --> packages/provider/src/image_processing/candle_backend.rs:9:19
  |
9 | use candle_core::{DType, Device, Tensor};
  |                   ^^^^^

warning: unused import: `candle_nn::VarBuilder`
  --> packages/provider/src/image_processing/candle_backend.rs:10:5
   |
10 | use candle_nn::VarBuilder;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/candle_backend.rs:799:30
    |
799 |             generation: cfg!(feature = "generation"),
    |                              ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
  --> packages/provider/src/image_processing/factory.rs:45:11
   |
45 |     #[cfg(feature = "generation")]
   |           ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
   = help: consider adding `generation` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:102:11
    |
102 |     #[cfg(feature = "generation")]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:132:11
    |
132 |     #[cfg(feature = "generation")]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:226:11
    |
226 |     #[cfg(feature = "generation")]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:248:11
    |
248 |     #[cfg(feature = "generation")]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:263:11
    |
263 |     #[cfg(feature = "generation")]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:274:11
    |
274 |     #[cfg(feature = "generation")]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:234:19
    |
234 |             #[cfg(feature = "generation")]
    |                   ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `generation`
   --> packages/provider/src/image_processing/factory.rs:289:15
    |
289 |         #[cfg(feature = "generation")]
    |               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `accelerate`, `candle`, `candle-datasets`, `cpal`, `cuda`, `cudnn`, `default`, `dioxus`, `enterpolation`, `flash-attn`, `image`, `metal`, `mkl`, `nccl`, `onnx`, `palette`, `parking`, `rubato`, `safetensors`, `symphonia`, `tokenizers`, `ui`, and `wide-ops`
    = help: consider adding `generation` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `fluent_ai_async::AsyncStream`
   --> packages/provider/src/image_processing/factory.rs:427:5
    |
427 | use fluent_ai_async::AsyncStream;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/memory/systems/episodic.rs:46:23
   |
46 |             metadata: HashMap::new()}
   |                       ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
7  + use std::collections::HashMap;
   |
7  + use fluent_ai_domain::HashMap;
   |

warning: unused import: `Zeroize`
  --> packages/provider/src/security/credentials.rs:18:15
   |
18 | use zeroize::{Zeroize, ZeroizeOnDrop};
   |               ^^^^^^^

warning: unused import: `sleep`
  --> packages/provider/src/security/rotation.rs:16:39
   |
16 | use tokio::time::{Interval, interval, sleep};
   |                                       ^^^^^

warning: unused import: `warn`
  --> packages/provider/src/security/rotation.rs:17:35
   |
17 | use tracing::{debug, error, info, warn};
   |                                   ^^^^

warning: unused import: `RotationConfig`
  --> packages/provider/src/security/rotation.rs:20:63
   |
20 | use super::credentials::{CredentialManager, CredentialSource, RotationConfig};
   |                                                               ^^^^^^^^^^^^^^

warning: unused import: `OneOrMany`
 --> packages/provider/src/client.rs:6:20
  |
6 | use cyrup_sugars::{OneOrMany, ZeroOneOrMany};
  |                    ^^^^^^^^^

warning: unused import: `VoiceChunk`
 --> packages/provider/src/client.rs:7:61
  |
7 | use crate::domain::chunk::{CompletionChunk, EmbeddingChunk, VoiceChunk};
  |                                                             ^^^^^^^^^^

warning: unused import: `std::pin::Pin`
 --> packages/provider/src/streaming/mod.rs:6:5
  |
6 | use std::pin::Pin;
  |     ^^^^^^^^^^^^^

warning: unused imports: `Context` and `Poll`
 --> packages/provider/src/streaming/mod.rs:7:17
  |
7 | use std::task::{Context, Poll};
  |                 ^^^^^^^  ^^^^

warning: unused import: `handle_error`
  --> packages/provider/src/streaming/mod.rs:38:50
   |
38 |         use fluent_ai_async::{AsyncStream, emit, handle_error};
   |                                                  ^^^^^^^^^^^^

warning: unused import: `std::fmt`
 --> packages/provider/src/embeddings/mod.rs:7:5
  |
7 | use std::fmt;
  |     ^^^^^^^^

warning: unused import: `cyrup_sugars::ZeroOneOrMany`
 --> packages/provider/src/embeddings/mod.rs:9:5
  |
9 | use cyrup_sugars::ZeroOneOrMany;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `EmbeddingModel as DomainEmbeddingModel`
  --> packages/provider/src/embeddings/mod.rs:10:46
   |
10 | use fluent_ai_domain::embedding::{Embedding, EmbeddingModel as DomainEmbeddingModel};
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::Deserialize`
  --> packages/provider/src/embeddings/mod.rs:11:5
   |
11 | use serde::Deserialize;
   |     ^^^^^^^^^^^^^^^^^^

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/memory/systems/episodic.rs:88:19
   |
88 |     pub metadata: HashMap<String, Value>}
   |                   ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
7  + use std::collections::HashMap;
   |
7  + use fluent_ai_domain::HashMap;
   |

warning: ambiguous glob re-exports
  --> packages/provider/src/lib.rs:48:9
   |
48 | pub use client::*;
   |         ^^^^^^^^^ the name `EmbeddingModel` in the type namespace is first re-exported here
...
51 | pub use embeddings::*;
   |         ------------- but the name `EmbeddingModel` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> packages/provider/src/lib.rs:51:9
   |
51 | pub use embeddings::*;
   |         ^^^^^^^^^^^^^ the name `Result` in the type namespace is first re-exported here
...
64 | pub use transcription::*;
   |         ---------------- but the name `Result` in the type namespace is also re-exported here

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/memory/systems/episodic.rs:98:23
   |
98 |             metadata: HashMap::new()}
   |                       ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
7  + use std::collections::HashMap;
   |
7  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/systems/episodic.rs:158:25
    |
158 |         let events_map: HashMap<_, _> = events_guard
    |                         ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/systems/history.rs:113:19
    |
113 |     pub metadata: HashMap<String, Value>,
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/systems/history.rs:143:23
    |
143 |             metadata: HashMap::new(),
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/systems/history.rs:372:28
    |
372 |         let mut metadata = HashMap::new();
    |                            ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/systems/procedural.rs:259:19
    |
259 |     pub metadata: HashMap<String, Value>}
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/systems/procedural.rs:275:23
    |
275 |             metadata: HashMap::new()}
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/systems/procedural.rs:431:32
    |
431 |             let mut metadata = HashMap::new();
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
7   + use std::collections::HashMap;
    |
7   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/systems/semantic.rs:123:19
    |
123 |     pub metadata: HashMap<String, Value>}
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/systems/semantic.rs:139:23
    |
139 |             metadata: HashMap::new()}
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/systems/semantic.rs:260:32
    |
260 |             let mut metadata = HashMap::new();
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/memory/systems/semantic.rs:357:19
    |
357 |     pub metadata: HashMap<String, Value>}
    |                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/systems/semantic.rs:378:23
    |
378 |             metadata: HashMap::new()}
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/memory/systems/semantic.rs:489:32
    |
489 |             let mut metadata = HashMap::new();
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
8   + use std::collections::HashMap;
    |
8   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/migration/converter.rs:14:31
   |
14 | pub type ConversionRulesMap = HashMap<(String, String), ConversionRule>;
   |                               ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/migration/converter.rs:51:27
   |
51 |             custom_rules: HashMap::new()}
   |                           ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/migration/schema_migrations.rs:26:14
   |
26 |     applied: HashMap<u32, MigrationRecord>}
   |              ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/migration/schema_migrations.rs:32:22
   |
32 |             applied: HashMap::new()}
   |                      ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/monitoring/health.rs:31:21
   |
31 |     pub components: HashMap<String, ComponentHealth>,
   |                     ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/monitoring/health.rs:52:18
   |
52 |     pub details: HashMap<String, serde_json::Value>}
   |                  ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/monitoring/health.rs:74:26
   |
74 |                 details: HashMap::new()}),
   |                          ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/monitoring/health.rs:98:30
   |
98 |         let mut components = HashMap::new();
   |                              ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/monitoring/health.rs:157:26
    |
157 |                 details: HashMap::new()};
    |                          ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/monitoring/health.rs:286:26
    |
286 |                 details: HashMap::new()};
    |                          ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/monitoring/metrics.rs:22:14
   |
22 |     metrics: HashMap<String, Box<dyn Metric>>}
   |              ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/monitoring/metrics.rs:28:22
   |
28 |             metrics: HashMap::new()}
   |                      ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/monitoring/metrics.rs:44:30
   |
44 |     pub fn collect(&self) -> HashMap<String, MetricValue> {
   |                              ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/monitoring/performance.rs:166:31
    |
166 |     timers: std::sync::RwLock<HashMap<String, Instant>>,
    |                               ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/monitoring/performance.rs:169:34
    |
169 |     durations: std::sync::RwLock<HashMap<String, Vec<Duration>>>}
    |                                  ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/monitoring/performance.rs:175:44
    |
175 |             timers: std::sync::RwLock::new(HashMap::new()),
    |                                            ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/monitoring/performance.rs:176:47
    |
176 |             durations: std::sync::RwLock::new(HashMap::new())}
    |                                               ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/monitoring/performance.rs:224:47
    |
224 |     pub fn report(&self) -> PerformanceResult<HashMap<String, ProfileStats>> {
    |                                               ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/query/index_aware_query.rs:55:14
   |
55 |     indexes: HashMap<String, IndexInfo>}
   |              ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/query/index_aware_query.rs:61:22
   |
61 |             indexes: HashMap::new()}
   |                      ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/query/index_aware_query.rs:199:30
    |
199 |         let mut field_usage: HashMap<Vec<String>, (usize, f64)> = HashMap::new();
    |                              ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/query/index_aware_query.rs:199:67
    |
199 |         let mut field_usage: HashMap<Vec<String>, (usize, f64)> = HashMap::new();
    |                                                                   ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/query/query_monitor.rs:17:24
   |
17 |     active: Arc<RwLock<HashMap<String, ActiveQuery>>>,
   |                        ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/query/query_monitor.rs:93:42
   |
93 |             active: Arc::new(RwLock::new(HashMap::new())),
   |                                          ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/query/query_monitor.rs:202:51
    |
202 |         let queries_by_type = history.iter().fold(HashMap::new(), |mut acc, record| {
    |                                                   ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/query/query_monitor.rs:271:26
    |
271 |     pub queries_by_type: HashMap<QueryType, usize>}
    |                          ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/query/query_optimizer.rs:22:14
   |
22 |     factors: HashMap<String, f64>}
   |              ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/query/query_optimizer.rs:26:27
   |
26 |         let mut factors = HashMap::new();
   |                           ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/query/query_optimizer.rs:49:22
   |
49 |     pub table_sizes: HashMap<String, u64>,
   |                      ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/query/query_optimizer.rs:52:30
   |
52 |     pub index_cardinalities: HashMap<String, u64>,
   |                              ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/query/query_optimizer.rs:55:24
   |
55 |     pub selectivities: HashMap<String, f64>}
   |                        ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/query/query_optimizer.rs:280:25
    |
280 |     pub cost_overrides: HashMap<String, f64>}
    |                         ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/schema/graph_schema.rs:15:21
   |
15 |     pub properties: HashMap<String, serde_json::Value>,
   |                     ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/schema/graph_schema.rs:42:21
   |
42 |     pub properties: HashMap<String, serde_json::Value>,
   |                     ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/schema/graph_schema.rs:57:21
   |
57 |     pub node_types: HashMap<String, NodeTypeDefinition>,
   |                     ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/schema/graph_schema.rs:60:21
   |
60 |     pub edge_types: HashMap<String, EdgeTypeDefinition>,
   |                     ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/schema/graph_schema.rs:175:25
    |
175 |             node_types: HashMap::new(),
    |                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/schema/graph_schema.rs:176:25
    |
176 |             edge_types: HashMap::new(),
    |                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/schema/relationship_schema.rs:35:28
   |
35 |     pub additional_fields: HashMap<String, Value>}
   |                            ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/schema/relationship_schema.rs:34:44
   |
34 |     #[serde(flatten, skip_serializing_if = "HashMap::is_empty")]
   |                                            ^^^^^^^^^^^^^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/schema/relationship_schema.rs:56:32
   |
56 |             additional_fields: HashMap::new()}
   |                                ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/schema/relationship_schema.rs:78:32
   |
78 |             additional_fields: HashMap::new()}
   |                                ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
4  + use std::collections::HashMap;
   |
4  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/transaction/transaction_manager.rs:15:37
   |
15 |     active_transactions: Arc<RwLock<HashMap<String, Arc<Mutex<TransactionImpl>>>>>,
   |                                     ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/transaction/transaction_manager.rs:79:19
   |
79 |     locks: RwLock<HashMap<String, Vec<Lock>>>}
   |                   ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/transaction/transaction_manager.rs:106:55
    |
106 |             active_transactions: Arc::new(RwLock::new(HashMap::new())),
    |                                                       ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/transaction/transaction_manager.rs:344:32
    |
344 |             locks: RwLock::new(HashMap::new())}
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/vector/in_memory.rs:22:14
   |
22 |     vectors: HashMap<String, Vec<f32>>,
   |              ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/vector/in_memory.rs:23:15
   |
23 |     metadata: HashMap<String<String, Value>>}
   |               ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/vector/in_memory.rs:38:22
   |
38 |             vectors: HashMap::new(),
   |                      ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/vector/in_memory.rs:39:23
   |
39 |             metadata: HashMap::new()}
   |                       ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/vector/in_memory.rs:51:22
   |
51 |             vectors: HashMap::with_capacity(capacity),
   |                      ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/vector/in_memory.rs:52:23
   |
52 |             metadata: HashMap::with_capacity(capacity)}
   |                       ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/vector/in_memory.rs:211:25
    |
211 |         filters: Option<HashMap<String, Value>>,
    |                         ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/vector/in_memory.rs:280:52
    |
280 |     fn add_metadata(&mut self, id: &str, metadata: HashMap<String, Value>) -> Result<()> {
    |                                                    ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/vector/in_memory.rs:293:55
    |
293 |     fn update_metadata(&mut self, id: &str, metadata: HashMap<String, Value>) -> Result<()> {
    |                                                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/vector/vector_index.rs:29:21
   |
29 |     pub parameters: HashMap<String, serde_json::Value>}
   |                     ^^^^^^^
   |
  ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-7.0.0-rc2/src/lib.rs:85:1
   |
85 | pub struct DashMap<K, V, S = RandomState> {
   | ----------------------------------------- similarly named struct `DashMap` defined here
   |
help: a struct with a similar name exists
   |
29 -     pub parameters: HashMap<String, serde_json::Value>}
29 +     pub parameters: DashMap<String, serde_json::Value>}
   |
help: consider importing one of these structs
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/vector/vector_index.rs:72:14
   |
72 |     vectors: HashMap<String, Vec<f32>>}
   |              ^^^^^^^
   |
  ::: /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-7.0.0-rc2/src/lib.rs:85:1
   |
85 | pub struct DashMap<K, V, S = RandomState> {
   | ----------------------------------------- similarly named struct `DashMap` defined here
   |
help: a struct with a similar name exists
   |
72 -     vectors: HashMap<String, Vec<f32>>}
72 +     vectors: DashMap<String, Vec<f32>>}
   |
help: consider importing one of these structs
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/vector/vector_index.rs:79:22
   |
79 |             vectors: HashMap::new()}
   |                      ^^^^^^^ use of undeclared type `HashMap`
   |
help: a struct with a similar name exists
   |
79 -             vectors: HashMap::new()}
79 +             vectors: DashMap::new()}
   |
help: consider importing one of these structs
   |
6  + use std::collections::HashMap;
   |
6  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/vector/vector_repository.rs:38:29
   |
38 |     collections: Arc<RwLock<HashMap<String, VectorCollectionHandle>>>,
   |                             ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/vector/vector_repository.rs:55:25
   |
55 |             parameters: HashMap::new()};
   |                         ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
  --> packages/memory/src/vector/vector_repository.rs:58:47
   |
58 |             collections: Arc::new(RwLock::new(HashMap::new())),
   |                                               ^^^^^^^ use of undeclared type `HashMap`
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/vector/vector_search.rs:46:26
   |
46 |     pub metadata: Option<HashMap<String, Value>>,
   |                          ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
10 + use std::collections::HashMap;
   |
10 + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/vector/vector_search.rs:69:19
   |
69 |         metadata: HashMap<String, Value>,
   |                   ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
10 + use std::collections::HashMap;
   |
10 + use fluent_ai_domain::HashMap;
   |

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/device_manager.rs:141:24
    |
141 |     available_devices: SmallVec<[DeviceInfo; 8]>,
    |                        ^^^^^^^^ --------------- supplied 1 generic argument
    |                        |
    |                        expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
141 |     available_devices: SmallVec<[DeviceInfo; 8], N>,
    |                                                +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/device_manager.rs:149:23
    |
149 |     preference_order: SmallVec<[DeviceType; 4]>}
    |                       ^^^^^^^^ --------------- supplied 1 generic argument
    |                       |
    |                       expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
149 |     preference_order: SmallVec<[DeviceType; 4], N>}
    |                                               +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/error.rs:91:20
    |
91  |         available: SmallVec<[CandleDevice; 4]>},
    |                    ^^^^^^^^ ----------------- supplied 1 generic argument
    |                    |
    |                    expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
91  |         available: SmallVec<[CandleDevice; 4], N>},
    |                                              +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/memory_pool.rs:418:20
    |
418 |     pools: ArcSwap<SmallVec<[Arc<MemoryPool>; MAX_SIZE_CLASSES]>>,
    |                    ^^^^^^^^ ----------------------------------- supplied 1 generic argument
    |                    |
    |                    expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
418 |     pools: ArcSwap<SmallVec<[Arc<MemoryPool>; MAX_SIZE_CLASSES], N>>,
    |                                                                +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/memory_pool.rs:420:19
    |
420 |     size_classes: SmallVec<[usize; MAX_SIZE_CLASSES]>,
    |                   ^^^^^^^^ ------------------------- supplied 1 generic argument
    |                   |
    |                   expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
420 |     size_classes: SmallVec<[usize; MAX_SIZE_CLASSES], N>,
    |                                                     +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/streaming.rs:77:21
    |
77  |     pub text_bytes: SmallVec<[u8; MAX_TOKEN_TEXT_LEN]>,
    |                     ^^^^^^^^ ------------------------ supplied 1 generic argument
    |                     |
    |                     expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
77  |     pub text_bytes: SmallVec<[u8; MAX_TOKEN_TEXT_LEN], N>,
    |                                                      +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/tokenizer.rs:33:13
    |
33  |     buffer: SmallVec<[u8; 1024]>,
    |             ^^^^^^^^ ---------- supplied 1 generic argument
    |             |
    |             expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
33  |     buffer: SmallVec<[u8; 1024], N>,
    |                                +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/tokenizer.rs:27:21
    |
27  | pub type TokenIds = SmallVec<[u32; MAX_ENCODE_BATCH]>;
    |                     ^^^^^^^^ ----------------------- supplied 1 generic argument
    |                     |
    |                     expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
27  | pub type TokenIds = SmallVec<[u32; MAX_ENCODE_BATCH], N>;
    |                                                     +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/tokenizer.rs:212:21
    |
212 |     attention_mask: SmallVec<[u8; MAX_ENCODE_BATCH]>,
    |                     ^^^^^^^^ ---------------------- supplied 1 generic argument
    |                     |
    |                     expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
212 |     attention_mask: SmallVec<[u8; MAX_ENCODE_BATCH], N>,
    |                                                    +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/tokenizer.rs:364:19
    |
364 |     partial_utf8: SmallVec<[u8; 4]>,
    |                   ^^^^^^^^ ------- supplied 1 generic argument
    |                   |
    |                   expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
364 |     partial_utf8: SmallVec<[u8; 4], N>,
    |                                   +++

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/vector/vector_search.rs:114:25
    |
114 |     pub filters: Option<HashMap<String, Value>>,
    |                         ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/image_processing/factory.rs:548:28
    |
548 |     pub supported_formats: SmallVec<[ImageFormat; 4]>,
    |                            ^^^^^^^^ ---------------- supplied 1 generic argument
    |                            |
    |                            expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
548 |     pub supported_formats: SmallVec<[ImageFormat; 4], N>,
    |                                                     +++

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/image_processing/factory.rs:594:17
    |
594 |     processors: SmallVec<[Arc<dyn StreamingImageProcessor + Send + Sync>; 8]>,
    |                 ^^^^^^^^ --------------------------------------------------- supplied 1 generic argument
    |                 |
    |                 expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
594 |     processors: SmallVec<[Arc<dyn StreamingImageProcessor + Send + Sync>; 8], N>,
    |                                                                             +++

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> packages/memory/src/vector/vector_search.rs:585:32
    |
585 |         let mut combined_map = HashMap::new();
    |                                ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing one of these structs
    |
10  + use std::collections::HashMap;
    |
10  + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
 --> packages/memory/src/vector/vector_store.rs:8:34
  |
8 | pub type VectorMetadata = Option<HashMap<String, Value>>;
  |                                  ^^^^^^^ not found in this scope
  |
help: consider importing one of these structs
  |
3 + use std::collections::HashMap;
  |
3 + use fluent_ai_domain::HashMap;
  |

error[E0412]: cannot find type `HashMap` in this scope
  --> packages/memory/src/vector/vector_store.rs:80:25
   |
80 |         filters: Option<HashMap<String, Value>>,
   |                         ^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
3  + use std::collections::HashMap;
   |
3  + use fluent_ai_domain::HashMap;
   |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/vector/vector_store.rs:103:52
    |
103 |     fn add_metadata(&mut self, id: &str, metadata: HashMap<String, Value>) -> Result<()> {
    |                                                    ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

error[E0412]: cannot find type `HashMap` in this scope
   --> packages/memory/src/vector/vector_store.rs:130:55
    |
130 |     fn update_metadata(&mut self, id: &str, metadata: HashMap<String, Value>) -> Result<()> {
    |                                                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
3   + use std::collections::HashMap;
    |
3   + use fluent_ai_domain::HashMap;
    |

warning: unused import: `chat::Message`
  --> packages/memory/src/cognitive/committee/committee_evaluators.rs:15:5
   |
15 |     chat::Message,
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `fluent_ai_domain::async_task::AsyncStream`
  --> packages/memory/src/cognitive/common/models.rs:11:5
   |
11 | use fluent_ai_domain::async_task::AsyncStream;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::cognitive::types::EnhancedQuery`
  --> packages/memory/src/cognitive/attention.rs:20:5
   |
20 | use crate::cognitive::types::EnhancedQuery;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `RoutingDecision` and `RoutingStrategy`
  --> packages/memory/src/cognitive/attention.rs:21:31
   |
21 | use crate::cognitive::types::{RoutingDecision, RoutingStrategy};
   |                               ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^

warning: unused import: `chat::Message`
  --> packages/memory/src/cognitive/manager.rs:18:24
   |
18 | use fluent_ai_domain::{chat::Message, completion::CompletionProvider, model::ModelConfig};
   |                        ^^^^^^^^^^^^^

warning: unused import: `fluent_ai_simd::smart_cosine_similarity`
  --> packages/memory/src/cognitive/manager.rs:21:5
   |
21 | use fluent_ai_simd::smart_cosine_similarity;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Receiver` and `Sender`
  --> packages/memory/src/graph/entity.rs:11:25
   |
11 | use crossbeam_channel::{Receiver, Sender, unbounded};
   |                         ^^^^^^^^  ^^^^^^

warning: unused import: `GraphQueryOptions`
  --> packages/memory/src/graph/entity.rs:15:57
   |
15 | use crate::graph::graph_db::{GraphDatabase, GraphError, GraphQueryOptions, Node, Result};
   |                                                         ^^^^^^^^^^^^^^^^^

warning: unused imports: `Receiver` and `Sender`
  --> packages/memory/src/vector/vector_search.rs:14:25
   |
14 | use crossbeam_channel::{Receiver, Sender, unbounded};
   |                         ^^^^^^^^  ^^^^^^

error[E0119]: conflicting implementations of trait `Drop` for type `EncryptionEngine`
   --> packages/provider/src/security/encryption.rs:47:10
    |
47  | #[derive(ZeroizeOnDrop)]
    |          ^^^^^^^^^^^^^ conflicting implementation for `EncryptionEngine`
...
254 | impl Drop for EncryptionEngine {
    | ------------------------------ first implementation here
    |
    = note: this error originates in the derive macro `ZeroizeOnDrop` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0091]: type parameter `Res` is never used
  --> packages/provider/src/clients/anthropic/tools/core.rs:28:36
   |
28 | pub type InvocationHandler<D, Req, Res> =
   |                                    ^^^ unused type parameter
   |
   = help: consider removing `Res` or referring to it in the body of the type alias
   = help: if you intended `Res` to be a const parameter, use `const Res: /* Type */` instead

error[E0277]: `D` cannot be sent between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:373:25
    |
373 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `D` cannot be sent between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:396:19
    |
396 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
397 | where
398 |     D: Send + Sync + 'static,
    |        ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:120:24
    |
120 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `D` with trait `Send`
    |
372 | impl<D: std::marker::Send, Req, Res> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |       +++++++++++++++++++

error[E0277]: `D` cannot be shared between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:373:25
    |
373 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `D` cannot be shared between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:396:19
    |
396 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
397 | where
398 |     D: Send + Sync + 'static,
    |               ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:120:24
    |
120 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `D` with trait `Sync`
    |
372 | impl<D: std::marker::Sync, Req, Res> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |       +++++++++++++++++++

error[E0277]: the trait bound `for<'de> Req: Deserialize<'de>` is not satisfied
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:373:25
    |
373 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ the trait `for<'de> Deserialize<'de>` is not implemented for `Req`
    |
    = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `Req` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:396:19
    |
396 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
399 |     Req: for<'de> Deserialize<'de> + Send + Sync + 'static,
    |          ------------------------- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:120:24
    |
120 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Req` with trait `Deserialize`
    |
372 | impl<D, Req: for<'de> image_processing::_::_serde::Deserialize<'de>, Res> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++

error[E0277]: `Req` cannot be sent between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:373:25
    |
373 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `Req` cannot be sent between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:396:19
    |
396 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
399 |     Req: for<'de> Deserialize<'de> + Send + Sync + 'static,
    |                                      ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:120:24
    |
120 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Req` with trait `Send`
    |
372 | impl<D, Req: std::marker::Send, Res> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |            +++++++++++++++++++

error[E0277]: `Req` cannot be shared between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:373:25
    |
373 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `Req` cannot be shared between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:396:19
    |
396 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
399 |     Req: for<'de> Deserialize<'de> + Send + Sync + 'static,
    |                                             ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:120:24
    |
120 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Req` with trait `Sync`
    |
372 | impl<D, Req: std::marker::Sync, Res> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |            +++++++++++++++++++

error[E0277]: the trait bound `Res: Serialize` is not satisfied
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:373:25
    |
373 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ the trait `Serialize` is not implemented for `Res`
    |
    = note: for local types consider adding `#[derive(serde::Serialize)]` to your `Res` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:396:19
    |
396 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
400 |     Res: Serialize + Send + Sync + 'static,
    |          --------- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:120:24
    |
120 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Res` with trait `Serialize`
    |
372 | impl<D, Req, Res: image_processing::_::_serde::Serialize> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |                 ++++++++++++++++++++++++++++++++++++++++

error[E0277]: `Res` cannot be sent between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:373:25
    |
373 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `Res` cannot be sent between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:396:19
    |
396 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
400 |     Res: Serialize + Send + Sync + 'static,
    |                      ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:120:24
    |
120 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Res` with trait `Send`
    |
372 | impl<D, Req, Res: std::marker::Send> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |                 +++++++++++++++++++

error[E0277]: `Res` cannot be shared between threads safely
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:373:25
    |
373 |     type FinalBuilder = BuiltTool<D, Req, Res>;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ `Res` cannot be shared between threads safely
    |
note: required for `BuiltTool<D, Req, Res>` to implement `FinalTool`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:396:19
    |
396 | impl<D, Req, Res> FinalTool for BuiltTool<D, Req, Res>
    |                   ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^
...
400 |     Res: Serialize + Send + Sync + 'static,
    |                             ---- unsatisfied trait bound introduced here
note: required by a bound in `WithResult::FinalBuilder`
   --> packages/provider/src/clients/anthropic/tools/function_calling.rs:120:24
    |
120 |     type FinalBuilder: FinalTool;
    |                        ^^^^^^^^^ required by this bound in `WithResult::FinalBuilder`
help: consider restricting type parameter `Res` with trait `Sync`
    |
372 | impl<D, Req, Res: std::marker::Sync> WithResult for ToolBuilder<WithResultState, D, Req, Res> {
    |                 +++++++++++++++++++

error[E0107]: struct takes 0 lifetime arguments but 1 lifetime argument was supplied
   --> packages/provider/src/clients/candle/client.rs:714:17
    |
714 |         prompt: Prompt<'a>,
    |                 ^^^^^^---- help: remove the unnecessary generics
    |                 |
    |                 expected 0 lifetime arguments
    |
note: struct defined here, with 0 lifetime parameters
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/prompt/mod.rs:6:12
    |
6   | pub struct Prompt {
    |            ^^^^^^

error[E0107]: enum takes 0 lifetime arguments but 1 lifetime argument was supplied
   --> packages/provider/src/clients/candle/client.rs:716:22
    |
716 |     ) -> AsyncStream<CompletionChunk<'a>> {
    |                      ^^^^^^^^^^^^^^^---- help: remove the unnecessary generics
    |                      |
    |                      expected 0 lifetime arguments
    |
note: enum defined here, with 0 lifetime parameters
   --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:131:10
    |
131 | pub enum CompletionChunk {
    |          ^^^^^^^^^^^^^^^

error[E0107]: struct takes 0 lifetime arguments but 1 lifetime argument was supplied
    --> packages/provider/src/clients/candle/client.rs:1086:17
     |
1086 |         prompt: Prompt<'a>,
     |                 ^^^^^^---- help: remove the unnecessary generics
     |                 |
     |                 expected 0 lifetime arguments
     |
note: struct defined here, with 0 lifetime parameters
    --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/prompt/mod.rs:6:12
     |
6    | pub struct Prompt {
     |            ^^^^^^

error[E0107]: enum takes 0 lifetime arguments but 1 lifetime argument was supplied
    --> packages/provider/src/clients/candle/client.rs:1088:22
     |
1088 |     ) -> AsyncStream<CompletionChunk<'a>> {
     |                      ^^^^^^^^^^^^^^^---- help: remove the unnecessary generics
     |                      |
     |                      expected 0 lifetime arguments
     |
note: enum defined here, with 0 lifetime parameters
    --> /Volumes/samsung_t9/fluent-ai/packages/domain/src/context/chunk.rs:131:10
     |
131  | pub enum CompletionChunk {
     |          ^^^^^^^^^^^^^^^

error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied
   --> packages/provider/src/clients/candle/generation.rs:27:25
    |
27  | pub type LogitsBuffer = SmallVec<[f32; SAMPLING_CACHE_SIZE]>;
    |                         ^^^^^^^^ -------------------------- supplied 1 generic argument
    |                         |
    |                         expected 2 generic arguments
    |
note: struct defined here, with 2 generic parameters: `T`, `N`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-2.0.0-alpha.11/src/lib.rs:302:12
    |
302 | pub struct SmallVec<T, const N: usize> {
    |            ^^^^^^^^ -  --------------
help: add missing generic argument
    |
27  | pub type LogitsBuffer = SmallVec<[f32; SAMPLING_CACHE_SIZE], N>;
    |                                                            +++

error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate
  --> packages/provider/src/clients/mistral/completion.rs:76:1
   |
76 | impl TryFrom<message::Message> for Vec<Message> {
   | ^^^^^-------------------------^^^^^------------
   |      |                             |
   |      |                             `Vec` is not defined in the current crate
   |      `fluent_ai_domain::Message` is not defined in the current crate
   |
   = note: impl doesn't have any local type before any uncovered type parameters
   = note: for more information see https://doc.rust-lang.org/reference/items/implementations.html#orphan-rules
   = note: define and implement a trait or new type instead

error[E0046]: not all trait items implemented, missing: `prompt`
   --> packages/provider/src/clients/mistral/completion.rs:346:1
    |
346 | impl completion::CompletionModel for CompletionModel {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `prompt` in implementation
    |
    = help: implement the missing item: `fn prompt(&self, _: fluent_ai_domain::Prompt, _: &CompletionParams) -> fluent_ai_async::AsyncStream<fluent_ai_domain::context::CompletionChunk> { todo!() }`

error[E0782]: expected a type, found a trait
  --> packages/provider/src/clients/together/streaming.rs:11:6
   |
11 | impl CompletionModel {
   |      ^^^^^^^^^^^^^^^
   |
help: you can add the `dyn` keyword if you want a trait object
   |
11 | impl dyn CompletionModel {
   |      +++
help: you might have intended to implement this trait for a given type
   |
11 | impl CompletionModel for /* Type */ {
   |                      ++++++++++++++

error[E0046]: not all trait items implemented, missing: `prompt`
   --> packages/provider/src/clients/xai/completion.rs:147:1
    |
147 | impl completion::CompletionModel for XaiCompletionModel {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `prompt` in implementation
    |
    = help: implement the missing item: `fn prompt(&self, _: fluent_ai_domain::Prompt, _: &CompletionParams) -> fluent_ai_async::AsyncStream<fluent_ai_domain::context::CompletionChunk> { todo!() }`

error[E0782]: expected a type, found a trait
   --> packages/provider/src/clients/xai/completion.rs:149:30
    |
149 |     type StreamingResponse = StreamingCompletionResponse;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0782]: expected a type, found a trait
  --> packages/provider/src/clients/xai/streaming.rs:20:6
   |
20 | impl CompletionModel {
   |      ^^^^^^^^^^^^^^^
   |
help: you can add the `dyn` keyword if you want a trait object
   |
20 | impl dyn CompletionModel {
   |      +++
help: you might have intended to implement this trait for a given type
   |
20 | impl CompletionModel for /* Type */ {
   |                      ++++++++++++++

error[E0425]: cannot find function `parse_sse_chunk` in this scope
   --> packages/provider/src/clients/together/completion.rs:234:57
    |
234 |                         if let Ok(streaming_response) = parse_sse_chunk(&sse_data) {
    |                                                         ^^^^^^^^^^^^^^^ not found in this scope

Some errors have detailed explanations: E0046, E0091, E0106, E0107, E0117, E0119, E0277, E0365, E0404...
warning: `fluent_ai_provider` (lib) generated 107 warnings
error: could not compile `fluent_ai_provider` (lib) due to 320 previous errors; 107 warnings emitted
error[E0433]: failed to resolve: use of undeclared type `OpenAIClient`
  --> packages/memory/src/cognitive/common/models.rs:90:30
   |
90 |                 let client = OpenAIClient::new(api_key, model_type.display_name())
   |                              ^^^^^^^^^^^^ use of undeclared type `OpenAIClient`

error[E0433]: failed to resolve: use of undeclared type `AnthropicClient`
  --> packages/memory/src/cognitive/common/models.rs:98:30
   |
98 |                 let client = AnthropicClient::new(api_key, model_type.display_name())
   |                              ^^^^^^^^^^^^^^^ use of undeclared type `AnthropicClient`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/memory/manager/surreal.rs:189:6
    |
189 | impl futures_util::Stream for MemoryStream {
    |      ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `futures_util`
   --> packages/memory/src/memory/manager/surreal.rs:210:6
    |
210 | impl futures_util::Stream for RelationshipStream {
    |      ^^^^^^^^^^^^ use of unresolved module or unlinked crate `futures_util`
    |
    = help: if you wanted to use a crate named `futures_util`, use `cargo add futures_util` to add it to your `Cargo.toml`

Some errors have detailed explanations: E0405, E0407, E0412, E0432, E0433.
For more information about an error, try `rustc --explain E0405`.
warning: `fluent_ai_memory` (lib) generated 9 warnings
error: could not compile `fluent_ai_memory` (lib) due to 305 previous errors; 9 warnings emitted
