    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Checking fluent-ai-workspace-hack v0.1.0 (/Volumes/samsung_t9/fluent-ai/workspace-hack)
    Checking sugars_builders v0.1.3 (https://github.com/cyrup-ai/cyrup-sugars?branch=main#a72046f9)
   Compiling fluent_ai_domain v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/domain)
    Checking sugars_builders v0.1.3 (https://github.com/cyrup-ai/cyrup-sugars#a72046f9)
    Checking approx v0.5.1
    Checking plotters-backend v0.3.7
    Checking cast v0.3.0
    Checking tinytemplate v1.2.1
    Checking oorandom v11.1.5
    Checking anes v0.1.6
    Checking termcolor v2.0.0 (/Volumes/samsung_t9/fluent-ai/packages/termcolor)
    Checking assert-json-diff v2.0.2
    Checking similar v2.7.0
    Checking assert_approx_eq v1.1.0
    Checking doc-comment v0.3.3
    Checking hdrhistogram v7.5.4
    Checking quanta v0.12.6
    Checking weak-table v0.3.2
    Checking globwalk v0.9.1
    Checking wait-timeout v0.2.1
    Checking cargo-hakari-regenerate v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/cargo-hakari-regenerate)
    Checking tokio-test v0.4.4
    Checking is-terminal v0.4.16
    Checking float_eq v1.0.1
    Checking criterion-plot v0.5.0
    Checking fluent-ai-async v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/fluent-ai-async)
    Checking plotters-svg v0.3.7
    Checking geo-types v0.7.16
    Checking simba v0.9.0
    Checking assert_cmd v2.0.17
    Checking plotters v0.3.7
    Checking cyrup_sugars v0.1.3 (https://github.com/cyrup-ai/cyrup-sugars#a72046f9)
    Checking cyrup_sugars v0.1.3 (https://github.com/cyrup-ai/cyrup-sugars?branch=main#a72046f9)
    Checking mockito v1.7.0
    Checking assert_fs v1.1.3
    Checking cylo v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/cylo)
    Checking fluent_ai_http3 v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/http3)
    Checking geo v0.28.0
    Checking criterion v0.6.0
    Checking criterion v0.5.1
error[E0428]: the name `ParameterType` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:558:1
    |
48  | pub enum ParameterType {
    | ---------------------- previous definition of the type `ParameterType` here
...
558 | pub enum ParameterType {
    | ^^^^^^^^^^^^^^^^^^^^^^ `ParameterType` redefined here
    |
    = note: `ParameterType` must be defined only once in the type namespace of this module

error[E0428]: the name `TemplateAction` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:720:1
    |
456 | pub enum TemplateAction {
    | ----------------------- previous definition of the type `TemplateAction` here
...
720 | pub enum TemplateAction {
    | ^^^^^^^^^^^^^^^^^^^^^^^ `TemplateAction` redefined here
    |
    = note: `TemplateAction` must be defined only once in the type namespace of this module

error[E0428]: the name `MacroAction` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:733:1
    |
466 | pub enum MacroAction {
    | -------------------- previous definition of the type `MacroAction` here
...
733 | pub enum MacroAction {
    | ^^^^^^^^^^^^^^^^^^^^ `MacroAction` redefined here
    |
    = note: `MacroAction` must be defined only once in the type namespace of this module

error[E0428]: the name `SearchScope` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:744:1
    |
447 | pub enum SearchScope {
    | -------------------- previous definition of the type `SearchScope` here
...
744 | pub enum SearchScope {
    | ^^^^^^^^^^^^^^^^^^^^ `SearchScope` redefined here
    |
    = note: `SearchScope` must be defined only once in the type namespace of this module

error[E0428]: the name `BranchAction` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:753:1
    |
476 | pub enum BranchAction {
    | --------------------- previous definition of the type `BranchAction` here
...
753 | pub enum BranchAction {
    | ^^^^^^^^^^^^^^^^^^^^^ `BranchAction` redefined here
    |
    = note: `BranchAction` must be defined only once in the type namespace of this module

error[E0428]: the name `SessionAction` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:764:1
    |
486 | pub enum SessionAction {
    | ---------------------- previous definition of the type `SessionAction` here
...
764 | pub enum SessionAction {
    | ^^^^^^^^^^^^^^^^^^^^^^ `SessionAction` redefined here
    |
    = note: `SessionAction` must be defined only once in the type namespace of this module

error[E0428]: the name `ToolAction` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:776:1
    |
497 | pub enum ToolAction {
    | ------------------- previous definition of the type `ToolAction` here
...
776 | pub enum ToolAction {
    | ^^^^^^^^^^^^^^^^^^^ `ToolAction` redefined here
    |
    = note: `ToolAction` must be defined only once in the type namespace of this module

error[E0428]: the name `StatsType` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:787:1
    |
508 | pub enum StatsType {
    | ------------------ previous definition of the type `StatsType` here
...
787 | pub enum StatsType {
    | ^^^^^^^^^^^^^^^^^^ `StatsType` redefined here
    |
    = note: `StatsType` must be defined only once in the type namespace of this module

error[E0428]: the name `ThemeAction` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:798:1
    |
519 | pub enum ThemeAction {
    | -------------------- previous definition of the type `ThemeAction` here
...
798 | pub enum ThemeAction {
    | ^^^^^^^^^^^^^^^^^^^^ `ThemeAction` redefined here
    |
    = note: `ThemeAction` must be defined only once in the type namespace of this module

error[E0428]: the name `DebugAction` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:810:1
    |
530 | pub enum DebugAction {
    | -------------------- previous definition of the type `DebugAction` here
...
810 | pub enum DebugAction {
    | ^^^^^^^^^^^^^^^^^^^^ `DebugAction` redefined here
    |
    = note: `DebugAction` must be defined only once in the type namespace of this module

error[E0428]: the name `HistoryAction` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:821:1
    |
541 | pub enum HistoryAction {
    | ---------------------- previous definition of the type `HistoryAction` here
...
821 | pub enum HistoryAction {
    | ^^^^^^^^^^^^^^^^^^^^^^ `HistoryAction` redefined here
    |
    = note: `HistoryAction` must be defined only once in the type namespace of this module

error[E0428]: the name `ImportType` is defined multiple times
   --> packages/domain/src/chat/commands/types.rs:832:1
    |
550 | pub enum ImportType {
    | ------------------- previous definition of the type `ImportType` here
...
832 | pub enum ImportType {
    | ^^^^^^^^^^^^^^^^^^^ `ImportType` redefined here
    |
    = note: `ImportType` must be defined only once in the type namespace of this module

warning: unused variable: `middleware`
   --> packages/http3/src/middleware/cache.rs:292:13
    |
292 |         let middleware = CacheMiddleware::new().with_default_expires_hours(12);
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_middleware`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `fluent_ai_http3` (lib test) generated 1 warning
    Checking fluent-ai-simd v0.1.0 (/Volumes/samsung_t9/fluent-ai/packages/fluent-ai-simd)
    Checking revision v0.11.0
    Checking surrealdb-core v2.3.7
    Checking nalgebra v0.33.2
error[E0425]: cannot find function `async_stream_channel` in this scope
   --> packages/domain/src/chat/formatting.rs:669:32
    |
669 |         let (sender, stream) = async_stream_channel();
    |                                ^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
    = note: function `crate::chat::config::duration_secs::async_stream_channel` exists but is inaccessible
help: consider importing this function
    |
7   + use fluent_ai_async::async_stream_channel;
    |

error[E0425]: cannot find function `spawn_task` in this scope
   --> packages/domain/src/completion/request.rs:170:9
    |
170 |         spawn_task(move || {
    |         ^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these functions
    |
5   + use crate::spawn_task;
    |
5   + use fluent_ai_async::spawn_task;
    |

error[E0425]: cannot find function `spawn_task` in this scope
   --> packages/domain/src/completion/request.rs:195:9
    |
195 |         spawn_task(move || {
    |         ^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these functions
    |
5   + use crate::spawn_task;
    |
5   + use fluent_ai_async::spawn_task;
    |

error[E0425]: cannot find function `spawn_task` in this scope
   --> packages/domain/src/completion/request.rs:215:9
    |
215 |         spawn_task(move || {
    |         ^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these functions
    |
5   + use crate::spawn_task;
    |
5   + use fluent_ai_async::spawn_task;
    |

error[E0425]: cannot find function `async_stream_channel` in the crate root
  --> packages/domain/src/embedding/core.rs:27:41
   |
27 |         let (sender, receiver) = crate::async_stream_channel();
   |                                         ^^^^^^^^^^^^^^^^^^^^ not found in the crate root
   |
   = note: function `crate::chat::config::duration_secs::async_stream_channel` exists but is inaccessible
help: consider importing this function
   |
6  + use fluent_ai_async::async_stream_channel;
   |
help: if you import `async_stream_channel`, refer to it directly
   |
27 -         let (sender, receiver) = crate::async_stream_channel();
27 +         let (sender, receiver) = async_stream_channel();
   |

error[E0425]: cannot find function `async_stream_channel` in this scope
  --> packages/domain/src/init/mod.rs:24:28
   |
24 |     let (sender, stream) = async_stream_channel();
   |                            ^^^^^^^^^^^^^^^^^^^^ not found in this scope
   |
   = note: function `crate::chat::config::duration_secs::async_stream_channel` exists but is inaccessible
help: consider importing this function
   |
5  + use fluent_ai_async::async_stream_channel;
   |

error[E0425]: cannot find function `async_stream_channel` in this scope
  --> packages/domain/src/init/mod.rs:39:28
   |
39 |     let (sender, stream) = async_stream_channel();
   |                            ^^^^^^^^^^^^^^^^^^^^ not found in this scope
   |
   = note: function `crate::chat::config::duration_secs::async_stream_channel` exists but is inaccessible
help: consider importing this function
   |
5  + use fluent_ai_async::async_stream_channel;
   |

error[E0425]: cannot find function `async_stream_channel` in this scope
   --> packages/domain/src/model/resolver.rs:239:32
    |
239 |         let (sender, stream) = async_stream_channel();
    |                                ^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
    = note: function `crate::chat::config::duration_secs::async_stream_channel` exists but is inaccessible
help: consider importing this function
    |
4   + use fluent_ai_async::async_stream_channel;
    |

error[E0425]: cannot find function `async_stream_channel` in this scope
   --> packages/domain/src/model/resolver.rs:341:32
    |
341 |         let (sender, stream) = async_stream_channel();
    |                                ^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
    = note: function `crate::chat::config::duration_secs::async_stream_channel` exists but is inaccessible
help: consider importing this function
    |
4   + use fluent_ai_async::async_stream_channel;
    |

warning: unused import: `fluent_ai_async::async_stream_channel`
  --> packages/domain/src/chat/config.rs:15:5
   |
15 | use fluent_ai_async::async_stream_channel;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::ParameterType`
   --> packages/domain/src/chat/commands/types.rs:557:10
    |
47  | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ----- first implementation here
...
557 | #[derive(Debug, Clone, PartialEq)]
    |          ^^^^^ conflicting implementation for `commands::types::ParameterType`

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::TemplateAction`
   --> packages/domain/src/chat/commands/types.rs:719:10
    |
455 | #[derive(Debug, Clone, PartialEq)]
    |          ----- first implementation here
...
719 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ conflicting implementation for `commands::types::TemplateAction`

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::MacroAction`
   --> packages/domain/src/chat/commands/types.rs:732:10
    |
465 | #[derive(Debug, Clone, PartialEq)]
    |          ----- first implementation here
...
732 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ conflicting implementation for `commands::types::MacroAction`

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::SearchScope`
   --> packages/domain/src/chat/commands/types.rs:743:10
    |
446 | #[derive(Debug, Clone, PartialEq)]
    |          ----- first implementation here
...
743 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ conflicting implementation for `commands::types::SearchScope`

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::BranchAction`
   --> packages/domain/src/chat/commands/types.rs:752:10
    |
475 | #[derive(Debug, Clone, PartialEq)]
    |          ----- first implementation here
...
752 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ conflicting implementation for `commands::types::BranchAction`

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::SessionAction`
   --> packages/domain/src/chat/commands/types.rs:763:10
    |
485 | #[derive(Debug, Clone, PartialEq)]
    |          ----- first implementation here
...
763 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ conflicting implementation for `commands::types::SessionAction`

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::ToolAction`
   --> packages/domain/src/chat/commands/types.rs:775:10
    |
496 | #[derive(Debug, Clone, PartialEq)]
    |          ----- first implementation here
...
775 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ conflicting implementation for `commands::types::ToolAction`

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::StatsType`
   --> packages/domain/src/chat/commands/types.rs:786:10
    |
507 | #[derive(Debug, Clone, PartialEq)]
    |          ----- first implementation here
...
786 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ conflicting implementation for `commands::types::StatsType`

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::ThemeAction`
   --> packages/domain/src/chat/commands/types.rs:797:10
    |
518 | #[derive(Debug, Clone, PartialEq)]
    |          ----- first implementation here
...
797 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ conflicting implementation for `commands::types::ThemeAction`

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::DebugAction`
   --> packages/domain/src/chat/commands/types.rs:809:10
    |
529 | #[derive(Debug, Clone, PartialEq)]
    |          ----- first implementation here
...
809 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ conflicting implementation for `commands::types::DebugAction`

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::HistoryAction`
   --> packages/domain/src/chat/commands/types.rs:820:10
    |
540 | #[derive(Debug, Clone, PartialEq)]
    |          ----- first implementation here
...
820 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ conflicting implementation for `commands::types::HistoryAction`

error[E0119]: conflicting implementations of trait `std::fmt::Debug` for type `commands::types::ImportType`
   --> packages/domain/src/chat/commands/types.rs:831:10
    |
549 | #[derive(Debug, Clone, PartialEq)]
    |          ----- first implementation here
...
831 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ conflicting implementation for `commands::types::ImportType`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::ParameterType`
   --> packages/domain/src/chat/commands/types.rs:557:17
    |
47  | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ----- first implementation here
...
557 | #[derive(Debug, Clone, PartialEq)]
    |                 ^^^^^ conflicting implementation for `commands::types::ParameterType`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::TemplateAction`
   --> packages/domain/src/chat/commands/types.rs:719:17
    |
455 | #[derive(Debug, Clone, PartialEq)]
    |                 ----- first implementation here
...
719 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ conflicting implementation for `commands::types::TemplateAction`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::MacroAction`
   --> packages/domain/src/chat/commands/types.rs:732:17
    |
465 | #[derive(Debug, Clone, PartialEq)]
    |                 ----- first implementation here
...
732 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ conflicting implementation for `commands::types::MacroAction`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::SearchScope`
   --> packages/domain/src/chat/commands/types.rs:743:17
    |
446 | #[derive(Debug, Clone, PartialEq)]
    |                 ----- first implementation here
...
743 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ conflicting implementation for `commands::types::SearchScope`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::BranchAction`
   --> packages/domain/src/chat/commands/types.rs:752:17
    |
475 | #[derive(Debug, Clone, PartialEq)]
    |                 ----- first implementation here
...
752 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ conflicting implementation for `commands::types::BranchAction`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::SessionAction`
   --> packages/domain/src/chat/commands/types.rs:763:17
    |
485 | #[derive(Debug, Clone, PartialEq)]
    |                 ----- first implementation here
...
763 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ conflicting implementation for `commands::types::SessionAction`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::ToolAction`
   --> packages/domain/src/chat/commands/types.rs:775:17
    |
496 | #[derive(Debug, Clone, PartialEq)]
    |                 ----- first implementation here
...
775 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ conflicting implementation for `commands::types::ToolAction`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::StatsType`
   --> packages/domain/src/chat/commands/types.rs:786:17
    |
507 | #[derive(Debug, Clone, PartialEq)]
    |                 ----- first implementation here
...
786 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ conflicting implementation for `commands::types::StatsType`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::ThemeAction`
   --> packages/domain/src/chat/commands/types.rs:797:17
    |
518 | #[derive(Debug, Clone, PartialEq)]
    |                 ----- first implementation here
...
797 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ conflicting implementation for `commands::types::ThemeAction`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::DebugAction`
   --> packages/domain/src/chat/commands/types.rs:809:17
    |
529 | #[derive(Debug, Clone, PartialEq)]
    |                 ----- first implementation here
...
809 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ conflicting implementation for `commands::types::DebugAction`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::HistoryAction`
   --> packages/domain/src/chat/commands/types.rs:820:17
    |
540 | #[derive(Debug, Clone, PartialEq)]
    |                 ----- first implementation here
...
820 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ conflicting implementation for `commands::types::HistoryAction`

error[E0119]: conflicting implementations of trait `Clone` for type `commands::types::ImportType`
   --> packages/domain/src/chat/commands/types.rs:831:17
    |
549 | #[derive(Debug, Clone, PartialEq)]
    |                 ----- first implementation here
...
831 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ conflicting implementation for `commands::types::ImportType`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::ParameterType`
   --> packages/domain/src/chat/commands/types.rs:557:24
    |
47  | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                --------- first implementation here
...
557 | #[derive(Debug, Clone, PartialEq)]
    |                        ^^^^^^^^^ conflicting implementation for `commands::types::ParameterType`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::TemplateAction`
   --> packages/domain/src/chat/commands/types.rs:719:48
    |
455 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
719 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::TemplateAction`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::MacroAction`
   --> packages/domain/src/chat/commands/types.rs:732:48
    |
465 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
732 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::MacroAction`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::SearchScope`
   --> packages/domain/src/chat/commands/types.rs:743:48
    |
446 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
743 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::SearchScope`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::BranchAction`
   --> packages/domain/src/chat/commands/types.rs:752:48
    |
475 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
752 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::BranchAction`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::SessionAction`
   --> packages/domain/src/chat/commands/types.rs:763:48
    |
485 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
763 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::SessionAction`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::ToolAction`
   --> packages/domain/src/chat/commands/types.rs:775:48
    |
496 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
775 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::ToolAction`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::StatsType`
   --> packages/domain/src/chat/commands/types.rs:786:48
    |
507 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
786 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::StatsType`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::ThemeAction`
   --> packages/domain/src/chat/commands/types.rs:797:48
    |
518 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
797 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::ThemeAction`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::DebugAction`
   --> packages/domain/src/chat/commands/types.rs:809:48
    |
529 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
809 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::DebugAction`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::HistoryAction`
   --> packages/domain/src/chat/commands/types.rs:820:48
    |
540 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
820 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::HistoryAction`

error[E0119]: conflicting implementations of trait `StructuralPartialEq` for type `commands::types::ImportType`
   --> packages/domain/src/chat/commands/types.rs:831:48
    |
549 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
831 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::ImportType`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::ParameterType`
   --> packages/domain/src/chat/commands/types.rs:557:24
    |
47  | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                --------- first implementation here
...
557 | #[derive(Debug, Clone, PartialEq)]
    |                        ^^^^^^^^^ conflicting implementation for `commands::types::ParameterType`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::TemplateAction`
   --> packages/domain/src/chat/commands/types.rs:719:48
    |
455 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
719 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::TemplateAction`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::MacroAction`
   --> packages/domain/src/chat/commands/types.rs:732:48
    |
465 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
732 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::MacroAction`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::SearchScope`
   --> packages/domain/src/chat/commands/types.rs:743:48
    |
446 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
743 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::SearchScope`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::BranchAction`
   --> packages/domain/src/chat/commands/types.rs:752:48
    |
475 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
752 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::BranchAction`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::SessionAction`
   --> packages/domain/src/chat/commands/types.rs:763:48
    |
485 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
763 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::SessionAction`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::ToolAction`
   --> packages/domain/src/chat/commands/types.rs:775:48
    |
496 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
775 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::ToolAction`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::StatsType`
   --> packages/domain/src/chat/commands/types.rs:786:48
    |
507 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
786 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::StatsType`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::ThemeAction`
   --> packages/domain/src/chat/commands/types.rs:797:48
    |
518 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
797 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::ThemeAction`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::DebugAction`
   --> packages/domain/src/chat/commands/types.rs:809:48
    |
529 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
809 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::DebugAction`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::HistoryAction`
   --> packages/domain/src/chat/commands/types.rs:820:48
    |
540 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
820 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::HistoryAction`

error[E0119]: conflicting implementations of trait `PartialEq` for type `commands::types::ImportType`
   --> packages/domain/src/chat/commands/types.rs:831:48
    |
549 | #[derive(Debug, Clone, PartialEq)]
    |                        --------- first implementation here
...
831 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                                                ^^^^^^^^^ conflicting implementation for `commands::types::ImportType`

error[E0592]: duplicate definitions with name `parse_template_command`
    --> packages/domain/src/chat/commands/types.rs:1354:5
     |
1027 |     fn parse_template_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ------------------------------------------------------------------------------- other definition for `parse_template_command`
...
1354 |     fn parse_template_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ duplicate definitions for `parse_template_command`

error[E0592]: duplicate definitions with name `parse_macro_command`
    --> packages/domain/src/chat/commands/types.rs:1369:5
     |
1054 |     fn parse_macro_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ---------------------------------------------------------------------------- other definition for `parse_macro_command`
...
1369 |     fn parse_macro_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ duplicate definitions for `parse_macro_command`

error[E0592]: duplicate definitions with name `parse_search_command`
    --> packages/domain/src/chat/commands/types.rs:1392:5
     |
998  |     fn parse_search_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ----------------------------------------------------------------------------- other definition for `parse_search_command`
...
1392 |     fn parse_search_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ duplicate definitions for `parse_search_command`

error[E0592]: duplicate definitions with name `parse_branch_command`
    --> packages/domain/src/chat/commands/types.rs:1407:5
     |
1081 |     fn parse_branch_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ----------------------------------------------------------------------------- other definition for `parse_branch_command`
...
1407 |     fn parse_branch_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ duplicate definitions for `parse_branch_command`

error[E0592]: duplicate definitions with name `parse_session_command`
    --> packages/domain/src/chat/commands/types.rs:1429:5
     |
1108 |     fn parse_session_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ------------------------------------------------------------------------------ other definition for `parse_session_command`
...
1429 |     fn parse_session_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ duplicate definitions for `parse_session_command`

error[E0592]: duplicate definitions with name `parse_tool_command`
    --> packages/domain/src/chat/commands/types.rs:1452:5
     |
1134 |     fn parse_tool_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     --------------------------------------------------------------------------- other definition for `parse_tool_command`
...
1452 |     fn parse_tool_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ duplicate definitions for `parse_tool_command`

error[E0592]: duplicate definitions with name `parse_stats_command`
    --> packages/domain/src/chat/commands/types.rs:1479:5
     |
1164 |     fn parse_stats_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ---------------------------------------------------------------------------- other definition for `parse_stats_command`
...
1479 |     fn parse_stats_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ duplicate definitions for `parse_stats_command`

error[E0592]: duplicate definitions with name `parse_theme_command`
    --> packages/domain/src/chat/commands/types.rs:1502:5
     |
1193 |     fn parse_theme_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ---------------------------------------------------------------------------- other definition for `parse_theme_command`
...
1502 |     fn parse_theme_command(args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ duplicate definitions for `parse_theme_command`

error[E0599]: no variant or associated item named `Share` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:719:10
    |
456 | pub enum TemplateAction {
    | ----------------------- variant or associated item `Share` not found for this enum
...
719 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::TemplateAction`

error[E0599]: no variant or associated item named `Import` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:719:10
    |
456 | pub enum TemplateAction {
    | ----------------------- variant or associated item `Import` not found for this enum
...
719 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::TemplateAction`

error[E0599]: no variant or associated item named `Export` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:719:10
    |
456 | pub enum TemplateAction {
    | ----------------------- variant or associated item `Export` not found for this enum
...
719 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::TemplateAction`

error[E0599]: no variant or associated item named `Share` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:726:5
    |
456 | pub enum TemplateAction {
    | ----------------------- variant or associated item `Share` not found for this enum
...
726 |     Share,
    |     ^^^^^ variant or associated item not found in `commands::types::TemplateAction`

error[E0599]: no variant or associated item named `Import` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:727:5
    |
456 | pub enum TemplateAction {
    | ----------------------- variant or associated item `Import` not found for this enum
...
727 |     Import,
    |     ^^^^^^ variant or associated item not found in `commands::types::TemplateAction`

error[E0599]: no variant or associated item named `Export` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:728:5
    |
456 | pub enum TemplateAction {
    | ----------------------- variant or associated item `Export` not found for this enum
...
728 |     Export,
    |     ^^^^^^ variant or associated item not found in `commands::types::TemplateAction`

error[E0599]: no variant or associated item named `Share` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:719:17
    |
456 | pub enum TemplateAction {
    | ----------------------- variant or associated item `Share` not found for this enum
...
719 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::TemplateAction`

error[E0599]: no variant or associated item named `Import` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:719:17
    |
456 | pub enum TemplateAction {
    | ----------------------- variant or associated item `Import` not found for this enum
...
719 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::TemplateAction`

error[E0599]: no variant or associated item named `Export` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:719:17
    |
456 | pub enum TemplateAction {
    | ----------------------- variant or associated item `Export` not found for this enum
...
719 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::TemplateAction`

error[E0599]: no variant or associated item named `Share` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:726:5
    |
456 |   pub enum TemplateAction {
    |   ----------------------- variant or associated item `Share` not found for this enum
...
720 |   pub enum TemplateAction {
    |  __________-
721 | |     Create,
722 | |     Use,
723 | |     List,
724 | |     Delete,
725 | |     Edit,
726 | |     Share,
    | |    -^^^^^ variant or associated item not found in `commands::types::TemplateAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Import` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:727:5
    |
456 |   pub enum TemplateAction {
    |   ----------------------- variant or associated item `Import` not found for this enum
...
720 |   pub enum TemplateAction {
    |  __________-
721 | |     Create,
722 | |     Use,
723 | |     List,
...   |
726 | |     Share,
727 | |     Import,
    | |    -^^^^^^ variant or associated item not found in `commands::types::TemplateAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Export` found for enum `commands::types::TemplateAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:728:5
    |
456 |   pub enum TemplateAction {
    |   ----------------------- variant or associated item `Export` not found for this enum
...
720 |   pub enum TemplateAction {
    |  __________-
721 | |     Create,
722 | |     Use,
723 | |     List,
...   |
727 | |     Import,
728 | |     Export,
    | |    -^^^^^^ variant or associated item not found in `commands::types::TemplateAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Record` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:732:10
    |
466 | pub enum MacroAction {
    | -------------------- variant or associated item `Record` not found for this enum
...
732 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::MacroAction`

error[E0599]: no variant or associated item named `Play` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:732:10
    |
466 | pub enum MacroAction {
    | -------------------- variant or associated item `Play` not found for this enum
...
732 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::MacroAction`

error[E0599]: no variant or associated item named `Share` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:732:10
    |
466 | pub enum MacroAction {
    | -------------------- variant or associated item `Share` not found for this enum
...
732 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::MacroAction`

error[E0599]: no variant or associated item named `Record` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:734:5
    |
466 | pub enum MacroAction {
    | -------------------- variant or associated item `Record` not found for this enum
...
734 |     Record,
    |     ^^^^^^ variant or associated item not found in `commands::types::MacroAction`

error[E0599]: no variant or associated item named `Play` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:735:5
    |
466 | pub enum MacroAction {
    | -------------------- variant or associated item `Play` not found for this enum
...
735 |     Play,
    |     ^^^^ variant or associated item not found in `commands::types::MacroAction`

error[E0599]: no variant or associated item named `Share` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:739:5
    |
466 | pub enum MacroAction {
    | -------------------- variant or associated item `Share` not found for this enum
...
739 |     Share,
    |     ^^^^^ variant or associated item not found in `commands::types::MacroAction`

error[E0599]: no variant or associated item named `Record` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:732:17
    |
466 | pub enum MacroAction {
    | -------------------- variant or associated item `Record` not found for this enum
...
732 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::MacroAction`

error[E0599]: no variant or associated item named `Play` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:732:17
    |
466 | pub enum MacroAction {
    | -------------------- variant or associated item `Play` not found for this enum
...
732 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::MacroAction`

error[E0599]: no variant or associated item named `Share` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:732:17
    |
466 | pub enum MacroAction {
    | -------------------- variant or associated item `Share` not found for this enum
...
732 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::MacroAction`

error[E0599]: no variant or associated item named `Record` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:734:5
    |
466 |   pub enum MacroAction {
    |   -------------------- variant or associated item `Record` not found for this enum
...
733 |   pub enum MacroAction {
    |  __________-
734 | |     Record,
    | |    -^^^^^^ variant or associated item not found in `commands::types::MacroAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Play` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:735:5
    |
466 |   pub enum MacroAction {
    |   -------------------- variant or associated item `Play` not found for this enum
...
733 |   pub enum MacroAction {
    |  __________-
734 | |     Record,
735 | |     Play,
    | |    -^^^^ variant or associated item not found in `commands::types::MacroAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Share` found for enum `commands::types::MacroAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:739:5
    |
466 |   pub enum MacroAction {
    |   -------------------- variant or associated item `Share` not found for this enum
...
733 |   pub enum MacroAction {
    |  __________-
734 | |     Record,
735 | |     Play,
736 | |     List,
737 | |     Delete,
738 | |     Edit,
739 | |     Share,
    | |    -^^^^^ variant or associated item not found in `commands::types::MacroAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Rename` found for enum `commands::types::BranchAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:752:10
    |
476 | pub enum BranchAction {
    | --------------------- variant or associated item `Rename` not found for this enum
...
752 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::BranchAction`

error[E0599]: no variant or associated item named `Rename` found for enum `commands::types::BranchAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:759:5
    |
476 | pub enum BranchAction {
    | --------------------- variant or associated item `Rename` not found for this enum
...
759 |     Rename,
    |     ^^^^^^ variant or associated item not found in `commands::types::BranchAction`

error[E0599]: no variant or associated item named `Rename` found for enum `commands::types::BranchAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:752:17
    |
476 | pub enum BranchAction {
    | --------------------- variant or associated item `Rename` not found for this enum
...
752 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::BranchAction`

error[E0599]: no variant or associated item named `Rename` found for enum `commands::types::BranchAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:759:5
    |
476 |   pub enum BranchAction {
    |   --------------------- variant or associated item `Rename` not found for this enum
...
753 |   pub enum BranchAction {
    |  __________-
754 | |     Create,
755 | |     Switch,
756 | |     Merge,
757 | |     Delete,
758 | |     List,
759 | |     Rename,
    | |    -^^^^^^ variant or associated item not found in `commands::types::BranchAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Save` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:763:10
    |
486 | pub enum SessionAction {
    | ---------------------- variant or associated item `Save` not found for this enum
...
763 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0599]: no variant or associated item named `Load` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:763:10
    |
486 | pub enum SessionAction {
    | ---------------------- variant or associated item `Load` not found for this enum
...
763 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0599]: no variant or associated item named `Rename` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:763:10
    |
486 | pub enum SessionAction {
    | ---------------------- variant or associated item `Rename` not found for this enum
...
763 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0599]: no variant or associated item named `Save` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:765:5
    |
486 | pub enum SessionAction {
    | ---------------------- variant or associated item `Save` not found for this enum
...
765 |     Save,
    |     ^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0599]: no variant or associated item named `Load` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:766:5
    |
486 | pub enum SessionAction {
    | ---------------------- variant or associated item `Load` not found for this enum
...
766 |     Load,
    |     ^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0599]: no variant or associated item named `Rename` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:769:5
    |
486 | pub enum SessionAction {
    | ---------------------- variant or associated item `Rename` not found for this enum
...
769 |     Rename,
    |     ^^^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0599]: no variant or associated item named `Save` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:763:17
    |
486 | pub enum SessionAction {
    | ---------------------- variant or associated item `Save` not found for this enum
...
763 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0599]: no variant or associated item named `Load` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:763:17
    |
486 | pub enum SessionAction {
    | ---------------------- variant or associated item `Load` not found for this enum
...
763 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0599]: no variant or associated item named `Rename` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:763:17
    |
486 | pub enum SessionAction {
    | ---------------------- variant or associated item `Rename` not found for this enum
...
763 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0599]: no variant or associated item named `Save` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:765:5
    |
486 |   pub enum SessionAction {
    |   ---------------------- variant or associated item `Save` not found for this enum
...
764 |   pub enum SessionAction {
    |  __________-
765 | |     Save,
    | |    -^^^^ variant or associated item not found in `commands::types::SessionAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Load` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:766:5
    |
486 |   pub enum SessionAction {
    |   ---------------------- variant or associated item `Load` not found for this enum
...
764 |   pub enum SessionAction {
    |  __________-
765 | |     Save,
766 | |     Load,
    | |    -^^^^ variant or associated item not found in `commands::types::SessionAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Rename` found for enum `commands::types::SessionAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:769:5
    |
486 |   pub enum SessionAction {
    |   ---------------------- variant or associated item `Rename` not found for this enum
...
764 |   pub enum SessionAction {
    |  __________-
765 | |     Save,
766 | |     Load,
767 | |     List,
768 | |     Delete,
769 | |     Rename,
    | |    -^^^^^^ variant or associated item not found in `commands::types::SessionAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Delete` found for enum `commands::types::ThemeAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:797:10
    |
519 | pub enum ThemeAction {
    | -------------------- variant or associated item `Delete` not found for this enum
...
797 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::ThemeAction`

error[E0599]: no variant or associated item named `Delete` found for enum `commands::types::ThemeAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:805:5
    |
519 | pub enum ThemeAction {
    | -------------------- variant or associated item `Delete` not found for this enum
...
805 |     Delete,
    |     ^^^^^^ variant or associated item not found in `commands::types::ThemeAction`

error[E0599]: no variant or associated item named `Delete` found for enum `commands::types::ThemeAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:797:17
    |
519 | pub enum ThemeAction {
    | -------------------- variant or associated item `Delete` not found for this enum
...
797 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::ThemeAction`

error[E0599]: no variant or associated item named `Delete` found for enum `commands::types::ThemeAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:805:5
    |
519 |   pub enum ThemeAction {
    |   -------------------- variant or associated item `Delete` not found for this enum
...
798 |   pub enum ThemeAction {
    |  __________-
799 | |     Set,
800 | |     List,
801 | |     Create,
...   |
804 | |     Import,
805 | |     Delete,
    | |    -^^^^^^ variant or associated item not found in `commands::types::ThemeAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Import` found for enum `commands::types::HistoryAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:820:10
    |
541 | pub enum HistoryAction {
    | ---------------------- variant or associated item `Import` not found for this enum
...
820 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::HistoryAction`
    |
help: there is a variant with a similar name
    |
820 - #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
820 + #[derive(Export, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |

error[E0599]: no variant or associated item named `Backup` found for enum `commands::types::HistoryAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:820:10
    |
541 | pub enum HistoryAction {
    | ---------------------- variant or associated item `Backup` not found for this enum
...
820 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::HistoryAction`

error[E0599]: no variant or associated item named `Import` found for enum `commands::types::HistoryAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:826:5
    |
541 | pub enum HistoryAction {
    | ---------------------- variant or associated item `Import` not found for this enum
...
826 |     Import,
    |     ^^^^^^ variant or associated item not found in `commands::types::HistoryAction`
    |
help: there is a variant with a similar name
    |
826 -     Import,
826 +     Export,
    |

error[E0599]: no variant or associated item named `Backup` found for enum `commands::types::HistoryAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:827:5
    |
541 | pub enum HistoryAction {
    | ---------------------- variant or associated item `Backup` not found for this enum
...
827 |     Backup,
    |     ^^^^^^ variant or associated item not found in `commands::types::HistoryAction`

error[E0599]: no variant or associated item named `Import` found for enum `commands::types::HistoryAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:820:17
    |
541 | pub enum HistoryAction {
    | ---------------------- variant or associated item `Import` not found for this enum
...
820 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::HistoryAction`
    |
help: there is a variant with a similar name
    |
820 - #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
820 + #[derive(Debug, Export, Serialize, Deserialize, PartialEq, Eq)]
    |

error[E0599]: no variant or associated item named `Backup` found for enum `commands::types::HistoryAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:820:17
    |
541 | pub enum HistoryAction {
    | ---------------------- variant or associated item `Backup` not found for this enum
...
820 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::HistoryAction`

error[E0599]: no variant or associated item named `Import` found for enum `commands::types::HistoryAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:826:5
    |
541 |   pub enum HistoryAction {
    |   ---------------------- variant or associated item `Import` not found for this enum
...
821 |   pub enum HistoryAction {
    |  __________-
822 | |     Show,
823 | |     Search,
824 | |     Clear,
825 | |     Export,
826 | |     Import,
    | |    -^^^^^^ variant or associated item not found in `commands::types::HistoryAction`
    | |____|
    |
    |
help: there is a variant with a similar name
    |
826 -     Import,
826 +     Export,
    |

error[E0599]: no variant or associated item named `Backup` found for enum `commands::types::HistoryAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:827:5
    |
541 |   pub enum HistoryAction {
    |   ---------------------- variant or associated item `Backup` not found for this enum
...
821 |   pub enum HistoryAction {
    |  __________-
822 | |     Show,
823 | |     Search,
824 | |     Clear,
825 | |     Export,
826 | |     Import,
827 | |     Backup,
    | |    -^^^^^^ variant or associated item not found in `commands::types::HistoryAction`
    | |____|
    |

error[E0599]: no variant or associated item named `Import` found for enum `commands::types::HistoryAction` in the current scope
   --> packages/domain/src/chat/commands/types.rs:826:5
    |
541 |   pub enum HistoryAction {
    |   ---------------------- variant or associated item `Import` not found for this enum
...
821 |   pub enum HistoryAction {
    |  __________-
822 | |     Show,
823 | |     Search,
824 | |     Clear,
825 | |     Export,
826 | |     Import,
    | |    -^^^^^^ variant or associated item not found in `commands::types::HistoryAction`
    | |____|
    |
    |
help: there is a variant with a similar name
    |
820 - #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
821 - pub enum HistoryAction {
822 -     Show,
823 -     Search,
824 -     Clear,
825 -     Export,
826 -     Import,
820 + #[derive(Debug, Clone, Serialize, DeserializeExportImport,
    |

error[E0599]: no variant or associated item named `Conversation` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:831:10
    |
550 | pub enum ImportType {
    | ------------------- variant or associated item `Conversation` not found for this enum
...
831 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::ImportType`

error[E0599]: no variant or associated item named `Themes` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:831:10
    |
550 | pub enum ImportType {
    | ------------------- variant or associated item `Themes` not found for this enum
...
831 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::ImportType`

error[E0599]: no variant or associated item named `History` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:831:10
    |
550 | pub enum ImportType {
    | ------------------- variant or associated item `History` not found for this enum
...
831 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |          ^^^^^ variant or associated item not found in `commands::types::ImportType`

error[E0599]: no variant or associated item named `Conversation` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:833:5
    |
550 | pub enum ImportType {
    | ------------------- variant or associated item `Conversation` not found for this enum
...
833 |     Conversation,
    |     ^^^^^^^^^^^^ variant or associated item not found in `commands::types::ImportType`

error[E0599]: no variant or associated item named `Themes` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:837:5
    |
550 | pub enum ImportType {
    | ------------------- variant or associated item `Themes` not found for this enum
...
837 |     Themes,
    |     ^^^^^^ variant or associated item not found in `commands::types::ImportType`

error[E0599]: no variant or associated item named `History` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:838:5
    |
550 | pub enum ImportType {
    | ------------------- variant or associated item `History` not found for this enum
...
838 |     History,
    |     ^^^^^^^ variant or associated item not found in `commands::types::ImportType`

error[E0599]: no variant or associated item named `Conversation` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:831:17
    |
550 | pub enum ImportType {
    | ------------------- variant or associated item `Conversation` not found for this enum
...
831 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::ImportType`

error[E0599]: no variant or associated item named `Themes` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:831:17
    |
550 | pub enum ImportType {
    | ------------------- variant or associated item `Themes` not found for this enum
...
831 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::ImportType`

error[E0599]: no variant or associated item named `History` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:831:17
    |
550 | pub enum ImportType {
    | ------------------- variant or associated item `History` not found for this enum
...
831 | #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
    |                 ^^^^^ variant or associated item not found in `commands::types::ImportType`

error[E0599]: no variant or associated item named `Conversation` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:833:5
    |
550 |   pub enum ImportType {
    |   ------------------- variant or associated item `Conversation` not found for this enum
...
832 |   pub enum ImportType {
    |  __________-
833 | |     Conversation,
    | |    -^^^^^^^^^^^^ variant or associated item not found in `commands::types::ImportType`
    | |____|
    |

error[E0599]: no variant or associated item named `Themes` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:837:5
    |
550 |   pub enum ImportType {
    |   ------------------- variant or associated item `Themes` not found for this enum
...
832 |   pub enum ImportType {
    |  __________-
833 | |     Conversation,
834 | |     Config,
835 | |     Templates,
836 | |     Macros,
837 | |     Themes,
    | |    -^^^^^^ variant or associated item not found in `commands::types::ImportType`
    | |____|
    |

error[E0599]: no variant or associated item named `History` found for enum `commands::types::ImportType` in the current scope
   --> packages/domain/src/chat/commands/types.rs:838:5
    |
550 |   pub enum ImportType {
    |   ------------------- variant or associated item `History` not found for this enum
...
832 |   pub enum ImportType {
    |  __________-
833 | |     Conversation,
834 | |     Config,
835 | |     Templates,
836 | |     Macros,
837 | |     Themes,
838 | |     History,
    | |    -^^^^^^^ variant or associated item not found in `commands::types::ImportType`
    | |____|
    |

error[E0308]: mismatched types
    --> packages/domain/src/chat/commands/types.rs:888:44
     |
888  |                 Self::parse_custom_command(command_name, args)
     |                 -------------------------- ^^^^^^^^^^^^ expected `&str`, found `String`
     |                 |
     |                 arguments to this function are incorrect
     |
note: associated function defined here
    --> packages/domain/src/chat/commands/types.rs:1338:8
     |
1338 |     fn parse_custom_command(name: &str, args: &[&str]) -> CommandResult<ImmutableChatCommand> {
     |        ^^^^^^^^^^^^^^^^^^^^ ----------
help: consider borrowing here
     |
888  |                 Self::parse_custom_command(&command_name, args)
     |                                            +

error[E0559]: variant `commands::types::ImmutableChatCommand::Macro` has no field named `commands`
    --> packages/domain/src/chat/commands/types.rs:1076:56
     |
1076 |         Ok(ImmutableChatCommand::Macro { action, name, commands })
     |                                                        ^^^^^^^^ `commands::types::ImmutableChatCommand::Macro` does not have this field
     |
     = note: available fields are: `auto_execute`

error[E0559]: variant `commands::types::ImmutableChatCommand::Session` has no field named `config`
    --> packages/domain/src/chat/commands/types.rs:1129:58
     |
1129 |         Ok(ImmutableChatCommand::Session { action, name, config })
     |                                                          ^^^^^^ `commands::types::ImmutableChatCommand::Session` does not have this field
     |
     = note: available fields are: `include_config`

error[E0063]: missing fields `action` and `content` in initializer of `commands::types::ImmutableChatCommand`
    --> packages/domain/src/chat/commands/types.rs:1361:12
     |
1361 |         Ok(ImmutableChatCommand::Template {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `action` and `content`

error[E0559]: variant `commands::types::ImmutableChatCommand::Macro` has no field named `definition`
    --> packages/domain/src/chat/commands/types.rs:1386:13
     |
1386 |             definition: if definition.is_empty() { None } else { Some(definition) },
     |             ^^^^^^^^^^ `commands::types::ImmutableChatCommand::Macro` does not have this field
     |
     = note: available fields are: `auto_execute`

error[E0559]: variant `commands::types::ImmutableChatCommand::Search` has no field named `filters`
    --> packages/domain/src/chat/commands/types.rs:1400:13
     |
1400 |             filters: HashMap::new(),
     |             ^^^^^^^ `commands::types::ImmutableChatCommand::Search` does not have this field
     |
     = note: available fields are: `scope`, `include_context`

error[E0063]: missing field `source` in initializer of `commands::types::ImmutableChatCommand`
    --> packages/domain/src/chat/commands/types.rs:1421:12
     |
1421 |         Ok(ImmutableChatCommand::Branch {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `source`

error[E0599]: no variant or associated item named `Create` found for enum `commands::types::SessionAction` in the current scope
    --> packages/domain/src/chat/commands/types.rs:1432:49
     |
486  | pub enum SessionAction {
     | ---------------------- variant or associated item `Create` not found for this enum
...
1432 |                 "create" => Some(SessionAction::Create),
     |                                                 ^^^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0599]: no variant or associated item named `Save` found for enum `commands::types::SessionAction` in the current scope
    --> packages/domain/src/chat/commands/types.rs:1436:47
     |
486  | pub enum SessionAction {
     | ---------------------- variant or associated item `Save` not found for this enum
...
1436 |                 "save" => Some(SessionAction::Save),
     |                                               ^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0599]: no variant or associated item named `Load` found for enum `commands::types::SessionAction` in the current scope
    --> packages/domain/src/chat/commands/types.rs:1437:47
     |
486  | pub enum SessionAction {
     | ---------------------- variant or associated item `Load` not found for this enum
...
1437 |                 "load" => Some(SessionAction::Load),
     |                                               ^^^^ variant or associated item not found in `commands::types::SessionAction`

error[E0063]: missing field `include_config` in initializer of `commands::types::ImmutableChatCommand`
    --> packages/domain/src/chat/commands/types.rs:1444:12
     |
1444 |         Ok(ImmutableChatCommand::Session {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `include_config`

error[E0599]: no variant or associated item named `Memory` found for enum `commands::types::StatsType` in the current scope
    --> packages/domain/src/chat/commands/types.rs:1484:45
     |
508  | pub enum StatsType {
     | ------------------ variant or associated item `Memory` not found for this enum
...
1484 |                 "memory" => Some(StatsType::Memory),
     |                                             ^^^^^^ variant or associated item not found in `commands::types::StatsType`

error[E0599]: no variant or associated item named `Commands` found for enum `commands::types::StatsType` in the current scope
    --> packages/domain/src/chat/commands/types.rs:1485:47
     |
508  | pub enum StatsType {
     | ------------------ variant or associated item `Commands` not found for this enum
...
1485 |                 "commands" => Some(StatsType::Commands),
     |                                               ^^^^^^^^ variant or associated item not found in `commands::types::StatsType`

error[E0599]: no variant or associated item named `Delete` found for enum `commands::types::ThemeAction` in the current scope
    --> packages/domain/src/chat/commands/types.rs:1508:47
     |
519  | pub enum ThemeAction {
     | -------------------- variant or associated item `Delete` not found for this enum
...
1508 |                 "delete" => Some(ThemeAction::Delete),
     |                                               ^^^^^^ variant or associated item not found in `commands::types::ThemeAction`

error[E0599]: no variant or associated item named `Import` found for enum `commands::types::HistoryAction` in the current scope
    --> packages/domain/src/chat/commands/types.rs:1897:36
     |
541  | pub enum HistoryAction {
     | ---------------------- variant or associated item `Import` not found for this enum
...
1897 |                     HistoryAction::Import => "Chat history imported".to_string(),
     |                                    ^^^^^^ variant or associated item not found in `commands::types::HistoryAction`
     |
help: there is a variant with a similar name
     |
1897 -                     HistoryAction::Import => "Chat history imported".to_string(),
1897 +                     HistoryAction::Export => "Chat history imported".to_string(),
     |

error[E0599]: no variant or associated item named `Backup` found for enum `commands::types::HistoryAction` in the current scope
    --> packages/domain/src/chat/commands/types.rs:1898:36
     |
541  | pub enum HistoryAction {
     | ---------------------- variant or associated item `Backup` not found for this enum
...
1898 |                     HistoryAction::Backup => "Chat history backed up".to_string(),
     |                                    ^^^^^^ variant or associated item not found in `commands::types::HistoryAction`

error[E0308]: mismatched types
   --> packages/domain/src/chat/commands/validation.rs:134:41
    |
134 |                 self.validate_tool_args(args)?;
    |                      ------------------ ^^^^ expected `&HashMap<Arc<str>, Arc<str>>`, found `&HashMap<String, String>`
    |                      |
    |                      arguments to this method are incorrect
    |
    = note: expected reference `&std::collections::HashMap<Arc<str>, Arc<str>>`
               found reference `&std::collections::HashMap<std::string::String, std::string::String>`
note: method defined here
   --> packages/domain/src/chat/commands/validation.rs:396:8
    |
396 |     fn validate_tool_args(
    |        ^^^^^^^^^^^^^^^^^^
397 |         &self,
398 |         args: &HashMap<Arc<str>, Arc<str>>,
    |         ----------------------------------

error[E0308]: mismatched types
   --> packages/domain/src/chat/commands/validation.rs:147:48
    |
147 |                 self.validate_theme_properties(properties)?;
    |                      ------------------------- ^^^^^^^^^^ expected `&HashMap<Arc<str>, Arc<str>>`, found `&HashMap<String, String>`
    |                      |
    |                      arguments to this method are incorrect
    |
    = note: expected reference `&std::collections::HashMap<Arc<str>, Arc<str>>`
               found reference `&std::collections::HashMap<std::string::String, std::string::String>`
note: method defined here
   --> packages/domain/src/chat/commands/validation.rs:416:8
    |
416 |     fn validate_theme_properties(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
417 |         &self,
418 |         properties: &HashMap<Arc<str>, Arc<str>>,
    |         ----------------------------------------

error[E0599]: the method `clone` exists for struct `std::sync::RwLockReadGuard<'_, std::option::Option<CommandExecutor>>`, but its trait bounds were not satisfied
   --> packages/domain/src/chat/commands/mod.rs:40:57
    |
40  |     COMMAND_EXECUTOR.read().ok().and_then(|guard| guard.clone())
    |                                                         ^^^^^ method cannot be called due to unsatisfied trait bounds
    |
   ::: packages/domain/src/chat/commands/execution.rs:17:1
    |
17  | pub struct CommandExecutor {
    | -------------------------- doesn't satisfy `CommandExecutor: Clone`
    |
   ::: /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:591:1
    |
591 | pub enum Option<T> {
    | ------------------ doesn't satisfy `std::option::Option<CommandExecutor>: Clone`
    |
    = note: the following trait bounds were not satisfied:
            `CommandExecutor: Clone`
            which is required by `std::option::Option<CommandExecutor>: Clone`
help: consider annotating `CommandExecutor` with `#[derive(Clone)]`
   --> packages/domain/src/chat/commands/execution.rs:17:1
    |
17  + #[derive(Clone)]
18  | pub struct CommandExecutor {
    |

error[E0533]: expected value, found struct variant `CommandError::ConfigurationError`
  --> packages/domain/src/chat/commands/mod.rs:51:13
   |
51 |         Err(CommandError::ConfigurationError(
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a value
   |
help: you might have meant to create a new value of the struct
   |
51 -         Err(CommandError::ConfigurationError(
52 -             "Command executor not initialized".to_string(),
53 -         ))
51 +         Err(CommandError::ConfigurationError { detail: /* value */ })
   |

error[E0599]: no method named `execute` found for struct `CommandExecutor` in the current scope
  --> packages/domain/src/chat/commands/mod.rs:61:29
   |
61 |         let task = executor.execute(command);
   |                             ^^^^^^^ method not found in `CommandExecutor`
   |
  ::: packages/domain/src/chat/commands/execution.rs:17:1
   |
17 | pub struct CommandExecutor {
   | -------------------------- method `execute` not found for this struct
   |
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `execute`, perhaps you need to implement one of them:
           candidate #1: `OpTrait`
           candidate #2: `Plugin`
           candidate #3: `commands::types::CommandHandler`
           candidate #4: `tool::traits::Tool`
           candidate #5: `AsyncBuilder`
           candidate #6: `cyrup_sugars::r#async::EmitterImpl`
           candidate #7: `fluent_ai_http3::async_task::EmitterImpl`
           candidate #8: `hyper::rt::Executor`
           candidate #9: `sugars_async_stream::emitter_builder::EmitterImpl`
           candidate #10: `sugars_builders::async_support::AsyncBuilder`

error[E0533]: expected value, found struct variant `CommandError::ConfigurationError`
  --> packages/domain/src/chat/commands/mod.rs:69:13
   |
69 |         Err(CommandError::ConfigurationError(
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a value
   |
help: you might have meant to create a new value of the struct
   |
69 -         Err(CommandError::ConfigurationError(
70 -             "Command executor not initialized".to_string(),
71 -         ))
69 +         Err(CommandError::ConfigurationError { detail: /* value */ })
   |

error[E0599]: no method named `wait` found for struct `fluent_ai_async::AsyncStream` in the current scope
  --> packages/domain/src/chat/commands/mod.rs:80:20
   |
80 |         match task.wait() {
   |                    ^^^^ method not found in `fluent_ai_async::AsyncStream<commands::types::CommandOutput>`

error[E0559]: variant `commands::types::CommandError::ExecutionFailed` has no field named `reason`
  --> packages/domain/src/chat/commands/mod.rs:83:17
   |
83 |                 reason: Arc::from("Parse and execute task closed without result"),
   |                 ^^^^^^ field does not exist
   |
  ::: packages/domain/src/chat/commands/types.rs:24:5
   |
24 |     ExecutionFailed(String),
   |     --------------- `commands::types::CommandError::ExecutionFailed` defined here
   |
help: `commands::types::CommandError::ExecutionFailed` is a tuple variant, use the appropriate syntax
   |
82 -             None => Err(CommandError::ExecutionFailed {
83 -                 reason: Arc::from("Parse and execute task closed without result"),
84 -             }),
82 +             None => Err(CommandError::ExecutionFailed(/* std::string::String */)),
   |

error[E0533]: expected value, found struct variant `CommandError::ConfigurationError`
  --> packages/domain/src/chat/commands/mod.rs:87:13
   |
87 |         Err(CommandError::ConfigurationError(
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a value
   |
help: you might have meant to create a new value of the struct
   |
87 -         Err(CommandError::ConfigurationError(
88 -             "Command executor not initialized".to_string(),
89 -         ))
87 +         Err(CommandError::ConfigurationError { detail: /* value */ })
   |

error[E0277]: `fluent_ai_async::AsyncStreamSender<ConversationEvent>` doesn't implement `std::fmt::Debug`
   --> packages/domain/src/chat/conversation/mod.rs:131:5
    |
116 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
131 |     event_sender: Option<AsyncStreamSender<ConversationEvent>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::fmt::Debug` is not implemented for `fluent_ai_async::AsyncStreamSender<ConversationEvent>`
    |
    = help: the trait `std::fmt::Debug` is implemented for `std::option::Option<T>`

error[E0599]: no method named `elapsed` found for enum `std::option::Option` in the current scope
   --> packages/domain/src/chat/export.rs:234:54
    |
234 |                 let elapsed_secs = message.timestamp.elapsed().as_secs();
    |                                                      ^^^^^^^ method not found in `std::option::Option<u64>`

error[E0609]: no field `message_type` on type `&message::types::Message`
   --> packages/domain/src/chat/export.rs:238:68
    |
238 |             output.push_str(&format!("**Type:** {:?}\n\n", message.message_type));
    |                                                                    ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `role`, `content`, `id`, `timestamp`

error[E0308]: mismatched types
   --> packages/domain/src/chat/export.rs:239:51
    |
239 |             let content_str = std::str::from_utf8(&message.content).unwrap_or("<invalid utf8>");
    |                               ------------------- ^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&String`
    |                               |
    |                               arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
               found reference `&std::string::String`
note: function defined here
   --> /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/converts.rs:89:14
    |
89  | pub const fn from_utf8(v: &[u8]) -> Result<&str, Utf8Error> {
    |              ^^^^^^^^^

error[E0599]: no method named `elapsed` found for enum `std::option::Option` in the current scope
   --> packages/domain/src/chat/export.rs:256:54
    |
256 |                 let elapsed_secs = message.timestamp.elapsed().as_secs();
    |                                                      ^^^^^^^ method not found in `std::option::Option<u64>`

error[E0308]: mismatched types
   --> packages/domain/src/chat/export.rs:260:51
    |
260 |             let content_str = std::str::from_utf8(&message.content).unwrap_or("<invalid utf8>");
    |                               ------------------- ^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&String`
    |                               |
    |                               arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
               found reference `&std::string::String`
note: function defined here
   --> /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/converts.rs:89:14
    |
89  | pub const fn from_utf8(v: &[u8]) -> Result<&str, Utf8Error> {
    |              ^^^^^^^^^

error[E0609]: no field `message_type` on type `&message::types::Message`
   --> packages/domain/src/chat/export.rs:261:60
    |
261 |             output.push_str(&format!("{:?}: {}\n", message.message_type, content_str));
    |                                                            ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `role`, `content`, `id`, `timestamp`

error[E0599]: no method named `elapsed` found for enum `std::option::Option` in the current scope
   --> packages/domain/src/chat/export.rs:283:54
    |
283 |                 let elapsed_secs = message.timestamp.elapsed().as_secs();
    |                                                      ^^^^^^^ method not found in `std::option::Option<u64>`

error[E0308]: mismatched types
   --> packages/domain/src/chat/export.rs:288:51
    |
288 |             let content_str = std::str::from_utf8(&message.content).unwrap_or("<invalid utf8>");
    |                               ------------------- ^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&String`
    |                               |
    |                               arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
               found reference `&std::string::String`
note: function defined here
   --> /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/converts.rs:89:14
    |
89  | pub const fn from_utf8(v: &[u8]) -> Result<&str, Utf8Error> {
    |              ^^^^^^^^^

error[E0609]: no field `message_type` on type `&message::types::Message`
   --> packages/domain/src/chat/export.rs:292:25
    |
292 |                 message.message_type, escaped_content
    |                         ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `role`, `content`, `id`, `timestamp`

error[E0599]: no method named `duration_since` found for enum `std::option::Option` in the current scope
   --> packages/domain/src/chat/export.rs:374:18
    |
372 |               let timestamp_str = message
    |  _________________________________-
373 | |                 .timestamp
374 | |                 .duration_since(std::time::UNIX_EPOCH)
    | |                 -^^^^^^^^^^^^^^ method not found in `std::option::Option<u64>`
    | |_________________|
    |

error[E0599]: no method named `duration_since` found for enum `std::option::Option` in the current scope
   --> packages/domain/src/chat/export.rs:403:18
    |
401 |               let timestamp_str = message
    |  _________________________________-
402 | |                 .timestamp
403 | |                 .duration_since(std::time::UNIX_EPOCH)
    | |                 -^^^^^^^^^^^^^^ method not found in `std::option::Option<u64>`
    | |_________________|
    |

error[E0599]: no method named `duration_since` found for enum `std::option::Option` in the current scope
   --> packages/domain/src/chat/export.rs:439:18
    |
437 |               let timestamp_str = message
    |  _________________________________-
438 | |                 .timestamp
439 | |                 .duration_since(std::time::UNIX_EPOCH)
    | |                 -^^^^^^^^^^^^^^ method not found in `std::option::Option<u64>`
    | |_________________|
    |

error[E0277]: `fluent_ai_async::AsyncStreamSender<FormattingEvent>` doesn't implement `std::fmt::Debug`
   --> packages/domain/src/chat/formatting.rs:642:5
    |
629 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
642 |     event_sender: Option<AsyncStreamSender<FormattingEvent>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::fmt::Debug` is not implemented for `fluent_ai_async::AsyncStreamSender<FormattingEvent>`
    |
    = help: the trait `std::fmt::Debug` is implemented for `std::option::Option<T>`

error[E0223]: ambiguous associated type
  --> packages/domain/src/chat/message/message_processing.rs:78:9
   |
78 |         Message::User { content } => {
   |         ^^^^^^^^^^^^^
   |
help: if there were a trait named `Example` with associated type `User` implemented for `message::types::Message`, you could use the fully-qualified path
   |
78 -         Message::User { content } => {
78 +         <message::types::Message as Example>::User { content } => {
   |

error[E0223]: ambiguous associated type
  --> packages/domain/src/chat/message/message_processing.rs:83:9
   |
83 |         Message::Assistant { content } => {
   |         ^^^^^^^^^^^^^^^^^^
   |
help: if there were a trait named `Example` with associated type `Assistant` implemented for `message::types::Message`, you could use the fully-qualified path
   |
83 -         Message::Assistant { content } => {
83 +         <message::types::Message as Example>::Assistant { content } => {
   |

error[E0277]: the trait bound `Arc<str>: Borrow<std::string::String>` is not satisfied
   --> packages/domain/src/chat/realtime.rs:279:75
    |
279 |         let typing_state = if let Some(existing) = self.typing_states.get(&key) {
    |                                                                       --- ^^^^ the trait `Borrow<std::string::String>` is not implemented for `Arc<str>`
    |                                                                       |
    |                                                                       required by a bound introduced by this call
    |
    = help: the trait `Borrow<std::string::String>` is not implemented for `Arc<str>`
            but trait `Borrow<str>` is implemented for it
    = help: for that trait implementation, expected `str`, found `std::string::String`
note: required by a bound in `SkipMap::<K, V>::get`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-skiplist-0.1.3/src/map.rs:160:12
    |
158 |     pub fn get<Q>(&self, key: &Q) -> Option<Entry<'_, K, V>>
    |            --- required by a bound in this associated function
159 |     where
160 |         K: Borrow<Q>,
    |            ^^^^^^^^^ required by this bound in `SkipMap::<K, V>::get`

error[E0308]: mismatched types
   --> packages/domain/src/chat/realtime.rs:283:39
    |
283 |             self.typing_states.insert(key, new_state.clone());
    |                                ------ ^^^ expected `Arc<str>`, found `String`
    |                                |
    |                                arguments to this method are incorrect
    |
    = note: expected struct `Arc<str>`
               found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> packages/domain/src/chat/realtime.rs:283:13
    |
283 |             self.typing_states.insert(key, new_state.clone());
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^---^^^^^^^^^^^^^^^^^^^^
    |                                       |
    |                                       this argument influences the return type of `insert`
note: method defined here
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-skiplist-0.1.3/src/map.rs:372:12
    |
372 |     pub fn insert(&self, key: K, value: V) -> Entry<'_, K, V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Arc<str>`
    |
283 |             self.typing_states.insert(key.into(), new_state.clone());
    |                                          +++++++

error[E0277]: the trait bound `Arc<str>: Borrow<std::string::String>` is not satisfied
   --> packages/domain/src/chat/realtime.rs:314:60
    |
314 |         if let Some(typing_state) = self.typing_states.get(&key) {
    |                                                        --- ^^^^ the trait `Borrow<std::string::String>` is not implemented for `Arc<str>`
    |                                                        |
    |                                                        required by a bound introduced by this call
    |
    = help: the trait `Borrow<std::string::String>` is not implemented for `Arc<str>`
            but trait `Borrow<str>` is implemented for it
    = help: for that trait implementation, expected `str`, found `std::string::String`
note: required by a bound in `SkipMap::<K, V>::get`
   --> /Users/davidmaple/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-skiplist-0.1.3/src/map.rs:160:12
    |
158 |     pub fn get<Q>(&self, key: &Q) -> Option<Entry<'_, K, V>>
    |            --- required by a bound in this associated function
159 |     where
160 |         K: Borrow<Q>,
    |            ^^^^^^^^^ required by this bound in `SkipMap::<K, V>::get`

error[E0308]: arguments to this function are incorrect
   --> packages/domain/src/chat/realtime.rs:922:41
    |
922 |         let connection_state = Arc::new(ConnectionState::new(user_id.clone(), session_id.clone()));
    |                                         ^^^^^^^^^^^^^^^^^^^^
    |
note: expected `String`, found `Arc<str>`
   --> packages/domain/src/chat/realtime.rs:922:62
    |
922 |         let connection_state = Arc::new(ConnectionState::new(user_id.clone(), session_id.clone()));
    |                                                              ^^^^^^^^^^^^^^^
    = note: expected struct `std::string::String`
               found struct `Arc<str>`
note: expected `String`, found `Arc<str>`
   --> packages/domain/src/chat/realtime.rs:922:79
    |
922 |         let connection_state = Arc::new(ConnectionState::new(user_id.clone(), session_id.clone()));
    |                                                                               ^^^^^^^^^^^^^^^^^^
    = note: expected struct `std::string::String`
               found struct `Arc<str>`
note: associated function defined here
   --> packages/domain/src/chat/realtime.rs:752:12
    |
752 |     pub fn new(user_id: String, session_id: String) -> Self {
    |            ^^^ ---------------  ------------------
help: try using a conversion method
    |
922 -         let connection_state = Arc::new(ConnectionState::new(user_id.clone(), session_id.clone()));
922 +         let connection_state = Arc::new(ConnectionState::new(user_id.to_string(), session_id.clone()));
    |
help: try using a conversion method
    |
922 -         let connection_state = Arc::new(ConnectionState::new(user_id.clone(), session_id.clone()));
922 +         let connection_state = Arc::new(ConnectionState::new(user_id.clone(), session_id.to_string()));
    |

error[E0308]: mismatched types
   --> packages/domain/src/chat/realtime.rs:962:26
    |
962 |                 user_id: user_id.clone(),
    |                          ^^^^^^^^-----^^
    |                          |       |
    |                          |       help: try using a conversion method: `to_string`
    |                          expected `String`, found `Arc<str>`
    |
    = note: expected struct `std::string::String`
               found struct `Arc<str>`

error[E0308]: mismatched types
   --> packages/domain/src/chat/realtime.rs:963:29
    |
963 |                 session_id: session_id.clone(),
    |                             ^^^^^^^^^^^-----^^
    |                             |          |
    |                             |          help: try using a conversion method: `to_string`
    |                             expected `String`, found `Arc<str>`
    |
    = note: expected struct `std::string::String`
               found struct `Arc<str>`

error[E0308]: mismatched types
   --> packages/domain/src/chat/realtime.rs:990:26
    |
990 |                 user_id: user_id.clone(),
    |                          ^^^^^^^^-----^^
    |                          |       |
    |                          |       help: try using a conversion method: `to_string`
    |                          expected `String`, found `Arc<str>`
    |
    = note: expected struct `std::string::String`
               found struct `Arc<str>`

error[E0308]: mismatched types
   --> packages/domain/src/chat/realtime.rs:991:29
    |
991 |                 session_id: session_id.clone(),
    |                             ^^^^^^^^^^^-----^^
    |                             |          |
    |                             |          help: try using a conversion method: `to_string`
    |                             expected `String`, found `Arc<str>`
    |
    = note: expected struct `std::string::String`
               found struct `Arc<str>`

error[E0609]: no field `role` on type `SearchChatMessage`
   --> packages/domain/src/chat/search.rs:794:50
    |
794 |                 results.sort_by(|a, b| a.message.role.cmp(&b.message.role));
    |                                                  ^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
794 |                 results.sort_by(|a, b| a.message.message.role.cmp(&b.message.role));
    |                                                  ++++++++

error[E0609]: no field `role` on type `SearchChatMessage`
   --> packages/domain/src/chat/search.rs:794:70
    |
794 |                 results.sort_by(|a, b| a.message.role.cmp(&b.message.role));
    |                                                                      ^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
794 |                 results.sort_by(|a, b| a.message.role.cmp(&b.message.message.role));
    |                                                                      ++++++++

error[E0609]: no field `role` on type `SearchChatMessage`
   --> packages/domain/src/chat/search.rs:797:50
    |
797 |                 results.sort_by(|a, b| b.message.role.cmp(&a.message.role));
    |                                                  ^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
797 |                 results.sort_by(|a, b| b.message.message.role.cmp(&a.message.role));
    |                                                  ++++++++

error[E0609]: no field `role` on type `SearchChatMessage`
   --> packages/domain/src/chat/search.rs:797:70
    |
797 |                 results.sort_by(|a, b| b.message.role.cmp(&a.message.role));
    |                                                                      ^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
797 |                 results.sort_by(|a, b| b.message.role.cmp(&a.message.message.role));
    |                                                                      ++++++++

error[E0599]: no function or associated item named `uninit_array` found for union `MaybeUninit` in the current scope
   --> packages/domain/src/completion/candle.rs:460:79
    |
460 |     let mut buffer: [std::mem::MaybeUninit<T>; 1024] = std::mem::MaybeUninit::uninit_array();
    |                                                                               ^^^^^^^^^^^^ function or associated item not found in `MaybeUninit<_>`
    |
note: if you're trying to build a new `MaybeUninit<_>` consider using one of the following associated functions:
      MaybeUninit::<T>::new
      MaybeUninit::<T>::uninit
      MaybeUninit::<T>::zeroed
   --> /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs:307:5
    |
307 |     pub const fn new(val: T) -> MaybeUninit<T> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
330 |     pub const fn uninit() -> MaybeUninit<T> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
380 |     pub const fn zeroed() -> MaybeUninit<T> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `uninit` with a similar name
    |
460 -     let mut buffer: [std::mem::MaybeUninit<T>; 1024] = std::mem::MaybeUninit::uninit_array();
460 +     let mut buffer: [std::mem::MaybeUninit<T>; 1024] = std::mem::MaybeUninit::uninit();
    |

error[E0015]: cannot call non-const formatting macro in constants
  --> packages/domain/src/completion/types.rs:39:21
   |
39 |             None => unreachable!("1 is non-zero"),
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: calls in constants are limited to constant functions, tuple structs and tuple variants

error[E0308]: mismatched types
   --> packages/domain/src/concurrency/mod.rs:110:24
    |
104 | impl<F, T> IntoTask<T> for F
    |      - found this type parameter
...
110 |         AsyncTask::new(self)
    |         -------------- ^^^^ expected `Receiver<T>`, found type parameter `F`
    |         |
    |         arguments to this function are incorrect
    |
    = note:      expected struct `crossbeam::crossbeam_channel::Receiver<T>`
            found type parameter `F`
note: associated function defined here
   --> /Volumes/samsung_t9/fluent-ai/packages/fluent-ai-async/src/task.rs:22:12
    |
22  |     pub fn new(rx: Receiver<T>) -> Self {
    |            ^^^

error[E0599]: no function or associated item named `new` found for struct `completion::request::CompletionRequest` in the current scope
  --> packages/domain/src/context/extraction/extractor.rs:85:57
   |
85 |             let completion_request = CompletionRequest::new()
   |                                                         ^^^ function or associated item not found in `completion::request::CompletionRequest<'_>`
   |
  ::: packages/domain/src/completion/request.rs:21:1
   |
21 | pub struct CompletionRequest<'a> {
   | -------------------------------- function or associated item `new` not found for this struct
   |
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `new`, perhaps you need to implement one of them:
           candidate #1: `AgentRole`
           candidate #2: `Conversation`
           candidate #3: `Extractor`
           candidate #4: `Loader`
           candidate #5: `McpTool`
           candidate #6: `HashMapExt`
           candidate #7: `HashSetExt`
           candidate #8: `aws_lc_rs::aead::BoundKey`
           candidate #9: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
           candidate #10: `brotli::enc::threading::AnyBoxConstructor`
           candidate #11: `crypto_common::KeyInit`
           candidate #12: `crypto_common::KeyIvInit`
           candidate #13: `digest::VariableOutput`
           candidate #14: `digest::core_api::VariableOutputCore`
           candidate #15: `digest::digest::Digest`
           candidate #16: `digest::mac::Mac`
           candidate #17: `parking_lot_core::thread_parker::ThreadParkerT`
           candidate #18: `rand::distr::uniform::UniformSampler`
           candidate #19: `ring::aead::BoundKey`
           candidate #20: `typenum::marker_traits::Bit`

error[E0599]: no function or associated item named `new` found for struct `completion::request::CompletionRequest` in the current scope
   --> packages/domain/src/context/extraction/extractor.rs:208:50
    |
208 |             let mut request = CompletionRequest::new()
    |                                                  ^^^ function or associated item not found in `completion::request::CompletionRequest<'_>`
    |
   ::: packages/domain/src/completion/request.rs:21:1
    |
21  | pub struct CompletionRequest<'a> {
    | -------------------------------- function or associated item `new` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `AgentRole`
            candidate #2: `Conversation`
            candidate #3: `Extractor`
            candidate #4: `Loader`
            candidate #5: `McpTool`
            candidate #6: `HashMapExt`
            candidate #7: `HashSetExt`
            candidate #8: `aws_lc_rs::aead::BoundKey`
            candidate #9: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #10: `brotli::enc::threading::AnyBoxConstructor`
            candidate #11: `crypto_common::KeyInit`
            candidate #12: `crypto_common::KeyIvInit`
            candidate #13: `digest::VariableOutput`
            candidate #14: `digest::core_api::VariableOutputCore`
            candidate #15: `digest::digest::Digest`
            candidate #16: `digest::mac::Mac`
            candidate #17: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #18: `rand::distr::uniform::UniformSampler`
            candidate #19: `ring::aead::BoundKey`
            candidate #20: `typenum::marker_traits::Bit`

error[E0599]: `prompt::Prompt` doesn't implement `std::fmt::Display`
    --> packages/domain/src/context/extraction/extractor.rs:209:37
     |
209  |                 .with_prompt(prompt.to_string())
     |                                     ^^^^^^^^^ method cannot be called on `prompt::Prompt` due to unsatisfied trait bounds
     |
    ::: packages/domain/src/prompt/mod.rs:6:1
     |
6    | pub struct Prompt {
     | ----------------- method `to_string` not found for this struct because it doesn't satisfy `prompt::Prompt: ToString` or `prompt::Prompt: std::fmt::Display`
     |
     = note: the following trait bounds were not satisfied:
             `prompt::Prompt: std::fmt::Display`
             which is required by `prompt::Prompt: ToString`
note: the trait `std::fmt::Display` must be implemented
    --> /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs:1003:1
     |
1003 | pub trait Display: PointeeSized {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `to_string`, perhaps you need to implement it:
             candidate #1: `ToString`

error[E0599]: no method named `complete_stream` found for struct `agent::core::Agent` in the current scope
   --> packages/domain/src/context/extraction/extractor.rs:212:42
    |
212 |             let mut stream = match agent.complete_stream(&request).await {
    |                                          ^^^^^^^^^^^^^^^ method not found in `agent::core::Agent`
    |
   ::: packages/domain/src/agent/core.rs:45:1
    |
45  | pub struct Agent {
    | ---------------- method `complete_stream` not found for this struct

error[E0277]: `fluent_ai_async::AsyncStreamSender<ContextEvent>` doesn't implement `std::fmt::Debug`
   --> packages/domain/src/context/provider.rs:371:5
    |
356 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
371 |     event_sender: Option<AsyncStreamSender<ContextEvent>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::fmt::Debug` is not implemented for `fluent_ai_async::AsyncStreamSender<ContextEvent>`
    |
    = help: the trait `std::fmt::Debug` is implemented for `std::option::Option<T>`

error[E0560]: struct `context::document::Document` has no field named `id`
   --> packages/domain/src/context/provider.rs:503:13
    |
503 |             id: Uuid::new_v4().to_string(),
    |             ^^ `context::document::Document` does not have this field
    |
    = note: available fields are: `data`, `format`, `media_type`, `additional_props`

error[E0560]: struct `context::document::Document` has no field named `content`
   --> packages/domain/src/context/provider.rs:504:13
    |
504 |             content: format!("Content from file: {}", context.path),
    |             ^^^^^^^ `context::document::Document` does not have this field
    |
    = note: available fields are: `data`, `format`, `media_type`, `additional_props`

error[E0560]: struct `context::document::Document` has no field named `metadata`
   --> packages/domain/src/context/provider.rs:505:13
    |
505 |             metadata: {
    |             ^^^^^^^^ `context::document::Document` does not have this field
    |
    = note: available fields are: `data`, `format`, `media_type`, `additional_props`

error[E0560]: struct `context::document::Document` has no field named `embedding`
   --> packages/domain/src/context/provider.rs:512:13
    |
512 |             embedding: None,
    |             ^^^^^^^^^ `context::document::Document` does not have this field
    |
    = note: available fields are: `data`, `format`, `media_type`, `additional_props`

error[E0560]: struct `context::document::Document` has no field named `path`
   --> packages/domain/src/context/provider.rs:680:41
    |
680 | ...                   path: entry.to_string_lossy().to_string(),
    |                       ^^^^ `context::document::Document` does not have this field
    |
    = note: available fields are: `data`, `format`, `media_type`, `additional_props`

error[E0560]: struct `context::document::Document` has no field named `content`
   --> packages/domain/src/context/provider.rs:681:41
    |
681 | ...                   content,
    |                       ^^^^^^^ `context::document::Document` does not have this field
    |
    = note: available fields are: `data`, `format`, `media_type`, `additional_props`

error[E0560]: struct `context::document::Document` has no field named `metadata`
   --> packages/domain/src/context/provider.rs:682:41
    |
682 | ...                   metadata: HashMap::new(),
    |                       ^^^^^^^^ `context::document::Document` does not have this field
    |
    = note: available fields are: `data`, `format`, `media_type`, `additional_props`

error[E0560]: struct `context::document::Document` has no field named `path`
   --> packages/domain/src/context/provider.rs:771:45
    |
771 | ...                   path: path.to_string_lossy().to_string(),
    |                       ^^^^ `context::document::Document` does not have this field
    |
    = note: available fields are: `data`, `format`, `media_type`, `additional_props`

error[E0560]: struct `context::document::Document` has no field named `content`
   --> packages/domain/src/context/provider.rs:772:45
    |
772 | ...                   content,
    |                       ^^^^^^^ `context::document::Document` does not have this field
    |
    = note: available fields are: `data`, `format`, `media_type`, `additional_props`

error[E0560]: struct `context::document::Document` has no field named `metadata`
   --> packages/domain/src/context/provider.rs:773:45
    |
773 | ...                   metadata: HashMap::new(),
    |                       ^^^^^^^^ `context::document::Document` does not have this field
    |
    = note: available fields are: `data`, `format`, `media_type`, `additional_props`

error[E0308]: mismatched types
  --> packages/domain/src/core/mod.rs:70:24
   |
70 |         AsyncTask::new(async move { rx.await.map_err(|_| ChannelError::ReceiveError) }),
   |         -------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Receiver<Result<T, ChannelError>>`, found `async` block
   |         |
   |         arguments to this function are incorrect
   |
   = note:     expected struct `crossbeam::crossbeam_channel::Receiver<std::result::Result<T, ChannelError>>`
           found `async` block `{async block@packages/domain/src/core/mod.rs:70:24: 70:34}`
note: associated function defined here
  --> /Volumes/samsung_t9/fluent-ai/packages/http3/src/async_task/task.rs:25:12
   |
25 |     pub fn new(rx: Receiver<T>) -> Self {
   |            ^^^

error[E0277]: `T` cannot be sent between threads safely
   --> packages/domain/src/core/mod.rs:70:24
    |
70  |         AsyncTask::new(async move { rx.await.map_err(|_| ChannelError::ReceiveError) }),
    |         -------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `T` cannot be sent between threads safely
    |         |
    |         required by a bound introduced by this call
    |
note: required because it appears within the type `std::result::Result<T, ChannelError>`
   --> /Users/davidmaple/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:548:10
    |
548 | pub enum Result<T, E> {
    |          ^^^^^^
note: required by a bound in `fluent_ai_http3::async_task::AsyncTask::<T>::new`
   --> /Volumes/samsung_t9/fluent-ai/packages/http3/src/async_task/task.rs:21:8
    |
21  |     T: Send + 'static,
    |        ^^^^ required by this bound in `AsyncTask::<T>::new`
...
25  |     pub fn new(rx: Receiver<T>) -> Self {
    |            --- required by a bound in this associated function
help: consider restricting type parameter `T` with trait `Send`
    |
63  | pub fn channel<T: std::marker::Send>() -> (
    |                 +++++++++++++++++++

error[E0308]: mismatched types
  --> packages/domain/src/embedding/core.rs:33:13
   |
32 |         match result {
   |               ------ this expression has type `ZeroOneOrMany<f32>`
33 |             Ok(embedding) => {
   |             ^^^^^^^^^^^^^ expected `ZeroOneOrMany<f32>`, found `Result<_, _>`
   |
   = note: expected enum `ZeroOneOrMany<f32>`
              found enum `std::result::Result<_, _>`

error[E0308]: mismatched types
  --> packages/domain/src/embedding/core.rs:37:13
   |
32 |         match result {
   |               ------ this expression has type `ZeroOneOrMany<f32>`
...
37 |             Err(_) => {
   |             ^^^^^^ expected `ZeroOneOrMany<f32>`, found `Result<_, _>`
   |
   = note: expected enum `ZeroOneOrMany<f32>`
              found enum `std::result::Result<_, _>`

error[E0277]: expected a `FnOnce()` closure, found `{async block@packages/domain/src/engine.rs:312:31: 312:41}`
   --> packages/domain/src/engine.rs:312:31
    |
312 |             return spawn_task(async move { Err(e) });
    |                    ---------- ^^^^^^^^^^^^^^^^^^^^^ expected an `FnOnce()` closure, found `{async block@packages/domain/src/engine.rs:312:31: 312:41}`
    |                    |
    |                    required by a bound introduced by this call
    |
    = help: the trait `FnOnce()` is not implemented for `{async block@packages/domain/src/engine.rs:312:31: 312:41}`
    = note: wrap the `{async block@packages/domain/src/engine.rs:312:31: 312:41}` in a closure with no arguments: `|| { /* code */ }`
note: required by a bound in `spawn_task`
   --> /Volumes/samsung_t9/fluent-ai/packages/fluent-ai-async/src/task.rs:67:8
    |
65  | pub fn spawn_task<F, T>(f: F) -> AsyncTask<T>
    |        ---------- required by a bound in this function
66  | where
67  |     F: FnOnce() -> T + Send + 'static,
    |        ^^^^^^^^^^^^^ required by this bound in `spawn_task`

error[E0277]: expected a `FnOnce()` closure, found `{async block@packages/domain/src/engine.rs:345:20: 345:30}`
   --> packages/domain/src/engine.rs:345:20
    |
345 |           spawn_task(async move {
    |  _________----------_^
    | |         |
    | |         required by a bound introduced by this call
346 | |             let result = Self::execute_completion(
347 | |                 request_id,
348 | |                 model_name,
...   |
376 | |             result
377 | |         })
    | |_________^ expected an `FnOnce()` closure, found `{async block@packages/domain/src/engine.rs:345:20: 345:30}`
    |
    = help: the trait `FnOnce()` is not implemented for `{async block@packages/domain/src/engine.rs:345:20: 345:30}`
    = note: wrap the `{async block@packages/domain/src/engine.rs:345:20: 345:30}` in a closure with no arguments: `|| { /* code */ }`
note: required by a bound in `spawn_task`
   --> /Volumes/samsung_t9/fluent-ai/packages/fluent-ai-async/src/task.rs:67:8
    |
65  | pub fn spawn_task<F, T>(f: F) -> AsyncTask<T>
    |        ---------- required by a bound in this function
66  | where
67  |     F: FnOnce() -> T + Send + 'static,
    |        ^^^^^^^^^^^^^ required by this bound in `spawn_task`

error[E0004]: non-exhaustive patterns: `&commands::types::ParameterType::StringArray`, `&commands::types::ParameterType::FilePath`, `&commands::types::ParameterType::Url` and 1 more not covered
   --> packages/domain/src/chat/commands/types.rs:557:10
    |
557 | #[derive(Debug, Clone, PartialEq)]
    |          ^^^^^ patterns `&commands::types::ParameterType::StringArray`, `&commands::types::ParameterType::FilePath`, `&commands::types::ParameterType::Url` and 1 more not covered
    |
note: `commands::types::ParameterType` defined here
   --> packages/domain/src/chat/commands/types.rs:48:10
    |
48  | pub enum ParameterType {
    |          ^^^^^^^^^^^^^
...
58  |     StringArray,
    |     ----------- not covered
59  |     /// File path parameter
60  |     FilePath,
    |     -------- not covered
61  |     /// URL parameter
62  |     Url,
    |     --- not covered
63  |     /// JSON object parameter
64  |     Json,
    |     ---- not covered
    = note: the matched value is of type `&commands::types::ParameterType`

error[E0004]: non-exhaustive patterns: `&commands::types::ParameterType::StringArray`, `&commands::types::ParameterType::FilePath`, `&commands::types::ParameterType::Url` and 1 more not covered
   --> packages/domain/src/chat/commands/types.rs:557:17
    |
557 | #[derive(Debug, Clone, PartialEq)]
    |                 ^^^^^ patterns `&commands::types::ParameterType::StringArray`, `&commands::types::ParameterType::FilePath`, `&commands::types::ParameterType::Url` and 1 more not covered
    |
note: `commands::types::ParameterType` defined here
   --> packages/domain/src/chat/commands/types.rs:48:10
    |
48  | pub enum ParameterType {
    |          ^^^^^^^^^^^^^
...
58  |     StringArray,
    |     ----------- not covered
59  |     /// File path parameter
60  |     FilePath,
    |     -------- not covered
61  |     /// URL parameter
62  |     Url,
    |     --- not covered
63  |     /// JSON object parameter
64  |     Json,
    |     ---- not covered
    = note: the matched value is of type `&commands::types::ParameterType`

warning: unused variable: `context`
  --> packages/domain/src/chat/commands/mod.rs:31:36
   |
31 | pub fn initialize_command_executor(context: CommandContext) {
   |                                    ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`
   |
   = note: `#[warn(unused_variables)]` on by default

error: lifetime may not live long enough
   --> packages/domain/src/completion/response.rs:296:9
    |
228 | impl<'a> CompactCompletionResponseBuilder<'a> {
    |      -- lifetime `'a` defined here
...
296 |         stream
    |         ^^^^^^ returning this value requires that `'a` must outlive `'static`
    |
    = note: requirement occurs because of the type `fluent_ai_async::AsyncStream<CompactCompletionResponse<'_>>`, which makes the generic argument `CompactCompletionResponse<'_>` invariant
    = note: the struct `fluent_ai_async::AsyncStream<T, CAP>` is invariant over the parameter `T`
    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance

Some errors have detailed explanations: E0004, E0015, E0063, E0119, E0223, E0277, E0308, E0425, E0428...
For more information about an error, try `rustc --explain E0004`.
warning: `fluent_ai_domain` (lib) generated 2 warnings (1 duplicate)
error: could not compile `fluent_ai_domain` (lib) due to 237 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `fluent_ai_domain` (lib) generated 2 warnings (1 duplicate)
error: could not compile `fluent_ai_domain` (lib) due to 237 previous errors; 2 warnings emitted
